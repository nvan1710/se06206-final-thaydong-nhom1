{"ast":null,"code":"var _jsxFileName = \"/root/se06206-final-thaydong-nhom1/Chess-game-login/src/components/ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { initialBoardSetup } from \"../data/chessPieces\";\nimport { isValidMove, isKingInCheck } from \"../utils/moveRules\";\nimport pieceImages from \"../assets/pieceImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  PIECE: \"piece\"\n};\nconst Square = ({\n  piece,\n  row,\n  col,\n  movePiece,\n  turn,\n  highlighted\n}) => {\n  _s();\n  const isDark = (row + col) % 2 === 1;\n  const isWhitePiece = \"♙♖♘♗♕♔\".includes(piece);\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: {\n      row,\n      col,\n      piece\n    },\n    canDrag: isWhitePiece && turn === \"white\" || !isWhitePiece && turn === \"black\",\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: item => movePiece(item.row, item.col, row, col)\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: `w-16 h-16 flex justify-center items-center relative border ${isDark ? \"bg-[#8B5A2B]\" : \"bg-[#F0D9B5]\"} ${highlighted ? \"ring-4 ring-yellow-500\" : \"\"}`,\n    children: piece && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: drag,\n      src: pieceImages[piece],\n      alt: piece,\n      className: `w-12 h-12 cursor-pointer transition-transform ${isDragging ? \"opacity-50 scale-90\" : \"hover:scale-110\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Square, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = Square;\nconst Chessboard = () => {\n  _s2();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [turn, setTurn] = useState(\"white\");\n  const [checkStatus, setCheckStatus] = useState(null);\n  const [highlightedMoves, setHighlightedMoves] = useState([]);\n  useEffect(() => {\n    setCheckStatus(isKingInCheck(turn, board) ? `${turn} is in CHECK!` : null);\n  }, [board, turn]);\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n      if (!isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard, turn)) return prevBoard;\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n      setMoveHistory([...moveHistory, `${piece} ${fromRow},${fromCol} → ${toRow},${toCol}`]);\n      setTurn(turn === \"white\" ? \"black\" : \"white\");\n      setHighlightedMoves([]);\n      return newBoard;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-2\",\n        children: [turn.toUpperCase(), \"'s Turn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), checkStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 font-bold\",\n        children: checkStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-8 w-128 h-128 border-4 border-black\",\n          children: board.map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n            piece: piece,\n            row: rowIndex,\n            col: colIndex,\n            movePiece: movePiece,\n            turn: turn,\n            highlighted: highlightedMoves.some(move => move.row === rowIndex && move.col === colIndex)\n          }, `${rowIndex}-${colIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-bold mb-2\",\n            children: \"Move History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-sm bg-gray-200 p-2 rounded w-40 h-64 overflow-y-auto\",\n            children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"mb-1\",\n              children: `${index + 1}. ${move}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chessboard, \"suWtXa28ceKme7z1Z8599h05p3A=\");\n_c2 = Chessboard;\nexport default Chessboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Chessboard\");","map":{"version":3,"names":["React","useState","useEffect","useDrag","useDrop","DndProvider","HTML5Backend","initialBoardSetup","isValidMove","isKingInCheck","pieceImages","jsxDEV","_jsxDEV","ItemTypes","PIECE","Square","piece","row","col","movePiece","turn","highlighted","_s","isDark","isWhitePiece","includes","isDragging","drag","type","item","canDrag","collect","monitor","drop","accept","ref","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chessboard","_s2","board","setBoard","moveHistory","setMoveHistory","setTurn","checkStatus","setCheckStatus","highlightedMoves","setHighlightedMoves","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","backend","toUpperCase","rowIndex","colIndex","some","move","index","_c2","$RefreshReg$"],"sources":["/root/se06206-final-thaydong-nhom1/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { initialBoardSetup } from \"../data/chessPieces\";\nimport { isValidMove, isKingInCheck } from \"../utils/moveRules\";\nimport pieceImages from \"../assets/pieceImages\";\n\nconst ItemTypes = { PIECE: \"piece\" };\n\nconst Square = ({ piece, row, col, movePiece, turn, highlighted }) => {\n  const isDark = (row + col) % 2 === 1;\n  const isWhitePiece = \"♙♖♘♗♕♔\".includes(piece);\n  \n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: { row, col, piece },\n    canDrag: (isWhitePiece && turn === \"white\") || (!isWhitePiece && turn === \"black\"),\n    collect: (monitor) => ({ isDragging: !!monitor.isDragging() }),\n  }));\n  \n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: (item) => movePiece(item.row, item.col, row, col),\n  }));\n\n  return (\n    <div\n      ref={drop}\n      className={`w-16 h-16 flex justify-center items-center relative border ${\n        isDark ? \"bg-[#8B5A2B]\" : \"bg-[#F0D9B5]\"\n      } ${highlighted ? \"ring-4 ring-yellow-500\" : \"\"}`}\n    >\n      {piece && (\n        <img\n          ref={drag}\n          src={pieceImages[piece]}\n          alt={piece}\n          className={`w-12 h-12 cursor-pointer transition-transform ${\n            isDragging ? \"opacity-50 scale-90\" : \"hover:scale-110\"\n          }`}\n        />\n      )}\n    </div>\n  );\n};\n\nconst Chessboard = () => {\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [turn, setTurn] = useState(\"white\");\n  const [checkStatus, setCheckStatus] = useState(null);\n  const [highlightedMoves, setHighlightedMoves] = useState([]);\n\n  useEffect(() => {\n    setCheckStatus(isKingInCheck(turn, board) ? `${turn} is in CHECK!` : null);\n  }, [board, turn]);\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard((prevBoard) => {\n      const newBoard = prevBoard.map((row) => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n      if (!isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard, turn)) return prevBoard;\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n      setMoveHistory([...moveHistory, `${piece} ${fromRow},${fromCol} → ${toRow},${toCol}`]);\n      setTurn(turn === \"white\" ? \"black\" : \"white\");\n      setHighlightedMoves([]);\n      return newBoard;\n    });\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"flex flex-col items-center\">\n        <h2 className=\"text-2xl font-bold mb-2\">{turn.toUpperCase()}'s Turn</h2>\n        {checkStatus && <div className=\"text-red-500 font-bold\">{checkStatus}</div>}\n        <div className=\"flex\">\n          <div className=\"grid grid-cols-8 w-128 h-128 border-4 border-black\">\n            {board.map((row, rowIndex) =>\n              row.map((piece, colIndex) => (\n                <Square\n                  key={`${rowIndex}-${colIndex}`}\n                  piece={piece}\n                  row={rowIndex}\n                  col={colIndex}\n                  movePiece={movePiece}\n                  turn={turn}\n                  highlighted={highlightedMoves.some((move) => move.row === rowIndex && move.col === colIndex)}\n                />\n              ))\n            )}\n          </div>\n          <div className=\"ml-4\">\n            <h2 className=\"text-lg font-bold mb-2\">Move History</h2>\n            <ul className=\"text-sm bg-gray-200 p-2 rounded w-40 h-64 overflow-y-auto\">\n              {moveHistory.map((move, index) => (\n                <li key={index} className=\"mb-1\">{`${index + 1}. ${move}`}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}