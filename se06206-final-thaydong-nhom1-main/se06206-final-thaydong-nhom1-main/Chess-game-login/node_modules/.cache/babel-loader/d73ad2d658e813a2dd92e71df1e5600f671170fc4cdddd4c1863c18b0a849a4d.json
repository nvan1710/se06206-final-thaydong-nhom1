{"ast":null,"code":"var _jsxFileName = \"D:\\\\se06206-final-thaydong-nhom1-main\\\\se06206-final-thaydong-nhom1-main\\\\Chess-game-login\\\\src\\\\components\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { isValidMove } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate } from \"../utils/checkmate\"; // Import kiểm tra chiếu\nimport pieceImages from \"../assets/pieceImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  PIECE: \"piece\"\n};\nconst Square = ({\n  piece,\n  row,\n  col,\n  movePiece\n}) => {\n  _s();\n  const isDark = (row + col) % 2 === 1;\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: {\n      row,\n      col,\n      piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: item => movePiece(item.row, item.col, row, col)\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: `w-16 h-16 flex justify-center items-center\n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}`,\n    children: piece && pieceImages[piece] && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: drag,\n      src: pieceImages[piece],\n      alt: piece,\n      className: `w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-grab\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Square, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = Square;\nconst Chessboard = () => {\n  _s2();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n      const targetPiece = newBoard[toRow][toCol];\n      if (isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard)) {\n        const isWhiteTurn = \"♙♖♘♗♕♔\".includes(piece);\n        if (targetPiece !== \"\" && isWhiteTurn === \"♙♖♘♗♕♔\".includes(targetPiece)) {\n          return prevBoard;\n        }\n\n        // Di chuyển quân cờ\n        newBoard[toRow][toCol] = piece;\n        newBoard[fromRow][fromCol] = \"\";\n        setMoveHistory(prevHistory => [...prevHistory, targetPiece ? `${piece} ${convertToChessNotation(fromRow, fromCol)} captures ${targetPiece} at ${convertToChessNotation(toRow, toCol)}` : `${piece} ${convertToChessNotation(fromRow, fromCol)} → ${convertToChessNotation(toRow, toCol)}`]);\n\n        // Kiểm tra chiếu tướng & chiếu hết\n        setIsCheck(isKingInCheck(newBoard, !isWhiteTurn));\n        setIsCheckMate(isCheckmate(newBoard, !isWhiteTurn));\n        return newBoard;\n      }\n      return prevBoard;\n    });\n  };\n  const convertToChessNotation = (row, col) => {\n    const files = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n    return `${files[col]}${8 - row}`;\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col justify-center items-center bg-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"\\u265F\\uFE0F Chess Game \\u265F\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), isCheck && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-600 text-lg font-bold\",\n        children: \"\\uD83D\\uDD25 Vua \\u0111ang b\\u1ECB chi\\u1EBFu! \\uD83D\\uDD25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), isCheckMate && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-800 text-lg font-bold\",\n        children: \"\\uD83C\\uDFC6 Chi\\u1EBFu h\\u1EBFt! Tr\\xF2 ch\\u01A1i k\\u1EBFt th\\xFAc \\uD83C\\uDFC6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-8 border-4 border-black shadow-lg\",\n        children: board.map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n          piece: piece,\n          row: rowIndex,\n          col: colIndex,\n          movePiece: movePiece\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chessboard, \"SBi3VtkQKveDiBO2upvbXErXl7c=\");\n_c2 = Chessboard;\nexport default Chessboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Chessboard\");","map":{"version":3,"names":["React","useState","useEffect","useDrag","useDrop","DndProvider","HTML5Backend","isValidMove","initialBoardSetup","isKingInCheck","isCheckmate","pieceImages","jsxDEV","_jsxDEV","ItemTypes","PIECE","Square","piece","row","col","movePiece","_s","isDark","isDragging","drag","type","item","collect","monitor","drop","accept","ref","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chessboard","_s2","board","setBoard","moveHistory","setMoveHistory","isCheck","setIsCheck","isCheckMate","setIsCheckMate","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","targetPiece","isWhiteTurn","includes","prevHistory","convertToChessNotation","files","backend","rowIndex","colIndex","_c2","$RefreshReg$"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { isValidMove } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate } from \"../utils/checkmate\"; // Import kiểm tra chiếu\nimport pieceImages from \"../assets/pieceImages\";\n\nconst ItemTypes = { PIECE: \"piece\" };\n\nconst Square = ({ piece, row, col, movePiece }) => {\n  const isDark = (row + col) % 2 === 1;\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: { row, col, piece },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: (item) => movePiece(item.row, item.col, row, col),\n  }));\n\n  return (\n    <div\n      ref={drop}\n      className={`w-16 h-16 flex justify-center items-center\n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}`}\n    >\n      {piece && pieceImages[piece] && (\n        <img\n          ref={drag}\n          src={pieceImages[piece]}\n          alt={piece}\n          className={`w-12 h-12 object-contain ${\n            isDragging ? \"opacity-50\" : \"cursor-grab\"\n          }`}\n        />\n      )}\n    </div>\n  );\n};\n\nconst Chessboard = () => {\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard((prevBoard) => {\n      const newBoard = prevBoard.map((row) => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n      const targetPiece = newBoard[toRow][toCol];\n\n      if (isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard)) {\n        const isWhiteTurn = \"♙♖♘♗♕♔\".includes(piece);\n\n        if (targetPiece !== \"\" && isWhiteTurn === \"♙♖♘♗♕♔\".includes(targetPiece)) {\n          return prevBoard;\n        }\n\n        // Di chuyển quân cờ\n        newBoard[toRow][toCol] = piece;\n        newBoard[fromRow][fromCol] = \"\";\n\n        setMoveHistory((prevHistory) => [\n          ...prevHistory,\n          targetPiece\n            ? `${piece} ${convertToChessNotation(fromRow, fromCol)} captures ${targetPiece} at ${convertToChessNotation(toRow, toCol)}`\n            : `${piece} ${convertToChessNotation(fromRow, fromCol)} → ${convertToChessNotation(toRow, toCol)}`,\n        ]);\n\n        // Kiểm tra chiếu tướng & chiếu hết\n        setIsCheck(isKingInCheck(newBoard, !isWhiteTurn));\n        setIsCheckMate(isCheckmate(newBoard, !isWhiteTurn));\n\n        return newBoard;\n      }\n\n      return prevBoard;\n    });\n  };\n\n  const convertToChessNotation = (row, col) => {\n    const files = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n    return `${files[col]}${8 - row}`;\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-gray-200\">\n        <h1 className=\"text-2xl font-bold\">♟️ Chess Game ♟️</h1>\n\n        {isCheck && <div className=\"text-red-600 text-lg font-bold\">🔥 Vua đang bị chiếu! 🔥</div>}\n        {isCheckMate && <div className=\"text-red-800 text-lg font-bold\">🏆 Chiếu hết! Trò chơi kết thúc 🏆</div>}\n\n        <div className=\"grid grid-cols-8 border-4 border-black shadow-lg\">\n          {board.map((row, rowIndex) =>\n            row.map((piece, colIndex) => (\n              <Square\n                key={`${rowIndex}-${colIndex}`}\n                piece={piece}\n                row={rowIndex}\n                col={colIndex}\n                movePiece={movePiece}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,OAAO,EAAEC,WAAW,QAAQ,WAAW;AACzD,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,aAAa,EAAEC,WAAW,QAAQ,oBAAoB,CAAC,CAAC;AACjE,OAAOC,WAAW,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAG;EAAEC,KAAK,EAAE;AAAQ,CAAC;AAEpC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC,GAAG;EAAEC,GAAG;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAMC,MAAM,GAAG,CAACJ,GAAG,GAAGC,GAAG,IAAI,CAAC,KAAK,CAAC;EAEpC,MAAM,CAAC;IAAEI;EAAW,CAAC,EAAEC,IAAI,CAAC,GAAGrB,OAAO,CAAC,OAAO;IAC5CsB,IAAI,EAAEX,SAAS,CAACC,KAAK;IACrBW,IAAI,EAAE;MAAER,GAAG;MAAEC,GAAG;MAAEF;IAAM,CAAC;IACzBU,OAAO,EAAGC,OAAO,KAAM;MACrBL,UAAU,EAAE,CAAC,CAACK,OAAO,CAACL,UAAU,CAAC;IACnC,CAAC;EACH,CAAC,CAAC,CAAC;EAEH,MAAM,GAAGM,IAAI,CAAC,GAAGzB,OAAO,CAAC,OAAO;IAC9B0B,MAAM,EAAEhB,SAAS,CAACC,KAAK;IACvBc,IAAI,EAAGH,IAAI,IAAKN,SAAS,CAACM,IAAI,CAACR,GAAG,EAAEQ,IAAI,CAACP,GAAG,EAAED,GAAG,EAAEC,GAAG;EACxD,CAAC,CAAC,CAAC;EAEH,oBACEN,OAAA;IACEkB,GAAG,EAAEF,IAAK;IACVG,SAAS,EAAE;AACjB,UAAUV,MAAM,GAAG,cAAc,GAAG,cAAc,EAAG;IAAAW,QAAA,EAE9ChB,KAAK,IAAIN,WAAW,CAACM,KAAK,CAAC,iBAC1BJ,OAAA;MACEkB,GAAG,EAAEP,IAAK;MACVU,GAAG,EAAEvB,WAAW,CAACM,KAAK,CAAE;MACxBkB,GAAG,EAAElB,KAAM;MACXe,SAAS,EAAE,4BACTT,UAAU,GAAG,YAAY,GAAG,aAAa;IACxC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlCIL,MAAM;EAAA,QAGqBb,OAAO,EAQrBC,OAAO;AAAA;AAAAoC,EAAA,GAXpBxB,MAAM;AAoCZ,MAAMyB,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG3C,QAAQ,CAACO,iBAAiB,CAAC;EACrD,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC8C,OAAO,EAAEC,UAAU,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgD,WAAW,EAAEC,cAAc,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMmB,SAAS,GAAGA,CAAC+B,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACpDV,QAAQ,CAAEW,SAAS,IAAK;MACtB,MAAMC,QAAQ,GAAGD,SAAS,CAACE,GAAG,CAAEvC,GAAG,IAAK,CAAC,GAAGA,GAAG,CAAC,CAAC;MACjD,MAAMD,KAAK,GAAGuC,QAAQ,CAACL,OAAO,CAAC,CAACC,OAAO,CAAC;MACxC,MAAMM,WAAW,GAAGF,QAAQ,CAACH,KAAK,CAAC,CAACC,KAAK,CAAC;MAE1C,IAAI/C,WAAW,CAACU,KAAK,EAAEkC,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEE,QAAQ,CAAC,EAAE;QAChE,MAAMG,WAAW,GAAG,QAAQ,CAACC,QAAQ,CAAC3C,KAAK,CAAC;QAE5C,IAAIyC,WAAW,KAAK,EAAE,IAAIC,WAAW,KAAK,QAAQ,CAACC,QAAQ,CAACF,WAAW,CAAC,EAAE;UACxE,OAAOH,SAAS;QAClB;;QAEA;QACAC,QAAQ,CAACH,KAAK,CAAC,CAACC,KAAK,CAAC,GAAGrC,KAAK;QAC9BuC,QAAQ,CAACL,OAAO,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE;QAE/BN,cAAc,CAAEe,WAAW,IAAK,CAC9B,GAAGA,WAAW,EACdH,WAAW,GACP,GAAGzC,KAAK,IAAI6C,sBAAsB,CAACX,OAAO,EAAEC,OAAO,CAAC,aAAaM,WAAW,OAAOI,sBAAsB,CAACT,KAAK,EAAEC,KAAK,CAAC,EAAE,GACzH,GAAGrC,KAAK,IAAI6C,sBAAsB,CAACX,OAAO,EAAEC,OAAO,CAAC,MAAMU,sBAAsB,CAACT,KAAK,EAAEC,KAAK,CAAC,EAAE,CACrG,CAAC;;QAEF;QACAN,UAAU,CAACvC,aAAa,CAAC+C,QAAQ,EAAE,CAACG,WAAW,CAAC,CAAC;QACjDT,cAAc,CAACxC,WAAW,CAAC8C,QAAQ,EAAE,CAACG,WAAW,CAAC,CAAC;QAEnD,OAAOH,QAAQ;MACjB;MAEA,OAAOD,SAAS;IAClB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMO,sBAAsB,GAAGA,CAAC5C,GAAG,EAAEC,GAAG,KAAK;IAC3C,MAAM4C,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtD,OAAO,GAAGA,KAAK,CAAC5C,GAAG,CAAC,GAAG,CAAC,GAAGD,GAAG,EAAE;EAClC,CAAC;EAED,oBACEL,OAAA,CAACR,WAAW;IAAC2D,OAAO,EAAE1D,YAAa;IAAA2B,QAAA,eACjCpB,OAAA;MAAKmB,SAAS,EAAC,oEAAoE;MAAAC,QAAA,gBACjFpB,OAAA;QAAImB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEvDQ,OAAO,iBAAIlC,OAAA;QAAKmB,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAAwB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACzFU,WAAW,iBAAIpC,OAAA;QAAKmB,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAAkC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAExG1B,OAAA;QAAKmB,SAAS,EAAC,kDAAkD;QAAAC,QAAA,EAC9DU,KAAK,CAACc,GAAG,CAAC,CAACvC,GAAG,EAAE+C,QAAQ,KACvB/C,GAAG,CAACuC,GAAG,CAAC,CAACxC,KAAK,EAAEiD,QAAQ,kBACtBrD,OAAA,CAACG,MAAM;UAELC,KAAK,EAAEA,KAAM;UACbC,GAAG,EAAE+C,QAAS;UACd9C,GAAG,EAAE+C,QAAS;UACd9C,SAAS,EAAEA;QAAU,GAJhB,GAAG6C,QAAQ,IAAIC,QAAQ,EAAE;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAK/B,CACF,CACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAElB,CAAC;AAACG,GAAA,CAtEID,UAAU;AAAA0B,GAAA,GAAV1B,UAAU;AAwEhB,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAA2B,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}