{"ast":null,"code":"var _jsxFileName = \"D:\\\\se06206-final-thaydong-nhom1-main\\\\se06206-final-thaydong-nhom1-main\\\\Chess-game-login\\\\src\\\\components\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isValidMove, getValidMoves } from \"../utils/moveRules\";\nimport pieceImages from \"../assets/pieceImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  PIECE: \"piece\"\n};\nconst Chessboard = () => {\n  _s();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [currentTurn, setCurrentTurn] = useState(true); // true: Trắng, false: Đen\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    const newBoard = board.map(row => [...row]);\n    const piece = newBoard[fromRow][fromCol];\n    if (isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard)) {\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n      setBoard(newBoard);\n      setCurrentTurn(!currentTurn);\n      setSelectedPiece(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-center items-center bg-gray-200 min-h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"\\u265F\\uFE0F Chess Game \\u265F\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-8 border-4 border-black shadow-lg\",\n        children: board.map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n          piece: piece,\n          row: rowIndex,\n          col: colIndex,\n          board: board,\n          movePiece: movePiece,\n          selectedPiece: selectedPiece,\n          setSelectedPiece: setSelectedPiece,\n          currentTurn: currentTurn\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Chessboard, \"wrUurUrXknGfxPeOVfSIdFHpmho=\");\n_c = Chessboard;\nconst Square = ({\n  piece,\n  row,\n  col,\n  board,\n  movePiece,\n  selectedPiece,\n  setSelectedPiece,\n  currentTurn\n}) => {\n  _s2();\n  const isDark = (row + col) % 2 === 1;\n  const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n  const validMoves = selectedPiece ? getValidMoves(selectedPiece.piece, selectedPiece.row, selectedPiece.col, board) : [];\n  const isHighlight = validMoves.some(move => move.row === row && move.col === col);\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: {\n      row,\n      col,\n      piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: item => movePiece(item.row, item.col, row, col)\n  }));\n  const handleClick = () => {\n    if (piece) {\n      const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n      if (isWhite === currentTurn) {\n        setSelectedPiece({\n          row,\n          col,\n          piece\n        });\n      }\n    } else if (selectedPiece) {\n      movePiece(selectedPiece.row, selectedPiece.col, row, col);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    onClick: handleClick,\n    className: `w-16 h-16 flex justify-center items-center \n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}\n        ${isSelected ? \"border-4 border-yellow-500\" : \"\"} \n        ${isHighlight ? \"bg-green-500\" : \"\"}`,\n    children: piece && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: drag,\n      src: pieceImages[piece],\n      alt: piece,\n      className: `w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-pointer\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s2(Square, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c2 = Square;\nexport default Chessboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chessboard\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"names":["React","useState","useDrag","useDrop","DndProvider","HTML5Backend","initialBoardSetup","isValidMove","getValidMoves","pieceImages","jsxDEV","_jsxDEV","ItemTypes","PIECE","Chessboard","_s","board","setBoard","selectedPiece","setSelectedPiece","currentTurn","setCurrentTurn","movePiece","fromRow","fromCol","toRow","toCol","newBoard","map","row","piece","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","rowIndex","colIndex","Square","col","_c","_s2","isDark","isSelected","validMoves","isHighlight","some","move","isDragging","drag","type","item","collect","monitor","drop","accept","handleClick","isWhite","includes","ref","onClick","src","alt","_c2","$RefreshReg$"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isValidMove, getValidMoves } from \"../utils/moveRules\";\nimport pieceImages from \"../assets/pieceImages\";\n\nconst ItemTypes = { PIECE: \"piece\" };\n\nconst Chessboard = () => {\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [currentTurn, setCurrentTurn] = useState(true); // true: Trắng, false: Đen\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    const newBoard = board.map(row => [...row]);\n    const piece = newBoard[fromRow][fromCol];\n\n    if (isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard)) {\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n      setBoard(newBoard);\n      setCurrentTurn(!currentTurn);\n      setSelectedPiece(null);\n    }\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"flex flex-col justify-center items-center bg-gray-200 min-h-screen\">\n        <h1 className=\"text-2xl font-bold mb-4\">♟️ Chess Game ♟️</h1>\n        <div className=\"grid grid-cols-8 border-4 border-black shadow-lg\">\n          {board.map((row, rowIndex) =>\n            row.map((piece, colIndex) => (\n              <Square\n                key={`${rowIndex}-${colIndex}`}\n                piece={piece}\n                row={rowIndex}\n                col={colIndex}\n                board={board}\n                movePiece={movePiece}\n                selectedPiece={selectedPiece}\n                setSelectedPiece={setSelectedPiece}\n                currentTurn={currentTurn}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nconst Square = ({ piece, row, col, board, movePiece, selectedPiece, setSelectedPiece, currentTurn }) => {\n  const isDark = (row + col) % 2 === 1;\n  const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n  const validMoves = selectedPiece ? getValidMoves(selectedPiece.piece, selectedPiece.row, selectedPiece.col, board) : [];\n  const isHighlight = validMoves.some(move => move.row === row && move.col === col);\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: { row, col, piece },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: (item) => movePiece(item.row, item.col, row, col),\n  }));\n\n  const handleClick = () => {\n    if (piece) {\n      const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n      if (isWhite === currentTurn) {\n        setSelectedPiece({ row, col, piece });\n      }\n    } else if (selectedPiece) {\n      movePiece(selectedPiece.row, selectedPiece.col, row, col);\n    }\n  };\n\n  return (\n    <div\n      ref={drop}\n      onClick={handleClick}\n      className={`w-16 h-16 flex justify-center items-center \n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}\n        ${isSelected ? \"border-4 border-yellow-500\" : \"\"} \n        ${isHighlight ? \"bg-green-500\" : \"\"}`}\n    >\n      {piece && (\n        <img\n          ref={drag}\n          src={pieceImages[piece]}\n          alt={piece}\n          className={`w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-pointer\"}`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}