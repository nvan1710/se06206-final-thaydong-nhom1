{"ast":null,"code":"var _jsxFileName = \"D:\\\\se06206-final-thaydong-nhom1-main\\\\se06206-final-thaydong-nhom1-main\\\\Chess-game-login\\\\src\\\\components\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { isValidMove } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\";\nimport pieceImages from \"../assets/pieceImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Square = ({\n  piece,\n  row,\n  col,\n  isSelected,\n  isKingInCheck,\n  onClick\n}) => {\n  const isDark = (row + col) % 2 === 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => onClick(row, col) // Xử lý click vào ô\n    ,\n    className: `w-16 h-16 flex justify-center items-center cursor-pointer\n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}\n        ${isKingInCheck ? \"border-4 border-red-500\" : \"\"} \n        ${isSelected ? \"border-4 border-blue-500\" : \"\"}\n      `,\n    children: piece && pieceImages[piece] && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pieceImages[piece],\n      alt: piece,\n      className: \"w-12 h-12 object-contain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Square;\nconst Chessboard = () => {\n  _s();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [selectedPiece, setSelectedPiece] = useState(null); // Lưu quân cờ được chọn\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null);\n  const handleSquareClick = (row, col) => {\n    const clickedPiece = board[row][col];\n    if (selectedPiece) {\n      // Nếu đã chọn quân, thử di chuyển đến ô đã click\n      movePiece(selectedPiece.row, selectedPiece.col, row, col);\n      setSelectedPiece(null);\n    } else if (clickedPiece) {\n      // Nếu click vào quân cờ => Chọn quân cờ đó\n      setSelectedPiece({\n        row,\n        col,\n        piece: clickedPiece\n      });\n    }\n  };\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n      if (isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard)) {\n        newBoard[toRow][toCol] = piece;\n        newBoard[fromRow][fromCol] = \"\";\n        const isWhiteTurn = \"♙♖♘♗♕♔\".includes(piece);\n        const isNowCheck = isKingInCheck(newBoard, !isWhiteTurn);\n        setIsCheck(isNowCheck);\n        if (isNowCheck) {\n          setCheckedKing(findKingPosition(newBoard, !isWhiteTurn));\n        } else {\n          setCheckedKing(null);\n        }\n        setIsCheckMate(isCheckmate(newBoard, !isWhiteTurn));\n        return newBoard;\n      }\n      return prevBoard;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col justify-center items-center bg-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"\\u265F\\uFE0F Chess Game \\u265F\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), isCheck && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 text-lg font-bold\",\n      children: \"\\uD83D\\uDD25 Vua \\u0111ang b\\u1ECB chi\\u1EBFu! \\uD83D\\uDD25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }, this), isCheckMate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-800 text-lg font-bold\",\n      children: \"\\uD83C\\uDFC6 Chi\\u1EBFu h\\u1EBFt! Tr\\xF2 ch\\u01A1i k\\u1EBFt th\\xFAc \\uD83C\\uDFC6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-8 border-4 border-black shadow-lg\",\n      children: board.map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n        piece: piece,\n        row: rowIndex,\n        col: colIndex,\n        isSelected: selectedPiece && selectedPiece.row === rowIndex && selectedPiece.col === colIndex,\n        isKingInCheck: (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.row) === rowIndex && (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.col) === colIndex,\n        onClick: handleSquareClick\n      }, `${rowIndex}-${colIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Chessboard, \"oX3LWVp9GK6yqNEZQv9lkEO9Yw4=\");\n_c2 = Chessboard;\nexport default Chessboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Chessboard\");","map":{"version":3,"names":["React","useState","isValidMove","initialBoardSetup","isKingInCheck","isCheckmate","findKingPosition","pieceImages","jsxDEV","_jsxDEV","Square","piece","row","col","isSelected","onClick","isDark","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chessboard","_s","board","setBoard","selectedPiece","setSelectedPiece","isCheck","setIsCheck","isCheckMate","setIsCheckMate","checkedKing","setCheckedKing","handleSquareClick","clickedPiece","movePiece","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","isWhiteTurn","includes","isNowCheck","rowIndex","colIndex","_c2","$RefreshReg$"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { isValidMove } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\"; \nimport pieceImages from \"../assets/pieceImages\";\n\nconst Square = ({ piece, row, col, isSelected, isKingInCheck, onClick }) => {\n  const isDark = (row + col) % 2 === 1;\n\n  return (\n    <div\n      onClick={() => onClick(row, col)} // Xử lý click vào ô\n      className={`w-16 h-16 flex justify-center items-center cursor-pointer\n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}\n        ${isKingInCheck ? \"border-4 border-red-500\" : \"\"} \n        ${isSelected ? \"border-4 border-blue-500\" : \"\"}\n      `}\n    >\n      {piece && pieceImages[piece] && (\n        <img\n          src={pieceImages[piece]}\n          alt={piece}\n          className=\"w-12 h-12 object-contain\"\n        />\n      )}\n    </div>\n  );\n};\n\nconst Chessboard = () => {\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [selectedPiece, setSelectedPiece] = useState(null); // Lưu quân cờ được chọn\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null); \n\n  const handleSquareClick = (row, col) => {\n    const clickedPiece = board[row][col];\n\n    if (selectedPiece) {\n      // Nếu đã chọn quân, thử di chuyển đến ô đã click\n      movePiece(selectedPiece.row, selectedPiece.col, row, col);\n      setSelectedPiece(null);\n    } else if (clickedPiece) {\n      // Nếu click vào quân cờ => Chọn quân cờ đó\n      setSelectedPiece({ row, col, piece: clickedPiece });\n    }\n  };\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard((prevBoard) => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n\n      if (isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard)) {\n        newBoard[toRow][toCol] = piece;\n        newBoard[fromRow][fromCol] = \"\";\n\n        const isWhiteTurn = \"♙♖♘♗♕♔\".includes(piece);\n        const isNowCheck = isKingInCheck(newBoard, !isWhiteTurn);\n        \n        setIsCheck(isNowCheck);\n        if (isNowCheck) {\n          setCheckedKing(findKingPosition(newBoard, !isWhiteTurn));\n        } else {\n          setCheckedKing(null);\n        }\n\n        setIsCheckMate(isCheckmate(newBoard, !isWhiteTurn));\n\n        return newBoard;\n      }\n      \n      return prevBoard;\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col justify-center items-center bg-gray-200\">\n      <h1 className=\"text-2xl font-bold\">♟️ Chess Game ♟️</h1>\n\n      {isCheck && <div className=\"text-red-600 text-lg font-bold\">🔥 Vua đang bị chiếu! 🔥</div>}\n      {isCheckMate && <div className=\"text-red-800 text-lg font-bold\">🏆 Chiếu hết! Trò chơi kết thúc 🏆</div>}\n\n      <div className=\"grid grid-cols-8 border-4 border-black shadow-lg\">\n        {board.map((row, rowIndex) =>\n          row.map((piece, colIndex) => (\n            <Square\n              key={`${rowIndex}-${colIndex}`}\n              piece={piece}\n              row={rowIndex}\n              col={colIndex}\n              isSelected={\n                selectedPiece &&\n                selectedPiece.row === rowIndex &&\n                selectedPiece.col === colIndex\n              }\n              isKingInCheck={checkedKing?.row === rowIndex && checkedKing?.col === colIndex}\n              onClick={handleSquareClick}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}