{"ast":null,"code":"import SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nconst SOCKET_URL = \"http://localhost:8080/ws\"; // URL backend WebSocket\nlet stompClient = null;\nexport const connectWebSocket = onMoveReceived => {\n  const socket = new SockJS(SOCKET_URL);\n  stompClient = new Client({\n    webSocketFactory: () => socket,\n    onConnect: () => {\n      console.log(\"✅ WebSocket Connected\");\n      stompClient.subscribe(\"/topic/chess-updates\", message => {\n        const moveData = JSON.parse(message.body);\n        console.log(\"♟️ Move Received:\", moveData);\n        if (onMoveReceived) onMoveReceived(moveData);\n      });\n    },\n    onDisconnect: () => console.log(\"❌ WebSocket Disconnected\"),\n    onStompError: frame => console.error(\"STOMP Error:\", frame)\n  });\n  stompClient.activate();\n};\nexport const sendMove = moveData => {\n  if (stompClient && stompClient.connected) {\n    stompClient.publish({\n      destination: \"/app/move\",\n      body: JSON.stringify(moveData)\n    });\n    console.log(\"📤 Sent Move:\", moveData);\n  }\n};","map":{"version":3,"names":["SockJS","Client","SOCKET_URL","stompClient","connectWebSocket","onMoveReceived","socket","webSocketFactory","onConnect","console","log","subscribe","message","moveData","JSON","parse","body","onDisconnect","onStompError","frame","error","activate","sendMove","connected","publish","destination","stringify"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/websocket.js"],"sourcesContent":["import SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nconst SOCKET_URL = \"http://localhost:8080/ws\"; // URL backend WebSocket\r\nlet stompClient = null;\r\n\r\nexport const connectWebSocket = (onMoveReceived) => {\r\n  const socket = new SockJS(SOCKET_URL);\r\n  stompClient = new Client({\r\n    webSocketFactory: () => socket,\r\n    onConnect: () => {\r\n      console.log(\"✅ WebSocket Connected\");\r\n      stompClient.subscribe(\"/topic/chess-updates\", (message) => {\r\n        const moveData = JSON.parse(message.body);\r\n        console.log(\"♟️ Move Received:\", moveData);\r\n        if (onMoveReceived) onMoveReceived(moveData);\r\n      });\r\n    },\r\n    onDisconnect: () => console.log(\"❌ WebSocket Disconnected\"),\r\n    onStompError: (frame) => console.error(\"STOMP Error:\", frame),\r\n  });\r\n  stompClient.activate();\r\n};\r\n\r\nexport const sendMove = (moveData) => {\r\n  if (stompClient && stompClient.connected) {\r\n    stompClient.publish({\r\n      destination: \"/app/move\",\r\n      body: JSON.stringify(moveData),\r\n    });\r\n    console.log(\"📤 Sent Move:\", moveData);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,UAAU,GAAG,0BAA0B,CAAC,CAAC;AAC/C,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,gBAAgB,GAAIC,cAAc,IAAK;EAClD,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAACE,UAAU,CAAC;EACrCC,WAAW,GAAG,IAAIF,MAAM,CAAC;IACvBM,gBAAgB,EAAEA,CAAA,KAAMD,MAAM;IAC9BE,SAAS,EAAEA,CAAA,KAAM;MACfC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpCP,WAAW,CAACQ,SAAS,CAAC,sBAAsB,EAAGC,OAAO,IAAK;QACzD,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;QACzCP,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,QAAQ,CAAC;QAC1C,IAAIR,cAAc,EAAEA,cAAc,CAACQ,QAAQ,CAAC;MAC9C,CAAC,CAAC;IACJ,CAAC;IACDI,YAAY,EAAEA,CAAA,KAAMR,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3DQ,YAAY,EAAGC,KAAK,IAAKV,OAAO,CAACW,KAAK,CAAC,cAAc,EAAED,KAAK;EAC9D,CAAC,CAAC;EACFhB,WAAW,CAACkB,QAAQ,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIT,QAAQ,IAAK;EACpC,IAAIV,WAAW,IAAIA,WAAW,CAACoB,SAAS,EAAE;IACxCpB,WAAW,CAACqB,OAAO,CAAC;MAClBC,WAAW,EAAE,WAAW;MACxBT,IAAI,EAAEF,IAAI,CAACY,SAAS,CAACb,QAAQ;IAC/B,CAAC,CAAC;IACFJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,QAAQ,CAAC;EACxC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}