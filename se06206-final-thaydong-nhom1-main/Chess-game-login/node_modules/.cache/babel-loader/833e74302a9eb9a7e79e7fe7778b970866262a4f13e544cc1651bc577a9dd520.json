{"ast":null,"code":"const API_BASE_URL = \"http://localhost:3001/api\"; // Change this to match your backend URL\n\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Invalid email or password\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    throw error;\n  }\n};\nexport const registerUser = async (firstName, lastName, email, password) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstName,\n        lastName,\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Registration failed\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Registration error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","loginUser","email","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","console","registerUser","firstName","lastName"],"sources":["/root/se06206-final-thaydong-nhom1/se06206-final-thaydong-nhom1-main/Chess-game-login/src/config/api.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:3001/api\"; // Change this to match your backend URL\n\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Invalid email or password\");\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    throw error;\n  }\n};\n\nexport const registerUser = async (firstName, lastName, email, password) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ firstName, lastName, email, password }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Registration failed\");\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Registration error:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,QAAQ,EAAE;MACpDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;IAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAOC,SAAS,EAAEC,QAAQ,EAAEhB,KAAK,EAAEC,QAAQ,KAAK;EAC1E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,WAAW,EAAE;MACvDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEO,SAAS;QAAEC,QAAQ;QAAEhB,KAAK;QAAEC;MAAS,CAAC;IAC/D,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACxC;IAEA,OAAO,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}