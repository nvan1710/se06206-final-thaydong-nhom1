{"ast":null,"code":"var _jsxFileName = \"D:\\\\se06206-final-thaydong-nhom1-main\\\\se06206-final-thaydong-nhom1-main\\\\Chess-game-login\\\\src\\\\components\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { isValidMove } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\";\nimport pieceImages from \"../assets/pieceImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  PIECE: \"piece\"\n};\nconst Square = ({\n  piece,\n  row,\n  col,\n  movePiece,\n  isKingInCheck,\n  selectedPiece,\n  setSelectedPiece,\n  currentTurn\n}) => {\n  _s();\n  const isDark = (row + col) % 2 === 1;\n  const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: {\n      row,\n      col,\n      piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: item => movePiece(item.row, item.col, row, col)\n  }));\n  const handleClick = () => {\n    if (piece) {\n      // Kiểm tra xem quân cờ có thuộc về người chơi hiện tại không\n      const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n      const isBlack = \"♟♜♞♝♛♚\".includes(piece);\n      if (isWhite && currentTurn || isBlack && !currentTurn) {\n        setSelectedPiece({\n          row,\n          col,\n          piece\n        }); // Chọn quân cờ\n      }\n    } else if (selectedPiece) {\n      // Nếu đã chọn quân cờ trước đó, thực hiện di chuyển\n      movePiece(selectedPiece.row, selectedPiece.col, row, col);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: `w-16 h-16 flex justify-center items-center \n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}\n        ${isKingInCheck ? \"border-4 border-red-500\" : \"\"}\n        ${isSelected ? \"border-4 border-blue-500\" : \"\"}\n      `,\n    onClick: handleClick,\n    children: piece && pieceImages[piece] && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: drag,\n      src: pieceImages[piece],\n      alt: piece,\n      className: `w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-pointer\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Square, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = Square;\nconst Chessboard = () => {\n  _s2();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [currentTurn, setCurrentTurn] = useState(true); // true: Trắng, false: Đen\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null); // ✅ Chỉ để trong Chessboard\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n      if (isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard)) {\n        newBoard[toRow][toCol] = piece;\n        newBoard[fromRow][fromCol] = \"\";\n        const isWhiteTurn = \"♙♖♘♗♕♔\".includes(piece);\n        setCurrentTurn(!currentTurn);\n        const isNowCheck = isKingInCheck(newBoard, !isWhiteTurn);\n        setIsCheck(isNowCheck);\n        setCheckedKing(isNowCheck ? findKingPosition(newBoard, !isWhiteTurn) : null);\n        setIsCheckMate(isCheckmate(newBoard, !isWhiteTurn));\n        setMoveHistory([...moveHistory, `${piece} ${convertToChessNotation(fromRow, fromCol)} ➝ ${convertToChessNotation(toRow, toCol)}`]);\n        setSelectedPiece(null); // Chỉ reset khi di chuyển thành công\n        return newBoard;\n      }\n      return prevBoard;\n    });\n  };\n  const convertToChessNotation = (row, col) => {\n    const files = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n    return `${files[col]}${8 - row}`;\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col justify-center items-center bg-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"\\u265F\\uFE0F Chess Game \\u265F\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: isCheckMate ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-800 text-lg font-bold\",\n          children: \"\\uD83C\\uDFC6 Chi\\u1EBFu h\\u1EBFt! Tr\\xF2 ch\\u01A1i k\\u1EBFt th\\xFAc \\uD83C\\uDFC6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this) : isCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-600 text-lg font-bold\",\n          children: \"\\uD83D\\uDD25 Vua \\u0111ang b\\u1ECB chi\\u1EBFu! \\uD83D\\uDD25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-bold\",\n          children: [\"\\uD83C\\uDFAD First move: \", currentTurn ? \"White\" : \"Black\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-8 border-4 border-black shadow-lg\",\n        children: board.map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n          piece: piece,\n          row: rowIndex,\n          col: colIndex,\n          movePiece: movePiece,\n          isKingInCheck: (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.row) === rowIndex && (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.col) === colIndex,\n          selectedPiece: selectedPiece,\n          setSelectedPiece: setSelectedPiece\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 bg-white p-4 rounded shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-bold mb-2\",\n          children: \"\\uD83D\\uDCDC Move History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-sm text-gray-700 h-32 overflow-auto\",\n          children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [index + 1, \". \", move]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chessboard, \"oU3ZSDI+P0IfExrRt16dx3Oo45Y=\");\n_c2 = Chessboard;\nexport default Chessboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Chessboard\");","map":{"version":3,"names":["React","useState","useDrag","useDrop","DndProvider","HTML5Backend","isValidMove","initialBoardSetup","isKingInCheck","isCheckmate","findKingPosition","pieceImages","jsxDEV","_jsxDEV","ItemTypes","PIECE","Square","piece","row","col","movePiece","selectedPiece","setSelectedPiece","currentTurn","_s","isDark","isSelected","isDragging","drag","type","item","collect","monitor","drop","accept","handleClick","isWhite","includes","isBlack","ref","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chessboard","_s2","board","setBoard","moveHistory","setMoveHistory","setCurrentTurn","isCheck","setIsCheck","isCheckMate","setIsCheckMate","checkedKing","setCheckedKing","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","isWhiteTurn","isNowCheck","convertToChessNotation","files","backend","rowIndex","colIndex","move","index","_c2","$RefreshReg$"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { isValidMove } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\"; \nimport pieceImages from \"../assets/pieceImages\";\n\nconst ItemTypes = { PIECE: \"piece\" };\n\nconst Square = ({ piece, row, col, movePiece, isKingInCheck, selectedPiece, setSelectedPiece, currentTurn }) => {\n\n  const isDark = (row + col) % 2 === 1;\n  const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: { row, col, piece },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: (item) => movePiece(item.row, item.col, row, col),\n  }));\n\n  const handleClick = () => {\n    if (piece) {\n      // Kiểm tra xem quân cờ có thuộc về người chơi hiện tại không\n      const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n      const isBlack = \"♟♜♞♝♛♚\".includes(piece);\n  \n      if ((isWhite && currentTurn) || (isBlack && !currentTurn)) {\n        setSelectedPiece({ row, col, piece });  // Chọn quân cờ\n      }\n    } else if (selectedPiece) {\n      // Nếu đã chọn quân cờ trước đó, thực hiện di chuyển\n      movePiece(selectedPiece.row, selectedPiece.col, row, col);\n    }\n  };\n  \n  \n\n  return (\n    <div\n      ref={drop}\n      className={`w-16 h-16 flex justify-center items-center \n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}\n        ${isKingInCheck ? \"border-4 border-red-500\" : \"\"}\n        ${isSelected ? \"border-4 border-blue-500\" : \"\"}\n      `}\n      onClick={handleClick}\n    >\n      {piece && pieceImages[piece] && (\n        <img\n          ref={drag}\n          src={pieceImages[piece]}\n          alt={piece}\n          className={`w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-pointer\"}`}\n        />\n      )}\n    </div>\n  );\n};\n\n\nconst Chessboard = () => {\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [currentTurn, setCurrentTurn] = useState(true); // true: Trắng, false: Đen\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null); // ✅ Chỉ để trong Chessboard\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard((prevBoard) => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n  \n      if (isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard)) {\n        newBoard[toRow][toCol] = piece;\n        newBoard[fromRow][fromCol] = \"\";\n  \n        const isWhiteTurn = \"♙♖♘♗♕♔\".includes(piece);\n        setCurrentTurn(!currentTurn);\n  \n        const isNowCheck = isKingInCheck(newBoard, !isWhiteTurn);\n        setIsCheck(isNowCheck);\n        setCheckedKing(isNowCheck ? findKingPosition(newBoard, !isWhiteTurn) : null);\n        setIsCheckMate(isCheckmate(newBoard, !isWhiteTurn));\n  \n        setMoveHistory([...moveHistory, `${piece} ${convertToChessNotation(fromRow, fromCol)} ➝ ${convertToChessNotation(toRow, toCol)}`]);\n  \n        setSelectedPiece(null); // Chỉ reset khi di chuyển thành công\n        return newBoard;\n      }\n  \n      return prevBoard;\n    });\n  };\n  \n\n  const convertToChessNotation = (row, col) => {\n    const files = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n    return `${files[col]}${8 - row}`;\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-gray-200\">\n        <h1 className=\"text-2xl font-bold mb-4\">♟️ Chess Game ♟️</h1>\n\n        <div className=\"mb-2\">\n          {isCheckMate ? (\n            <div className=\"text-red-800 text-lg font-bold\">🏆 Chiếu hết! Trò chơi kết thúc 🏆</div>\n          ) : isCheck ? (\n            <div className=\"text-red-600 text-lg font-bold\">🔥 Vua đang bị chiếu! 🔥</div>\n          ) : (\n            <div className=\"text-lg font-bold\">🎭 First move: {currentTurn ? \"White\" : \"Black\"}</div>\n          )}\n        </div>\n\n        <div className=\"grid grid-cols-8 border-4 border-black shadow-lg\">\n          {board.map((row, rowIndex) =>\n            row.map((piece, colIndex) => (\n              <Square\n                key={`${rowIndex}-${colIndex}`}\n                piece={piece}\n                row={rowIndex}\n                col={colIndex}\n                movePiece={movePiece}\n                isKingInCheck={checkedKing?.row === rowIndex && checkedKing?.col === colIndex}\n                selectedPiece={selectedPiece}\n                setSelectedPiece={setSelectedPiece}\n              />\n            ))\n          )}\n        </div>\n\n        <div className=\"mt-4 bg-white p-4 rounded shadow-md\">\n          <h2 className=\"text-lg font-bold mb-2\">📜 Move History</h2>\n          <ul className=\"text-sm text-gray-700 h-32 overflow-auto\">\n            {moveHistory.map((move, index) => (\n              <li key={index}>{index + 1}. {move}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}