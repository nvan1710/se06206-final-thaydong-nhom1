{"ast":null,"code":"var _jsxFileName = \"D:\\\\se06206-final-thaydong-nhom1-main\\\\se06206-final-thaydong-nhom1-main\\\\Chess-game-login\\\\src\\\\components\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { getValidMoves } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\";\nimport pieceImages from \"../assets/pieceImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  PIECE: \"piece\"\n};\n\n// Component cho từng ô trên bàn cờ\nconst Square = ({\n  piece,\n  row,\n  col,\n  movePiece,\n  isKingInCheck,\n  selectedPiece,\n  setSelectedPiece,\n  currentTurn,\n  board,\n  validMoves\n}) => {\n  _s();\n  const isDark = (row + col) % 2 === 1;\n  const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n  const isValidMoveSquare = validMoves.some(move => move.row === row && move.col === col);\n  const isCaptureMove = isValidMoveSquare && board[row][col]; // Nếu có quân ở ô này, tô viền đỏ\n\n  // Kéo thả quân cờ\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: {\n      row,\n      col,\n      piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n\n  // Nhận quân cờ được kéo vào\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: item => movePiece(item.row, item.col, row, col)\n  }));\n\n  // Click vào ô cờ\n  const handleClick = () => {\n    if (selectedPiece) {\n      const isValidMove = validMoves.some(move => move.row === row && move.col === col);\n      if (isValidMove) {\n        movePiece(selectedPiece.row, selectedPiece.col, row, col);\n      }\n      setSelectedPiece(null);\n    } else if (piece) {\n      const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n      if (isWhite === currentTurn) {\n        setSelectedPiece({\n          row,\n          col,\n          piece\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: `w-16 h-16 flex justify-center items-center \n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}\n        ${isKingInCheck ? \"bg-red-600 animate-pulse\" : \"\"}\n        ${isSelected ? \"border-4 border-yellow-500\" : \"\"}\n        ${isValidMoveSquare ? \"border-4 border-green-500\" : \"\"}\n        ${isCaptureMove ? \"border-4 border-red-500\" : \"\"}\n      `,\n    onClick: handleClick,\n    children: piece && pieceImages[piece] && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: drag,\n      src: pieceImages[piece],\n      alt: piece,\n      className: `w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-pointer\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n// Component chính của bàn cờ\n_s(Square, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = Square;\nconst Chessboard = () => {\n  _s2();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [currentTurn, setCurrentTurn] = useState(true); // true: Trắng, false: Đen\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n\n  // Hàm di chuyển quân cờ\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n\n      // Lấy danh sách nước đi hợp lệ\n      const validMoves = getValidMoves(piece, fromRow, fromCol, prevBoard);\n      if (!validMoves.some(move => move.row === toRow && move.col === toCol)) return prevBoard;\n\n      // Di chuyển quân\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n      return newBoard;\n    });\n    setTimeout(() => {\n      setBoard(updatedBoard => {\n        const nextTurn = !currentTurn;\n        const kingCheck = isKingInCheck(updatedBoard, nextTurn);\n        const checkmate = isCheckmate(updatedBoard, nextTurn);\n        setCurrentTurn(nextTurn);\n        setIsCheck(kingCheck);\n        setCheckedKing(kingCheck ? findKingPosition(updatedBoard, nextTurn) : null);\n        setIsCheckMate(checkmate);\n        setSelectedPiece(null);\n        setValidMoves([]);\n\n        // Thêm vào lịch sử nước đi\n        setMoveHistory(prev => [...prev, `${convertToChessNotation(fromRow, fromCol)} ➝ ${convertToChessNotation(toRow, toCol)}`]);\n        return updatedBoard;\n      });\n    }, 0);\n  };\n\n  // Hàm chuyển đổi vị trí thành ký hiệu cờ vua (a1, b2, ...)\n  const convertToChessNotation = (row, col) => {\n    const files = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n    return `${files[col]}${8 - row}`;\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col justify-center items-center bg-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"\\u265F\\uFE0F Chess Game \\u265F\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: isCheckMate ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-800 text-lg font-bold\",\n          children: [\"\\uD83C\\uDFC6 Checkmate! \", currentTurn ? \"Black Wins!\" : \"White Wins!\", \" \\uD83C\\uDFC6\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }, this) : isCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-600 text-lg font-bold\",\n          children: \"\\uD83D\\uDD25 King is in check! Defend or lose! \\uD83D\\uDD25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-bold\",\n          children: [\"\\uD83C\\uDFAD Current Turn: \", currentTurn ? \"White\" : \"Black\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-8 border-4 border-black shadow-lg\",\n        children: board.map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n          piece: piece,\n          row: rowIndex,\n          col: colIndex,\n          movePiece: movePiece,\n          isKingInCheck: (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.row) === rowIndex && (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.col) === colIndex,\n          selectedPiece: selectedPiece,\n          setSelectedPiece: setSelectedPiece,\n          currentTurn: currentTurn,\n          board: board,\n          validMoves: selectedPiece ? getValidMoves(selectedPiece.piece, selectedPiece.row, selectedPiece.col, board) : []\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 bg-white p-4 rounded shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-bold mb-2\",\n          children: \"\\uD83D\\uDCDC Move History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-sm text-gray-700 h-32 overflow-auto\",\n          children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [index + 1, \". \", move]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chessboard, \"kW90QvJ5wzzlEZ/Y8TwFOWQnY+E=\");\n_c2 = Chessboard;\nexport default Chessboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Chessboard\");","map":{"version":3,"names":["React","useState","useDrag","useDrop","DndProvider","HTML5Backend","getValidMoves","initialBoardSetup","isKingInCheck","isCheckmate","findKingPosition","pieceImages","jsxDEV","_jsxDEV","ItemTypes","PIECE","Square","piece","row","col","movePiece","selectedPiece","setSelectedPiece","currentTurn","board","validMoves","_s","isDark","isSelected","isValidMoveSquare","some","move","isCaptureMove","isDragging","drag","type","item","collect","monitor","drop","accept","handleClick","isValidMove","isWhite","includes","ref","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chessboard","_s2","setBoard","moveHistory","setMoveHistory","setCurrentTurn","isCheck","setIsCheck","isCheckMate","setIsCheckMate","checkedKing","setCheckedKing","setValidMoves","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","setTimeout","updatedBoard","nextTurn","kingCheck","checkmate","prev","convertToChessNotation","files","backend","rowIndex","colIndex","index","_c2","$RefreshReg$"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { getValidMoves } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\";\nimport pieceImages from \"../assets/pieceImages\";\n\nconst ItemTypes = { PIECE: \"piece\" };\n\n// Component cho từng ô trên bàn cờ\nconst Square = ({ piece, row, col, movePiece, isKingInCheck, selectedPiece, setSelectedPiece, currentTurn, board, validMoves }) => {\n  const isDark = (row + col) % 2 === 1;\n  const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n  const isValidMoveSquare = validMoves.some((move) => move.row === row && move.col === col);\n  const isCaptureMove = isValidMoveSquare && board[row][col]; // Nếu có quân ở ô này, tô viền đỏ\n\n  // Kéo thả quân cờ\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: { row, col, piece },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  // Nhận quân cờ được kéo vào\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: (item) => movePiece(item.row, item.col, row, col),\n  }));\n\n  // Click vào ô cờ\n  const handleClick = () => {\n    if (selectedPiece) {\n      const isValidMove = validMoves.some(move => move.row === row && move.col === col);\n      if (isValidMove) {\n        movePiece(selectedPiece.row, selectedPiece.col, row, col);\n      }\n      setSelectedPiece(null);\n    } else if (piece) {\n      const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n      if (isWhite === currentTurn) {\n        setSelectedPiece({ row, col, piece });\n      }\n    }\n  };\n\n  return (\n    <div\n      ref={drop}\n      className={`w-16 h-16 flex justify-center items-center \n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}\n        ${isKingInCheck ? \"bg-red-600 animate-pulse\" : \"\"}\n        ${isSelected ? \"border-4 border-yellow-500\" : \"\"}\n        ${isValidMoveSquare ? \"border-4 border-green-500\" : \"\"}\n        ${isCaptureMove ? \"border-4 border-red-500\" : \"\"}\n      `}\n      onClick={handleClick}\n    >\n      {piece && pieceImages[piece] && (\n        <img\n          ref={drag}\n          src={pieceImages[piece]}\n          alt={piece}\n          className={`w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-pointer\"}`}\n        />\n      )}\n    </div>\n  );\n};\n\n// Component chính của bàn cờ\nconst Chessboard = () => {\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [currentTurn, setCurrentTurn] = useState(true); // true: Trắng, false: Đen\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n\n  // Hàm di chuyển quân cờ\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard((prevBoard) => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n  \n      // Lấy danh sách nước đi hợp lệ\n      const validMoves = getValidMoves(piece, fromRow, fromCol, prevBoard);\n      if (!validMoves.some(move => move.row === toRow && move.col === toCol)) return prevBoard;\n  \n      // Di chuyển quân\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n  \n      return newBoard;\n    });\n  \n    setTimeout(() => {\n      setBoard((updatedBoard) => {\n        const nextTurn = !currentTurn;\n        const kingCheck = isKingInCheck(updatedBoard, nextTurn);\n        const checkmate = isCheckmate(updatedBoard, nextTurn);\n  \n        setCurrentTurn(nextTurn);\n        setIsCheck(kingCheck);\n        setCheckedKing(kingCheck ? findKingPosition(updatedBoard, nextTurn) : null);\n        setIsCheckMate(checkmate);\n        setSelectedPiece(null);\n        setValidMoves([]);\n  \n        // Thêm vào lịch sử nước đi\n        setMoveHistory((prev) => [\n          ...prev,\n          `${convertToChessNotation(fromRow, fromCol)} ➝ ${convertToChessNotation(toRow, toCol)}`\n        ]);\n  \n        return updatedBoard;\n      });\n    }, 0);\n  };\n  \n  \n  \n\n  // Hàm chuyển đổi vị trí thành ký hiệu cờ vua (a1, b2, ...)\n  const convertToChessNotation = (row, col) => {\n    const files = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n    return `${files[col]}${8 - row}`;\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-gray-200\">\n        <h1 className=\"text-2xl font-bold mb-4\">♟️ Chess Game ♟️</h1>\n\n        <div className=\"mb-2\">\n                {isCheckMate ? (\n                  <div className=\"text-red-800 text-lg font-bold\">🏆 Checkmate! {currentTurn ? \"Black Wins!\" : \"White Wins!\"} 🏆</div>\n                ) : isCheck ? (\n                  <div className=\"text-red-600 text-lg font-bold\">🔥 King is in check! Defend or lose! 🔥</div>\n                ) : (\n                  <div className=\"text-lg font-bold\">🎭 Current Turn: {currentTurn ? \"White\" : \"Black\"}</div>\n                )}\n        </div>\n\n        <div className=\"grid grid-cols-8 border-4 border-black shadow-lg\">\n          {board.map((row, rowIndex) =>\n            row.map((piece, colIndex) => (\n              <Square\n                key={`${rowIndex}-${colIndex}`}\n                piece={piece}\n                row={rowIndex}\n                col={colIndex}\n                movePiece={movePiece}\n                isKingInCheck={checkedKing?.row === rowIndex && checkedKing?.col === colIndex}\n                selectedPiece={selectedPiece}\n                setSelectedPiece={setSelectedPiece}\n                currentTurn={currentTurn}\n                board={board}\n                validMoves={selectedPiece ? getValidMoves(selectedPiece.piece, selectedPiece.row, selectedPiece.col, board) : []}\n              />\n            ))\n          )}\n        </div>\n\n        <div className=\"mt-4 bg-white p-4 rounded shadow-md\">\n          <h2 className=\"text-lg font-bold mb-2\">📜 Move History</h2>\n          <ul className=\"text-sm text-gray-700 h-32 overflow-auto\">\n            {moveHistory.map((move, index) => (\n              <li key={index}>{index + 1}. {move}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}