{"ast":null,"code":"export const getValidMoves = (piece, row, col, board) => {\n  const moves = [];\n  const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n  const direction = isWhite ? -1 : 1; // Trắng đi lên (-1), Đen đi xuống (+1)\n\n  switch (piece) {\n    case \"♙\": // Tốt trắng\n    case \"♟\":\n      // Tốt đen\n      if (!board[row + direction][col]) {\n        moves.push({\n          row: row + direction,\n          col\n        });\n        if (isWhite && row === 6 || !isWhite && row === 1) {\n          if (!board[row + 2 * direction][col]) {\n            moves.push({\n              row: row + 2 * direction,\n              col\n            });\n          }\n        }\n      }\n      if (col > 0 && board[row + direction][col - 1] && isOpponent(piece, board[row + direction][col - 1])) {\n        moves.push({\n          row: row + direction,\n          col: col - 1\n        });\n      }\n      if (col < 7 && board[row + direction][col + 1] && isOpponent(piece, board[row + direction][col + 1])) {\n        moves.push({\n          row: row + direction,\n          col: col + 1\n        });\n      }\n      break;\n    case \"♖\":\n    case \"♜\":\n      // Xe\n      moves.push(...getLinearMoves(row, col, board, [[-1, 0], [1, 0], [0, -1], [0, 1]]));\n      break;\n    case \"♘\":\n    case \"♞\":\n      // Mã\n      moves.push(...getKnightMoves(row, col, board));\n      break;\n    case \"♗\":\n    case \"♝\":\n      // Tượng\n      moves.push(...getLinearMoves(row, col, board, [[-1, -1], [-1, 1], [1, -1], [1, 1]]));\n      break;\n    case \"♕\":\n    case \"♛\":\n      // Hậu\n      moves.push(...getLinearMoves(row, col, board, [[-1, 0], [1, 0], [0, -1], [0, 1], [-1, -1], [-1, 1], [1, -1], [1, 1]]));\n      break;\n    case \"♔\":\n    case \"♚\":\n      // Vua\n      moves.push(...getKingMoves(row, col, board));\n      break;\n  }\n  return moves;\n};\n\n// Kiểm tra xem có phải quân địch không\nconst isOpponent = (piece, targetPiece) => {\n  return targetPiece && \"♙♖♘♗♕♔\".includes(piece) !== \"♙♖♘♗♕♔\".includes(targetPiece);\n};\n\n// Lấy nước đi tuyến tính (dùng cho Xe, Tượng, Hậu)\nconst getLinearMoves = (row, col, board, directions) => {\n  const moves = [];\n  directions.forEach(([dr, dc]) => {\n    let r = row + dr,\n      c = col + dc;\n    while (r >= 0 && r < 8 && c >= 0 && c < 8) {\n      if (!board[r][c]) {\n        moves.push({\n          row: r,\n          col: c\n        });\n      } else {\n        if (isOpponent(board[row][col], board[r][c])) {\n          moves.push({\n            row: r,\n            col: c\n          });\n        }\n        break;\n      }\n      r += dr;\n      c += dc;\n    }\n  });\n  return moves;\n};\n\n// Lấy nước đi của Mã\nconst getKnightMoves = (row, col, board) => {\n  const moves = [];\n  const knightMoves = [[-2, -1], [-2, 1], [2, -1], [2, 1], [-1, -2], [-1, 2], [1, -2], [1, 2]];\n  knightMoves.forEach(([dr, dc]) => {\n    const r = row + dr,\n      c = col + dc;\n    if (r >= 0 && r < 8 && c >= 0 && c < 8) {\n      if (!board[r][c] || isOpponent(board[row][col], board[r][c])) {\n        moves.push({\n          row: r,\n          col: c\n        });\n      }\n    }\n  });\n  return moves;\n};\n\n// Lấy nước đi của Vua\nconst getKingMoves = (row, col, board) => {\n  const moves = [];\n  const kingMoves = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n  kingMoves.forEach(([dr, dc]) => {\n    const r = row + dr,\n      c = col + dc;\n    if (r >= 0 && r < 8 && c >= 0 && c < 8) {\n      if (!board[r][c] || isOpponent(board[row][col], board[r][c])) {\n        moves.push({\n          row: r,\n          col: c\n        });\n      }\n    }\n  });\n  return moves;\n};","map":{"version":3,"names":["getValidMoves","piece","row","col","board","moves","isWhite","includes","direction","push","isOpponent","getLinearMoves","getKnightMoves","getKingMoves","targetPiece","directions","forEach","dr","dc","r","c","knightMoves","kingMoves"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/utils/moveRules.js"],"sourcesContent":["export const getValidMoves = (piece, row, col, board) => {\n  const moves = [];\n  const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n  const direction = isWhite ? -1 : 1; // Trắng đi lên (-1), Đen đi xuống (+1)\n\n  switch (piece) {\n    case \"♙\": // Tốt trắng\n    case \"♟\": // Tốt đen\n      if (!board[row + direction][col]) {\n        moves.push({ row: row + direction, col });\n        if ((isWhite && row === 6) || (!isWhite && row === 1)) {\n          if (!board[row + 2 * direction][col]) {\n            moves.push({ row: row + 2 * direction, col });\n          }\n        }\n      }\n      if (col > 0 && board[row + direction][col - 1] && isOpponent(piece, board[row + direction][col - 1])) {\n        moves.push({ row: row + direction, col: col - 1 });\n      }\n      if (col < 7 && board[row + direction][col + 1] && isOpponent(piece, board[row + direction][col + 1])) {\n        moves.push({ row: row + direction, col: col + 1 });\n      }\n      break;\n\n    case \"♖\": case \"♜\": // Xe\n      moves.push(...getLinearMoves(row, col, board, [[-1, 0], [1, 0], [0, -1], [0, 1]]));\n      break;\n\n    case \"♘\": case \"♞\": // Mã\n      moves.push(...getKnightMoves(row, col, board));\n      break;\n\n    case \"♗\": case \"♝\": // Tượng\n      moves.push(...getLinearMoves(row, col, board, [[-1, -1], [-1, 1], [1, -1], [1, 1]]));\n      break;\n\n    case \"♕\": case \"♛\": // Hậu\n      moves.push(...getLinearMoves(row, col, board, [[-1, 0], [1, 0], [0, -1], [0, 1], [-1, -1], [-1, 1], [1, -1], [1, 1]]));\n      break;\n\n    case \"♔\": case \"♚\": // Vua\n      moves.push(...getKingMoves(row, col, board));\n      break;\n  }\n\n  return moves;\n};\n\n// Kiểm tra xem có phải quân địch không\nconst isOpponent = (piece, targetPiece) => {\n  return targetPiece && (\"♙♖♘♗♕♔\".includes(piece) !== \"♙♖♘♗♕♔\".includes(targetPiece));\n};\n\n// Lấy nước đi tuyến tính (dùng cho Xe, Tượng, Hậu)\nconst getLinearMoves = (row, col, board, directions) => {\n  const moves = [];\n  directions.forEach(([dr, dc]) => {\n    let r = row + dr, c = col + dc;\n    while (r >= 0 && r < 8 && c >= 0 && c < 8) {\n      if (!board[r][c]) {\n        moves.push({ row: r, col: c });\n      } else {\n        if (isOpponent(board[row][col], board[r][c])) {\n          moves.push({ row: r, col: c });\n        }\n        break;\n      }\n      r += dr;\n      c += dc;\n    }\n  });\n  return moves;\n};\n\n// Lấy nước đi của Mã\nconst getKnightMoves = (row, col, board) => {\n  const moves = [];\n  const knightMoves = [[-2, -1], [-2, 1], [2, -1], [2, 1], [-1, -2], [-1, 2], [1, -2], [1, 2]];\n  knightMoves.forEach(([dr, dc]) => {\n    const r = row + dr, c = col + dc;\n    if (r >= 0 && r < 8 && c >= 0 && c < 8) {\n      if (!board[r][c] || isOpponent(board[row][col], board[r][c])) {\n        moves.push({ row: r, col: c });\n      }\n    }\n  });\n  return moves;\n};\n\n// Lấy nước đi của Vua\nconst getKingMoves = (row, col, board) => {\n  const moves = [];\n  const kingMoves = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n  kingMoves.forEach(([dr, dc]) => {\n    const r = row + dr, c = col + dc;\n    if (r >= 0 && r < 8 && c >= 0 && c < 8) {\n      if (!board[r][c] || isOpponent(board[row][col], board[r][c])) {\n        moves.push({ row: r, col: c });\n      }\n    }\n  });\n  return moves;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}