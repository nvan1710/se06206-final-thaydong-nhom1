{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\admin\\se06206-final-thaydong-nhom1\\se06206-final-thaydong-nhom1-main\\Chess-game-login\\node_modules\\@stomp\\stompjs\\src\\i-message.ts"],"sourcesContent":["import type { IFrame } from './i-frame.js';\r\nimport { StompHeaders } from './stomp-headers.js';\r\n\r\n/**\r\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\r\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\r\n * Since it is an extended {@link IFrame}, you can access [headers]{@link IFrame#headers}\r\n * and [body]{@link IFrame#body} as properties.\r\n *\r\n * Part of `@stomp/stompjs`.\r\n *\r\n * See [Client#subscribe]{@link Client#subscribe} for example.\r\n */\r\nexport interface IMessage extends IFrame {\r\n  /**\r\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\r\n   *\r\n   * See [Client#ack]{@link Client#ack} for an example.\r\n   */\r\n  ack: (headers?: StompHeaders) => void;\r\n\r\n  /**\r\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\r\n   *\r\n   * See [Client#nack]{@link Client#nack} for an example.\r\n   */\r\n  nack: (headers?: StompHeaders) => void;\r\n}\r\n\r\n/**\r\n * Aliased to {@link IMessage}.\r\n *\r\n * Part of `@stomp/stompjs`.\r\n */\r\nexport type Message = IMessage;\r\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}