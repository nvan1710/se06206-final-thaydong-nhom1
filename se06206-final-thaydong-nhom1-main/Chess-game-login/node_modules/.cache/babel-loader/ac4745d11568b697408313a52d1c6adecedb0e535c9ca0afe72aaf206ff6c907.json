{"ast":null,"code":"var _jsxFileName = \"D:\\\\se06206-final-thaydong-nhom1-main\\\\se06206-final-thaydong-nhom1-main\\\\Chess-game-login\\\\src\\\\components\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { isValidMove } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\"; // Đường dẫn chính xác\nimport pieceImages from \"../assets/pieceImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  PIECE: \"piece\"\n};\nconst Square = ({\n  piece,\n  row,\n  col,\n  movePiece\n}) => {\n  _s();\n  const isDark = (row + col) % 2 === 1;\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: {\n      row,\n      col,\n      piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: item => movePiece(item.row, item.col, row, col)\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: `w-16 h-16 flex justify-center items-center\n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}`,\n    children: piece && pieceImages[piece] && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: drag,\n      src: pieceImages[piece],\n      alt: piece,\n      className: `w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-grab\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Square, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = Square;\nconst Chessboard = () => {\n  _s2();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]); // Store moves\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]); // Clone board\n      const piece = newBoard[fromRow][fromCol];\n      const targetPiece = newBoard[toRow][toCol];\n\n      // Kiểm tra xem nước đi có hợp lệ không\n      if (isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard)) {\n        const isWhitePiece = \"♙♖♘♗♕♔\".includes(piece);\n\n        // Kiểm tra nếu ô đích có quân cờ\n        if (targetPiece !== \"\" && isWhitePiece === \"♙♖♘♗♕♔\".includes(targetPiece)) {\n          return prevBoard; // Không thể ăn quân đồng minh\n        }\n\n        // Cập nhật bàn cờ: di chuyển quân cờ, loại bỏ quân bị ăn (nếu có)\n        newBoard[toRow][toCol] = piece;\n        newBoard[fromRow][fromCol] = \"\"; // Xóa quân cờ khỏi vị trí cũ\n\n        // Lưu lại lịch sử nước đi\n        setMoveHistory(prevHistory => [...prevHistory, targetPiece ? `${piece} ${convertToChessNotation(fromRow, fromCol)} captures ${targetPiece} at ${convertToChessNotation(toRow, toCol)}` : `${piece} ${convertToChessNotation(fromRow, fromCol)} → ${convertToChessNotation(toRow, toCol)}`]);\n        return newBoard; // Trả về bàn cờ mới\n      }\n      return prevBoard; // Nếu nước đi không hợp lệ, giữ nguyên bàn cờ\n    });\n  };\n\n  // Convert (row, col) to chess notation (e.g., (0,0) → \"a8\")\n  const convertToChessNotation = (row, col) => {\n    const files = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n    return `${files[col]}${8 - row}`;\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-8 w-128 h-128 border-4 border-black\",\n        children: board.map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n          piece: piece,\n          row: rowIndex,\n          col: colIndex,\n          movePiece: movePiece\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chessboard, \"AFRdzPz4Rszc6BvLgOb6MfB/jPM=\");\n_c2 = Chessboard;\nexport default Chessboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Chessboard\");","map":{"version":3,"names":["React","useState","useDrag","useDrop","DndProvider","HTML5Backend","isValidMove","initialBoardSetup","pieceImages","jsxDEV","_jsxDEV","ItemTypes","PIECE","Square","piece","row","col","movePiece","_s","isDark","isDragging","drag","type","item","collect","monitor","drop","accept","ref","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chessboard","_s2","board","setBoard","moveHistory","setMoveHistory","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","targetPiece","isWhitePiece","includes","prevHistory","convertToChessNotation","files","backend","rowIndex","colIndex","_c2","$RefreshReg$"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { isValidMove } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\"; // Đường dẫn chính xác\nimport pieceImages from \"../assets/pieceImages\";\n\n\n\n\nconst ItemTypes = { PIECE: \"piece\" };\n\n\nconst Square = ({ piece, row, col, movePiece }) => {\n  const isDark = (row + col) % 2 === 1;\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: { row, col, piece },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: (item) => movePiece(item.row, item.col, row, col),\n  }));\n\n  return (\n    <div\n      ref={drop}\n      className={`w-16 h-16 flex justify-center items-center\n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}`}\n    >\n      {piece && pieceImages[piece] && (\n        <img\n          ref={drag}\n          src={pieceImages[piece]}\n          alt={piece}\n          className={`w-12 h-12 object-contain ${\n            isDragging ? \"opacity-50\" : \"cursor-grab\"\n          }`}\n        />\n      )}\n    </div>\n  );\n};\n\n\n\n\nconst Chessboard = () => {\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]); // Store moves\n\n   \n\n  \n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard((prevBoard) => {\n      const newBoard = prevBoard.map((row) => [...row]); // Clone board\n      const piece = newBoard[fromRow][fromCol];\n      const targetPiece = newBoard[toRow][toCol];\n  \n      // Kiểm tra xem nước đi có hợp lệ không\n      if (isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard)) {\n        const isWhitePiece = \"♙♖♘♗♕♔\".includes(piece);\n  \n        // Kiểm tra nếu ô đích có quân cờ\n        if (targetPiece !== \"\" && isWhitePiece === \"♙♖♘♗♕♔\".includes(targetPiece)) {\n          return prevBoard; // Không thể ăn quân đồng minh\n        }\n  \n        // Cập nhật bàn cờ: di chuyển quân cờ, loại bỏ quân bị ăn (nếu có)\n        newBoard[toRow][toCol] = piece;\n        newBoard[fromRow][fromCol] = \"\"; // Xóa quân cờ khỏi vị trí cũ\n  \n        // Lưu lại lịch sử nước đi\n        setMoveHistory((prevHistory) => [\n          ...prevHistory,\n          targetPiece\n            ? `${piece} ${convertToChessNotation(fromRow, fromCol)} captures ${targetPiece} at ${convertToChessNotation(toRow, toCol)}`\n            : `${piece} ${convertToChessNotation(fromRow, fromCol)} → ${convertToChessNotation(toRow, toCol)}`,\n        ]);\n  \n        return newBoard; // Trả về bàn cờ mới\n      }\n  \n      return prevBoard; // Nếu nước đi không hợp lệ, giữ nguyên bàn cờ\n    });\n  };\n  \n  \n  \n  \n\n  // Convert (row, col) to chess notation (e.g., (0,0) → \"a8\")\n  const convertToChessNotation = (row, col) => {\n    const files = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n    return `${files[col]}${8 - row}`;\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"flex\">\n        {/* Chessboard */}\n        <div className=\"grid grid-cols-8 w-128 h-128 border-4 border-black\">\n          {board.map((row, rowIndex) =>\n            row.map((piece, colIndex) => (\n              <Square\n                key={`${rowIndex}-${colIndex}`}\n                piece={piece}\n                row={rowIndex}\n                col={colIndex}\n                movePiece={movePiece}\n              />\n            ))\n          )}\n        </div>\n\n        \n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}