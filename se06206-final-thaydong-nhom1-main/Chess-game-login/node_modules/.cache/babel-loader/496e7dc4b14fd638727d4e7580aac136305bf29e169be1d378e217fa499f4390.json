{"ast":null,"code":"var _jsxFileName = \"/root/se06206-final-thaydong-nhom1/Chess-game-login/src/components/ChessBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Square from \"./Square\";\nimport isValidMove from \"../utils/moveRules\";\nimport { checkGameOver } from \"../utils/moveRules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialBoardSetup = [[\"♜\", \"♞\", \"♝\", \"♛\", \"♚\", \"♝\", \"♞\", \"♜\"], [\"♟\", \"♟\", \"♟\", \"♟\", \"♟\", \"♟\", \"♟\", \"♟\"], [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"♙\", \"♙\", \"♙\", \"♙\", \"♙\", \"♙\", \"♙\", \"♙\"], [\"♖\", \"♘\", \"♗\", \"♕\", \"♔\", \"♗\", \"♘\", \"♖\"]];\nconst Chessboard = () => {\n  _s();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [isWhiteTurn, setIsWhiteTurn] = useState(true);\n  const [gameOver, setGameOver] = useState(null);\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    if (gameOver) return; // Nếu game đã kết thúc, không thể di chuyển\n\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n\n      // Kiểm tra di chuyển hợp lệ\n      if (!isValidMove(piece, fromRow, fromCol, toRow, toCol, board, isWhiteTurn)) return prevBoard;\n\n      // Ăn quân cờ của đối thủ nếu có\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n\n      // Đổi lượt chơi\n      setIsWhiteTurn(!isWhiteTurn);\n\n      // Kiểm tra thắng/thua\n      const result = checkGameOver(newBoard);\n      if (result) setGameOver(result);\n      return newBoard;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen w-screen flex flex-col items-center justify-center bg-cover bg-center\",\n      style: {\n        backgroundImage: \"url('https://source.unsplash.com/1920x1080/?chess,board')\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold bg-black text-white px-4 py-2 rounded-lg shadow-lg\",\n        children: gameOver || (isWhiteTurn ? \"White's Turn (♙♖♘♗♕♔)\" : \"Black's Turn (♟♜♞♝♛♚)\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-8 border-8 border-gray-800 shadow-2xl rounded-xl bg-gray-900 bg-opacity-70 p-1 mt-4\",\n        children: board.map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n          piece: piece,\n          row: rowIndex,\n          col: colIndex,\n          movePiece: movePiece\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-4 px-6 py-2 bg-blue-600 text-white text-lg font-bold rounded-lg hover:bg-blue-700 transition\",\n        onClick: () => {\n          setBoard(initialBoardSetup);\n          setGameOver(null);\n          setIsWhiteTurn(true);\n        },\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Chessboard, \"n22Fwm9wXUVCIaD9R/iAo/yutE0=\");\n_c = Chessboard;\nexport default Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["React","useState","DndProvider","HTML5Backend","Square","isValidMove","checkGameOver","jsxDEV","_jsxDEV","initialBoardSetup","Chessboard","_s","board","setBoard","isWhiteTurn","setIsWhiteTurn","gameOver","setGameOver","movePiece","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","row","piece","result","backend","children","className","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","rowIndex","colIndex","col","onClick","_c","$RefreshReg$"],"sources":["/root/se06206-final-thaydong-nhom1/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Square from \"./Square\";\nimport isValidMove from \"../utils/moveRules\";\nimport { checkGameOver } from \"../utils/moveRules\";\n\n\nconst initialBoardSetup = [\n  [\"♜\", \"♞\", \"♝\", \"♛\", \"♚\", \"♝\", \"♞\", \"♜\"],\n  [\"♟\", \"♟\", \"♟\", \"♟\", \"♟\", \"♟\", \"♟\", \"♟\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"♙\", \"♙\", \"♙\", \"♙\", \"♙\", \"♙\", \"♙\", \"♙\"],\n  [\"♖\", \"♘\", \"♗\", \"♕\", \"♔\", \"♗\", \"♘\", \"♖\"],\n];\n\nconst Chessboard = () => {\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [isWhiteTurn, setIsWhiteTurn] = useState(true);\n  const [gameOver, setGameOver] = useState(null);\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    if (gameOver) return; // Nếu game đã kết thúc, không thể di chuyển\n\n    setBoard((prevBoard) => {\n      const newBoard = prevBoard.map((row) => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n\n      // Kiểm tra di chuyển hợp lệ\n      if (!isValidMove(piece, fromRow, fromCol, toRow, toCol, board, isWhiteTurn)) return prevBoard;\n\n      // Ăn quân cờ của đối thủ nếu có\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n\n      // Đổi lượt chơi\n      setIsWhiteTurn(!isWhiteTurn);\n\n      // Kiểm tra thắng/thua\n      const result = checkGameOver(newBoard);\n      if (result) setGameOver(result);\n\n      return newBoard;\n    });\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div\n        className=\"h-screen w-screen flex flex-col items-center justify-center bg-cover bg-center\"\n        style={{ backgroundImage: \"url('https://source.unsplash.com/1920x1080/?chess,board')\" }}\n      >\n        <h1 className=\"text-3xl font-bold bg-black text-white px-4 py-2 rounded-lg shadow-lg\">\n          {gameOver || (isWhiteTurn ? \"White's Turn (♙♖♘♗♕♔)\" : \"Black's Turn (♟♜♞♝♛♚)\")}\n        </h1>\n\n        <div className=\"grid grid-cols-8 border-8 border-gray-800 shadow-2xl rounded-xl bg-gray-900 bg-opacity-70 p-1 mt-4\">\n          {board.map((row, rowIndex) =>\n            row.map((piece, colIndex) => (\n              <Square\n                key={`${rowIndex}-${colIndex}`}\n                piece={piece}\n                row={rowIndex}\n                col={colIndex}\n                movePiece={movePiece}\n              />\n            ))\n          )}\n        </div>\n\n        {gameOver && (\n          <button\n            className=\"mt-4 px-6 py-2 bg-blue-600 text-white text-lg font-bold rounded-lg hover:bg-blue-700 transition\"\n            onClick={() => {\n              setBoard(initialBoardSetup);\n              setGameOver(null);\n              setIsWhiteTurn(true);\n            }}\n          >\n            Restart Game\n          </button>\n        )}\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}