{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\se06206-final-thaydong-nhom1\\\\se06206-final-thaydong-nhom1-main\\\\Chess-game-login\\\\src\\\\components\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { getValidMoves } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\";\nimport pieceImages from \"../assets/pieceImages\";\nimport { connectWebSocket, sendMove } from \"../websocket\"; // Import WebSocket\nimport ChessBoard from \"./ChessBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  PIECE: \"piece\"\n};\nconst ChessGame = () => {\n  _s();\n  const [roomId, setRoomId] = useState(\"\"); // Lưu roomId nhập vào\n  const [joined, setJoined] = useState(false); // Kiểm tra đã vào phòng chưa\n  const [isBlack, setIsBlack] = useState(false); // Xác định người chơi là bên nào\n\n  const handleJoinRoom = () => {\n    if (roomId.trim() !== \"\") {\n      connectWebSocket(roomId, playerColor => {\n        setIsBlack(playerColor === \"black\"); // Nếu là người chơi thứ 2 thì sẽ là đen\n      });\n      setJoined(true); // Đánh dấu đã vào phòng\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gray-200\",\n    children: !joined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"\\uD83D\\uDD11 Enter Room ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: roomId,\n        onChange: e => setRoomId(e.target.value),\n        className: \"border p-2 rounded w-full mb-4\",\n        placeholder: \"Enter Room ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoinRoom,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 w-full\",\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ChessBoard, {\n      roomId: roomId,\n      isBlack: isBlack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) // Chuyển sang bàn cờ với thông tin màu sắc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessGame, \"5l4Q3a8EbdvN7RxnnUqCJfCmt6U=\");\n_c = ChessGame;\nconst Square = ({\n  piece,\n  row,\n  col,\n  movePiece,\n  isKingSquare,\n  selectedPiece,\n  setSelectedPiece,\n  currentTurn,\n  board,\n  validMoves\n}) => {\n  _s2();\n  const isDark = (row + col) % 2 === 1;\n  const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n  const isValidMoveSquare = validMoves.some(move => move.row === row && move.col === col);\n  const isCaptureMove = isValidMoveSquare && board[row][col];\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: {\n      row,\n      col,\n      piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: item => movePiece(item.row, item.col, row, col)\n  }));\n  const handleClick = () => {\n    if (selectedPiece) {\n      if (isValidMoveSquare) {\n        movePiece(selectedPiece.row, selectedPiece.col, row, col);\n      }\n      setSelectedPiece(null);\n    } else if (piece) {\n      const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n      if (isWhite === currentTurn) {\n        setSelectedPiece({\n          row,\n          col,\n          piece\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: `w-16 h-16 flex justify-center items-center \n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}\n        ${isKingSquare ? \"bg-red-500 animate-pulse\" : \"\"}\n        ${isSelected ? \"border-4 border-yellow-500\" : \"\"}\n<<<<<<< HEAD\n        ${isValidMoveSquare ? \"bg-green-300\" : \"\"}\n=======\n        ${isValidMoveSquare ? \"border-4 border-green-500\" : \"\"}\n>>>>>>> origin/tien-update-code\n        ${isCaptureMove ? \"border-4 border-red-500\" : \"\"}\n      `,\n    onClick: handleClick,\n    children: piece && pieceImages[piece] && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: drag,\n      src: pieceImages[piece],\n      alt: piece,\n      className: `w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-pointer\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s2(Square, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c2 = Square;\nconst Chessboard = ({\n  isBlack\n}) => {\n  _s3();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]); // 🆕 Lưu lịch sử nước đi\n  const [currentTurn, setCurrentTurn] = useState(true);\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n  const [gameMessage, setGameMessage] = useState(\"🎭 New Game Started! White's Turn\");\n  const resetGame = () => {\n    setBoard(initialBoardSetup);\n    setMoveHistory([]); // 🆕 Reset lịch sử nước đi\n    setCurrentTurn(true);\n    setIsCheck(false);\n    setIsCheckMate(false);\n    setCheckedKing(null);\n    setSelectedPiece(null);\n    setValidMoves([]);\n    setGameMessage(\"🎭 New Game Started! White's Turn\");\n  };\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n\n      // Lấy danh sách nước đi hợp lệ\n      const validMoves = getValidMoves(piece, fromRow, fromCol, prevBoard);\n      if (!validMoves.some(move => move.row === toRow && move.col === toCol)) {\n        return prevBoard; // Không cho phép đi nước không hợp lệ\n      }\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n\n      // 🆕 Kiểm tra trạng thái vua\n      const nextTurn = !currentTurn;\n      const kingPos = findKingPosition(newBoard, nextTurn);\n      const kingCheck = isKingInCheck(newBoard, nextTurn);\n      const checkmate = isCheckmate(newBoard, nextTurn);\n      console.log(\"King Position:\", kingPos);\n      console.log(\"Is Check:\", kingCheck);\n      setCurrentTurn(nextTurn);\n      setIsCheck(kingCheck);\n      setCheckedKing(kingCheck ? kingPos : null); // Nếu vua bị chiếu thì cập nhật vị trí\n      setIsCheckMate(checkmate);\n      setSelectedPiece(null);\n      setValidMoves([]);\n      if (checkmate) {\n        setGameMessage(`🏆 Checkmate! ${currentTurn ? \"Black Wins!\" : \"White Wins!\"}`);\n      } else if (kingCheck) {\n        setGameMessage(`🔥 ${nextTurn ? \"White\" : \"Black\"} King is in check! 🔥`);\n      } else {\n        setGameMessage(`🎭 Current Turn: ${nextTurn ? \"White\" : \"Black\"}`);\n      }\n\n      // 🆕 Gửi nước đi qua WebSocket\n      sendMove({\n        fromRow,\n        fromCol,\n        toRow,\n        toCol,\n        piece\n      });\n      return newBoard;\n    });\n  };\n  useEffect(() => {\n    connectWebSocket(moveData => {\n      setBoard(prevBoard => {\n        if (!prevBoard || !Array.isArray(prevBoard)) return prevBoard;\n        const newBoard = prevBoard.map(row => row ? [...row] : []);\n        if (!newBoard[moveData.toRow]) newBoard[moveData.toRow] = [];\n        newBoard[moveData.toRow][moveData.toCol] = moveData.piece;\n        newBoard[moveData.fromRow][moveData.fromCol] = \"\";\n        return newBoard;\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col justify-center items-center bg-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"\\u265F\\uFE0F Chess Game \\u265F\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), isCheck && !isCheckMate && checkedKing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed top-5 right-5 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg font-bold animate-pulse\",\n        children: [\"\\uD83D\\uDD25 Warning! \", currentTurn ? \"Black\" : \"White\", \" King is in Check! \\uD83D\\uDD25\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), gameMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2 bg-yellow-300 text-black px-4 py-2 rounded text-center font-bold shadow-md\",\n        children: gameMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-8 border-4 border-black shadow-lg\",\n          children: board.map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n            piece: piece,\n            row: rowIndex,\n            col: colIndex,\n            movePiece: movePiece,\n            isKingSquare: (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.row) === rowIndex && (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.col) === colIndex,\n            selectedPiece: selectedPiece,\n            setSelectedPiece: setSelectedPiece,\n            currentTurn: currentTurn,\n            board: board,\n            validMoves: selectedPiece ? getValidMoves(selectedPiece.piece, selectedPiece.row, selectedPiece.col, board) : []\n          }, `${rowIndex}-${colIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-64 bg-white p-4 rounded-lg shadow-md h-fit\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"\\uD83D\\uDCDC Move History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-decimal pl-5\",\n            children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: move\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 49\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s3(Chessboard, \"VfkTI/e1BOr3kIpkjkGZ5Xp85Xk=\");\n_c3 = Chessboard;\nexport default Chessboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ChessGame\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Chessboard\");","map":{"version":3,"names":["React","useState","useEffect","useDrag","useDrop","DndProvider","HTML5Backend","getValidMoves","initialBoardSetup","isKingInCheck","isCheckmate","findKingPosition","pieceImages","connectWebSocket","sendMove","ChessBoard","jsxDEV","_jsxDEV","ItemTypes","PIECE","ChessGame","_s","roomId","setRoomId","joined","setJoined","isBlack","setIsBlack","handleJoinRoom","trim","playerColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","Square","piece","row","col","movePiece","isKingSquare","selectedPiece","setSelectedPiece","currentTurn","board","validMoves","_s2","isDark","isSelected","isValidMoveSquare","some","move","isCaptureMove","isDragging","drag","item","collect","monitor","drop","accept","handleClick","isWhite","includes","ref","src","alt","_c2","Chessboard","_s3","setBoard","moveHistory","setMoveHistory","setCurrentTurn","isCheck","setIsCheck","isCheckMate","setIsCheckMate","checkedKing","setCheckedKing","setValidMoves","gameMessage","setGameMessage","resetGame","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","nextTurn","kingPos","kingCheck","checkmate","console","log","moveData","Array","isArray","backend","rowIndex","colIndex","index","_c3","$RefreshReg$"],"sources":["C:/Users/admin/se06206-final-thaydong-nhom1/se06206-final-thaydong-nhom1-main/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { getValidMoves } from \"../utils/moveRules\";\r\nimport { initialBoardSetup } from \"../config/boardSetup\";\r\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\";\r\nimport pieceImages from \"../assets/pieceImages\";\r\nimport { connectWebSocket, sendMove } from \"../websocket\"; // Import WebSocket\r\nimport ChessBoard from \"./ChessBoard\";\r\nconst ItemTypes = { PIECE: \"piece\" };\r\nconst ChessGame = () => {\r\n  const [roomId, setRoomId] = useState(\"\"); // Lưu roomId nhập vào\r\n  const [joined, setJoined] = useState(false); // Kiểm tra đã vào phòng chưa\r\n  const [isBlack, setIsBlack] = useState(false); // Xác định người chơi là bên nào\r\n\r\n  const handleJoinRoom = () => {\r\n    if (roomId.trim() !== \"\") {\r\n      connectWebSocket(roomId, (playerColor) => {\r\n        setIsBlack(playerColor === \"black\"); // Nếu là người chơi thứ 2 thì sẽ là đen\r\n      });\r\n      setJoined(true); // Đánh dấu đã vào phòng\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-200\">\r\n      {!joined ? (\r\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n          <h2 className=\"text-xl font-bold mb-4\">🔑 Enter Room ID</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={roomId}\r\n            onChange={(e) => setRoomId(e.target.value)}\r\n            className=\"border p-2 rounded w-full mb-4\"\r\n            placeholder=\"Enter Room ID\"\r\n          />\r\n          <button\r\n            onClick={handleJoinRoom}\r\n            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 w-full\"\r\n          >\r\n            Join Room\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <ChessBoard roomId={roomId} isBlack={isBlack} /> // Chuyển sang bàn cờ với thông tin màu sắc\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst Square = ({ piece, row, col, movePiece, isKingSquare, selectedPiece, setSelectedPiece, currentTurn, board, validMoves }) => {\r\n  const isDark = (row + col) % 2 === 1;\r\n  const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\r\n  const isValidMoveSquare = validMoves.some((move) => move.row === row && move.col === col);\r\n  const isCaptureMove = isValidMoveSquare && board[row][col];\r\n\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: ItemTypes.PIECE,\r\n    item: { row, col, piece },\r\n    collect: (monitor) => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  }));\r\n\r\n  const [, drop] = useDrop(() => ({\r\n    accept: ItemTypes.PIECE,\r\n    drop: (item) => movePiece(item.row, item.col, row, col),\r\n  }));\r\n\r\n  const handleClick = () => {\r\n    if (selectedPiece) {\r\n      if (isValidMoveSquare) {\r\n        movePiece(selectedPiece.row, selectedPiece.col, row, col);\r\n      }\r\n      setSelectedPiece(null);\r\n    } else if (piece) {\r\n      const isWhite = \"♙♖♘♗♕♔\".includes(piece);\r\n      if (isWhite === currentTurn) {\r\n        setSelectedPiece({ row, col, piece });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      className={`w-16 h-16 flex justify-center items-center \r\n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}\r\n        ${isKingSquare ? \"bg-red-500 animate-pulse\" : \"\"}\r\n        ${isSelected ? \"border-4 border-yellow-500\" : \"\"}\r\n<<<<<<< HEAD\r\n        ${isValidMoveSquare ? \"bg-green-300\" : \"\"}\r\n=======\r\n        ${isValidMoveSquare ? \"border-4 border-green-500\" : \"\"}\r\n>>>>>>> origin/tien-update-code\r\n        ${isCaptureMove ? \"border-4 border-red-500\" : \"\"}\r\n      `}\r\n      onClick={handleClick}\r\n    >\r\n      {piece && pieceImages[piece] && (\r\n        <img\r\n          ref={drag}\r\n          src={pieceImages[piece]}\r\n          alt={piece}\r\n          className={`w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-pointer\"}`}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Chessboard = ({ isBlack }) => {\r\n  const [board, setBoard] = useState(initialBoardSetup);\r\n  const [moveHistory, setMoveHistory] = useState([]); // 🆕 Lưu lịch sử nước đi\r\n  const [currentTurn, setCurrentTurn] = useState(true);\r\n  const [isCheck, setIsCheck] = useState(false);\r\n  const [isCheckMate, setIsCheckMate] = useState(false);\r\n  const [checkedKing, setCheckedKing] = useState(null);\r\n  const [selectedPiece, setSelectedPiece] = useState(null);\r\n  const [validMoves, setValidMoves] = useState([]);\r\n  const [gameMessage, setGameMessage] = useState(\"🎭 New Game Started! White's Turn\");\r\n\r\n  const resetGame = () => {\r\n    setBoard(initialBoardSetup);\r\n    setMoveHistory([]); // 🆕 Reset lịch sử nước đi\r\n    setCurrentTurn(true);\r\n    setIsCheck(false);\r\n    setIsCheckMate(false);\r\n    setCheckedKing(null);\r\n    setSelectedPiece(null);\r\n    setValidMoves([]);\r\n    setGameMessage(\"🎭 New Game Started! White's Turn\");\r\n  };\r\n\r\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\r\n    setBoard((prevBoard) => {\r\n      const newBoard = prevBoard.map((row) => [...row]);\r\n      const piece = newBoard[fromRow][fromCol];\r\n  \r\n      // Lấy danh sách nước đi hợp lệ\r\n      const validMoves = getValidMoves(piece, fromRow, fromCol, prevBoard);\r\n      if (!validMoves.some((move) => move.row === toRow && move.col === toCol)) {\r\n        return prevBoard; // Không cho phép đi nước không hợp lệ\r\n      }\r\n  \r\n      newBoard[toRow][toCol] = piece;\r\n      newBoard[fromRow][fromCol] = \"\";\r\n  \r\n      // 🆕 Kiểm tra trạng thái vua\r\n      const nextTurn = !currentTurn;\r\n      const kingPos = findKingPosition(newBoard, nextTurn);\r\n      const kingCheck = isKingInCheck(newBoard, nextTurn);\r\n      const checkmate = isCheckmate(newBoard, nextTurn);\r\n  \r\n      console.log(\"King Position:\", kingPos);\r\n      console.log(\"Is Check:\", kingCheck);\r\n  \r\n      setCurrentTurn(nextTurn);\r\n      setIsCheck(kingCheck);\r\n      setCheckedKing(kingCheck ? kingPos : null); // Nếu vua bị chiếu thì cập nhật vị trí\r\n      setIsCheckMate(checkmate);\r\n      setSelectedPiece(null);\r\n      setValidMoves([]);\r\n  \r\n      if (checkmate) {\r\n        setGameMessage(`🏆 Checkmate! ${currentTurn ? \"Black Wins!\" : \"White Wins!\"}`);\r\n      } else if (kingCheck) {\r\n        setGameMessage(`🔥 ${nextTurn ? \"White\" : \"Black\"} King is in check! 🔥`);\r\n      } else {\r\n        setGameMessage(`🎭 Current Turn: ${nextTurn ? \"White\" : \"Black\"}`);\r\n      }\r\n  \r\n      // 🆕 Gửi nước đi qua WebSocket\r\n      sendMove({ fromRow, fromCol, toRow, toCol, piece });\r\n  \r\n      return newBoard;\r\n    });\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    connectWebSocket((moveData) => {\r\n      setBoard((prevBoard) => {\r\n        if (!prevBoard || !Array.isArray(prevBoard)) return prevBoard;\r\n        \r\n        const newBoard = prevBoard.map(row => row ? [...row] : []);\r\n        if (!newBoard[moveData.toRow]) newBoard[moveData.toRow] = [];\r\n        \r\n        newBoard[moveData.toRow][moveData.toCol] = moveData.piece;\r\n        newBoard[moveData.fromRow][moveData.fromCol] = \"\";\r\n        return newBoard;\r\n      });\r\n    });\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-gray-200\">\r\n        <h1 className=\"text-2xl font-bold mb-4\">♟️ Chess Game ♟️</h1>\r\n        \r\n        {isCheck && !isCheckMate && checkedKing && (\r\n          <div className=\"fixed top-5 right-5 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg font-bold animate-pulse\">\r\n            🔥 Warning! {currentTurn ? \"Black\" : \"White\"} King is in Check! 🔥\r\n          </div>\r\n        )}\r\n\r\n\r\n\r\n        {gameMessage && (\r\n          <div className=\"mb-2 bg-yellow-300 text-black px-4 py-2 rounded text-center font-bold shadow-md\">\r\n            {gameMessage}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"flex gap-8\">\r\n          <div className=\"grid grid-cols-8 border-4 border-black shadow-lg\">\r\n            {board.map((row, rowIndex) =>\r\n              row.map((piece, colIndex) => (\r\n                <Square key={`${rowIndex}-${colIndex}`} piece={piece} row={rowIndex} col={colIndex} movePiece={movePiece} isKingSquare={checkedKing?.row === rowIndex && checkedKing?.col === colIndex} selectedPiece={selectedPiece} setSelectedPiece={setSelectedPiece} currentTurn={currentTurn} board={board} validMoves={selectedPiece ? getValidMoves(selectedPiece.piece, selectedPiece.row, selectedPiece.col, board) : []} />\r\n              ))\r\n            )}\r\n          </div>\r\n\r\n          {/* 🆕 Lịch sử nước đi */}\r\n          <div className=\"w-64 bg-white p-4 rounded-lg shadow-md h-fit\">\r\n            <h2 className=\"text-lg font-semibold mb-2\">📜 Move History</h2>\r\n            <ul className=\"list-decimal pl-5\">\r\n              {moveHistory.map((move, index) => <li key={index}>{move}</li>)}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n};\r\n\r\nexport default Chessboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}