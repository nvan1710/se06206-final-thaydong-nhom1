{"ast":null,"code":"import { getValidMoves } from \"./moveRules\"; // Change isValidMove to getValidMoves\n// Import lu·∫≠t di chuy·ªÉn\n\n// üìç T√¨m v·ªã tr√≠ c·ªßa vua tr√™n b√†n c·ªù\nexport const findKingPosition = (board, isWhite) => {\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      if (board[row][col] === (isWhite ? \"‚ôî\" : \"‚ôö\")) {\n        return {\n          row,\n          col\n        };\n      }\n    }\n  }\n  return null;\n};\n\n// üìç Ki·ªÉm tra xem vua c√≥ b·ªã chi·∫øu kh√¥ng\nexport const isKingInCheck = (board, isWhite) => {\n  const kingPos = findKingPosition(board, isWhite);\n  if (!kingPos) return false; // N·∫øu kh√¥ng t√¨m th·∫•y vua, kh√¥ng th·ªÉ b·ªã chi·∫øu\n\n  const {\n    row: kingRow,\n    col: kingCol\n  } = kingPos;\n  console.log(`üîç Ki·ªÉm tra chi·∫øu cho vua ${isWhite ? \"tr·∫Øng\" : \"ƒëen\"} t·∫°i (${kingRow}, ${kingCol})`);\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      const piece = board[row][col];\n      if (!piece) continue; // Kh√¥ng c√≥ qu√¢n c·ªù ·ªü √¥ n√†y\n\n      const isEnemy = \"‚ôô‚ôñ‚ôò‚ôó‚ôï‚ôö\".includes(piece) !== isWhite; // N·∫øu qu√¢n c·ªù l√† c·ªßa ƒë·ªëi th·ªß\n      if (isEnemy && isValidMove(piece, row, col, kingRow, kingCol, board)) {\n        console.log(`‚ö†Ô∏è Vua ƒëang b·ªã chi·∫øu b·ªüi qu√¢n ${piece} t·ª´ (${row}, ${col})`);\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n// üìç Ki·ªÉm tra chi·∫øu h·∫øt (Checkmate)\nexport const isCheckmate = (board, isWhite) => {\n  if (!isKingInCheck(board, isWhite)) return false; // N·∫øu kh√¥ng b·ªã chi·∫øu, kh√¥ng ph·∫£i chi·∫øu h·∫øt.\n\n  console.log(`üîé Ki·ªÉm tra chi·∫øu h·∫øt cho vua ${isWhite ? \"tr·∫Øng\" : \"ƒëen\"}...`);\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      const piece = board[row][col];\n      if (!piece) continue;\n      const isFriendly = \"‚ôô‚ôñ‚ôò‚ôó‚ôï‚ôî\".includes(piece) === isWhite;\n      if (!isFriendly) continue;\n      for (let newRow = 0; newRow < 8; newRow++) {\n        for (let newCol = 0; newCol < 8; newCol++) {\n          if (isValidMove(piece, row, col, newRow, newCol, board)) {\n            // Sao ch√©p b√†n c·ªù ƒë√∫ng c√°ch\n            const newBoard = board.map(innerRow => [...innerRow]);\n            newBoard[newRow][newCol] = piece;\n            newBoard[row][col] = \"\";\n            if (!isKingInCheck(newBoard, isWhite)) {\n              console.log(`‚úÖ T√¨m th·∫•y m·ªôt n∆∞·ªõc tho√°t t·∫°i (${row}, ${col}) ‚Üí (${newRow}, ${newCol})`);\n              return false; // N·∫øu c√≥ n∆∞·ªõc ƒëi tho√°t chi·∫øu, kh√¥ng ph·∫£i chi·∫øu h·∫øt\n            }\n          }\n        }\n      }\n    }\n  }\n  console.log(`üèÜ Chi·∫øu h·∫øt! Kh√¥ng c√≤n n∆∞·ªõc n√†o h·ª£p l·ªá.`);\n  return true; // Kh√¥ng c√≥ n∆∞·ªõc n√†o h·ª£p l·ªá ‚Üí chi·∫øu h·∫øt\n};","map":{"version":3,"names":["getValidMoves","findKingPosition","board","isWhite","row","col","isKingInCheck","kingPos","kingRow","kingCol","console","log","piece","isEnemy","includes","isValidMove","isCheckmate","isFriendly","newRow","newCol","newBoard","map","innerRow"],"sources":["/root/se06206-final-thaydong-nhom1/se06206-final-thaydong-nhom1-main/Chess-game-login/src/utils/checkmate.js"],"sourcesContent":["import { getValidMoves } from \"./moveRules\"; // Change isValidMove to getValidMoves\n // Import lu·∫≠t di chuy·ªÉn\n\n// üìç T√¨m v·ªã tr√≠ c·ªßa vua tr√™n b√†n c·ªù\nexport const findKingPosition = (board, isWhite) => {\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      if (board[row][col] === (isWhite ? \"‚ôî\" : \"‚ôö\")) {\n        return { row, col };\n      }\n    }\n  }\n  return null;\n};\n\n// üìç Ki·ªÉm tra xem vua c√≥ b·ªã chi·∫øu kh√¥ng\nexport const isKingInCheck = (board, isWhite) => {\n    const kingPos = findKingPosition(board, isWhite);\n    if (!kingPos) return false; // N·∫øu kh√¥ng t√¨m th·∫•y vua, kh√¥ng th·ªÉ b·ªã chi·∫øu\n  \n    const { row: kingRow, col: kingCol } = kingPos;\n  \n    console.log(`üîç Ki·ªÉm tra chi·∫øu cho vua ${isWhite ? \"tr·∫Øng\" : \"ƒëen\"} t·∫°i (${kingRow}, ${kingCol})`);\n  \n    for (let row = 0; row < 8; row++) {\n      for (let col = 0; col < 8; col++) {\n        const piece = board[row][col];\n        if (!piece) continue; // Kh√¥ng c√≥ qu√¢n c·ªù ·ªü √¥ n√†y\n  \n        const isEnemy = \"‚ôô‚ôñ‚ôò‚ôó‚ôï‚ôö\".includes(piece) !== isWhite; // N·∫øu qu√¢n c·ªù l√† c·ªßa ƒë·ªëi th·ªß\n        if (isEnemy && isValidMove(piece, row, col, kingRow, kingCol, board)) {\n          console.log(`‚ö†Ô∏è Vua ƒëang b·ªã chi·∫øu b·ªüi qu√¢n ${piece} t·ª´ (${row}, ${col})`);\n          return true;\n        }\n      }\n    }\n  \n    return false;\n  };\n  \n  \n  \n\n// üìç Ki·ªÉm tra chi·∫øu h·∫øt (Checkmate)\nexport const isCheckmate = (board, isWhite) => {\n    if (!isKingInCheck(board, isWhite)) return false; // N·∫øu kh√¥ng b·ªã chi·∫øu, kh√¥ng ph·∫£i chi·∫øu h·∫øt.\n  \n    console.log(`üîé Ki·ªÉm tra chi·∫øu h·∫øt cho vua ${isWhite ? \"tr·∫Øng\" : \"ƒëen\"}...`);\n  \n    for (let row = 0; row < 8; row++) {\n      for (let col = 0; col < 8; col++) {\n        const piece = board[row][col];\n        if (!piece) continue;\n  \n        const isFriendly = \"‚ôô‚ôñ‚ôò‚ôó‚ôï‚ôî\".includes(piece) === isWhite;\n        if (!isFriendly) continue;\n  \n        for (let newRow = 0; newRow < 8; newRow++) {\n          for (let newCol = 0; newCol < 8; newCol++) {\n            if (isValidMove(piece, row, col, newRow, newCol, board)) {\n              // Sao ch√©p b√†n c·ªù ƒë√∫ng c√°ch\n              const newBoard = board.map(innerRow => [...innerRow]);\n              newBoard[newRow][newCol] = piece;\n              newBoard[row][col] = \"\";\n  \n              if (!isKingInCheck(newBoard, isWhite)) {\n                console.log(`‚úÖ T√¨m th·∫•y m·ªôt n∆∞·ªõc tho√°t t·∫°i (${row}, ${col}) ‚Üí (${newRow}, ${newCol})`);\n                return false; // N·∫øu c√≥ n∆∞·ªõc ƒëi tho√°t chi·∫øu, kh√¥ng ph·∫£i chi·∫øu h·∫øt\n              }\n            }\n          }\n        }\n      }\n    }\n  \n    console.log(`üèÜ Chi·∫øu h·∫øt! Kh√¥ng c√≤n n∆∞·ªõc n√†o h·ª£p l·ªá.`);\n    return true; // Kh√¥ng c√≥ n∆∞·ªõc n√†o h·ª£p l·ªá ‚Üí chi·∫øu h·∫øt\n  };\n  \n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}