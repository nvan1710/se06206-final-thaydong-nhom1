{"ast":null,"code":"var _jsxFileName = \"D:\\\\se06206-final-thaydong-nhom1-main\\\\se06206-final-thaydong-nhom1-main\\\\Chess-game-login\\\\src\\\\components\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { getValidMoves } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\";\nimport pieceImages from \"../assets/pieceImages\";\nimport { sendMove } from \"../websocket\"; // WebSocket\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  PIECE: \"piece\"\n};\nconst Chessboard = ({\n  roomId,\n  playerColor,\n  ws\n}) => {\n  _s();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]); // 🆕 Lưu lịch sử nước đi\n  const [currentTurn, setCurrentTurn] = useState(\"white\"); // 🆕 Quản lý lượt đi\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n  const [gameMessage, setGameMessage] = useState(\"🎭 New Game Started! White's Turn\");\n\n  // 🛠️ Xoay bàn cờ nếu người chơi là 'black'\n  const isBlack = playerColor === \"black\";\n  const resetGame = () => {\n    setBoard(initialBoardSetup);\n    setMoveHistory([]); // 🆕 Reset lịch sử nước đi\n    setCurrentTurn(\"white\");\n    setIsCheck(false);\n    setIsCheckMate(false);\n    setCheckedKing(null);\n    setSelectedPiece(null);\n    setValidMoves([]);\n    setGameMessage(\"🎭 New Game Started! White's Turn\");\n  };\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n\n      // Lấy danh sách nước đi hợp lệ\n      const validMoves = getValidMoves(piece, fromRow, fromCol, prevBoard);\n      if (!validMoves.some(move => move.row === toRow && move.col === toCol)) {\n        return prevBoard; // Không cho phép đi nước không hợp lệ\n      }\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n\n      // 🆕 Kiểm tra trạng thái vua\n      const nextTurn = currentTurn === \"white\" ? \"black\" : \"white\";\n      const kingPos = findKingPosition(newBoard, nextTurn);\n      const kingCheck = isKingInCheck(newBoard, nextTurn);\n      const checkmate = isCheckmate(newBoard, nextTurn);\n      setCurrentTurn(nextTurn);\n      setIsCheck(kingCheck);\n      setCheckedKing(kingCheck ? kingPos : null); // Nếu vua bị chiếu thì cập nhật vị trí\n      setIsCheckMate(checkmate);\n      setSelectedPiece(null);\n      setValidMoves([]);\n      if (checkmate) {\n        setGameMessage(`🏆 Checkmate! ${currentTurn === \"white\" ? \"Black Wins!\" : \"White Wins!\"}`);\n      } else if (kingCheck) {\n        setGameMessage(`🔥 ${nextTurn} King is in check! 🔥`);\n      } else {\n        setGameMessage(`🎭 Current Turn: ${nextTurn}`);\n      }\n\n      // 🆕 Gửi nước đi qua WebSocket\n      sendMove(ws, {\n        fromRow,\n        fromCol,\n        toRow,\n        toCol,\n        piece\n      });\n\n      // 🆕 Cập nhật lịch sử nước đi\n      setMoveHistory(prevHistory => [...prevHistory, `${piece} ${String.fromCharCode(97 + fromCol)}${8 - fromRow} → ${String.fromCharCode(97 + toCol)}${8 - toRow}`]);\n      return newBoard;\n    });\n  };\n\n  // 🛠️ Nhận nước đi từ WebSocket\n  useEffect(() => {\n    if (!ws) return;\n    ws.onmessage = message => {\n      try {\n        const moveData = JSON.parse(message.data);\n        if (moveData.type === \"move\") {\n          setBoard(prevBoard => {\n            const newBoard = prevBoard.map(row => [...row]);\n            newBoard[moveData.toRow][moveData.toCol] = moveData.piece;\n            newBoard[moveData.fromRow][moveData.fromCol] = \"\";\n            return newBoard;\n          });\n          setCurrentTurn(moveData.nextTurn);\n        }\n      } catch (error) {\n        console.error(\"Error processing WebSocket message:\", error);\n      }\n    };\n  }, [ws]);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col justify-center items-center bg-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"\\u265F\\uFE0F Chess Game \\u265F\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), isCheck && !isCheckMate && checkedKing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed top-5 right-5 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg font-bold animate-pulse\",\n        children: [\"\\uD83D\\uDD25 Warning! \", currentTurn, \" King is in Check! \\uD83D\\uDD25\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), gameMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2 bg-yellow-300 text-black px-4 py-2 rounded text-center font-bold shadow-md\",\n        children: gameMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-8 border-4 border-black shadow-lg\",\n          children: (isBlack ? [...board].reverse() : board).map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n            piece: piece,\n            row: isBlack ? 7 - rowIndex : rowIndex,\n            col: colIndex,\n            movePiece: movePiece,\n            isKingSquare: (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.row) === rowIndex && (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.col) === colIndex,\n            selectedPiece: selectedPiece,\n            setSelectedPiece: setSelectedPiece,\n            currentTurn: currentTurn,\n            board: board,\n            validMoves: selectedPiece ? getValidMoves(selectedPiece.piece, selectedPiece.row, selectedPiece.col, board) : []\n          }, `${rowIndex}-${colIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-64 bg-white p-4 rounded-lg shadow-md h-fit\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"\\uD83D\\uDCDC Move History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-decimal pl-5\",\n            children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: move\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 49\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(Chessboard, \"UCEirlm38ZpiSBZgDKt6OUsOfvE=\");\n_c = Chessboard;\nconst Square = ({\n  piece,\n  row,\n  col,\n  movePiece\n}) => {\n  _s2();\n  const isDark = (row + col) % 2 === 1;\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: {\n      row,\n      col,\n      piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `w-16 h-16 flex justify-center items-center ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}`,\n    children: piece && pieceImages[piece] && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: drag,\n      src: pieceImages[piece],\n      alt: piece,\n      className: `w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-pointer\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s2(Square, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n_c2 = Square;\nexport default Chessboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chessboard\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"names":["React","useState","useEffect","useDrag","useDrop","DndProvider","HTML5Backend","getValidMoves","initialBoardSetup","isKingInCheck","isCheckmate","findKingPosition","pieceImages","sendMove","jsxDEV","_jsxDEV","ItemTypes","PIECE","Chessboard","roomId","playerColor","ws","_s","board","setBoard","moveHistory","setMoveHistory","currentTurn","setCurrentTurn","isCheck","setIsCheck","isCheckMate","setIsCheckMate","checkedKing","setCheckedKing","selectedPiece","setSelectedPiece","validMoves","setValidMoves","gameMessage","setGameMessage","isBlack","resetGame","movePiece","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","row","piece","some","move","col","nextTurn","kingPos","kingCheck","checkmate","prevHistory","String","fromCharCode","onmessage","message","moveData","JSON","parse","data","type","error","console","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","reverse","rowIndex","colIndex","Square","isKingSquare","index","_c","_s2","isDark","isDragging","drag","item","collect","monitor","ref","src","alt","_c2","$RefreshReg$"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { getValidMoves } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\";\nimport pieceImages from \"../assets/pieceImages\";\nimport { sendMove } from \"../websocket\"; // WebSocket\nconst ItemTypes = { PIECE: \"piece\" };\n\nconst Chessboard = ({ roomId, playerColor, ws }) => {\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]); // 🆕 Lưu lịch sử nước đi\n  const [currentTurn, setCurrentTurn] = useState(\"white\"); // 🆕 Quản lý lượt đi\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n  const [gameMessage, setGameMessage] = useState(\"🎭 New Game Started! White's Turn\");\n\n  // 🛠️ Xoay bàn cờ nếu người chơi là 'black'\n  const isBlack = playerColor === \"black\";\n\n  const resetGame = () => {\n    setBoard(initialBoardSetup);\n    setMoveHistory([]); // 🆕 Reset lịch sử nước đi\n    setCurrentTurn(\"white\");\n    setIsCheck(false);\n    setIsCheckMate(false);\n    setCheckedKing(null);\n    setSelectedPiece(null);\n    setValidMoves([]);\n    setGameMessage(\"🎭 New Game Started! White's Turn\");\n  };\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard((prevBoard) => {\n      const newBoard = prevBoard.map((row) => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n\n      // Lấy danh sách nước đi hợp lệ\n      const validMoves = getValidMoves(piece, fromRow, fromCol, prevBoard);\n      if (!validMoves.some((move) => move.row === toRow && move.col === toCol)) {\n        return prevBoard; // Không cho phép đi nước không hợp lệ\n      }\n\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n\n      // 🆕 Kiểm tra trạng thái vua\n      const nextTurn = currentTurn === \"white\" ? \"black\" : \"white\";\n      const kingPos = findKingPosition(newBoard, nextTurn);\n      const kingCheck = isKingInCheck(newBoard, nextTurn);\n      const checkmate = isCheckmate(newBoard, nextTurn);\n\n      setCurrentTurn(nextTurn);\n      setIsCheck(kingCheck);\n      setCheckedKing(kingCheck ? kingPos : null); // Nếu vua bị chiếu thì cập nhật vị trí\n      setIsCheckMate(checkmate);\n      setSelectedPiece(null);\n      setValidMoves([]);\n\n      if (checkmate) {\n        setGameMessage(`🏆 Checkmate! ${currentTurn === \"white\" ? \"Black Wins!\" : \"White Wins!\"}`);\n      } else if (kingCheck) {\n        setGameMessage(`🔥 ${nextTurn} King is in check! 🔥`);\n      } else {\n        setGameMessage(`🎭 Current Turn: ${nextTurn}`);\n      }\n\n      // 🆕 Gửi nước đi qua WebSocket\n      sendMove(ws, { fromRow, fromCol, toRow, toCol, piece });\n\n      // 🆕 Cập nhật lịch sử nước đi\n      setMoveHistory((prevHistory) => [\n        ...prevHistory,\n        `${piece} ${String.fromCharCode(97 + fromCol)}${8 - fromRow} → ${String.fromCharCode(97 + toCol)}${8 - toRow}`,\n      ]);\n\n      return newBoard;\n    });\n  };\n\n  // 🛠️ Nhận nước đi từ WebSocket\n  useEffect(() => {\n    if (!ws) return;\n    \n    ws.onmessage = (message) => {\n      try {\n        const moveData = JSON.parse(message.data);\n        if (moveData.type === \"move\") {\n          setBoard((prevBoard) => {\n            const newBoard = prevBoard.map(row => [...row]);\n            newBoard[moveData.toRow][moveData.toCol] = moveData.piece;\n            newBoard[moveData.fromRow][moveData.fromCol] = \"\";\n            return newBoard;\n          });\n\n          setCurrentTurn(moveData.nextTurn);\n        }\n      } catch (error) {\n        console.error(\"Error processing WebSocket message:\", error);\n      }\n    };\n  }, [ws]);\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-gray-200\">\n        <h1 className=\"text-2xl font-bold mb-4\">♟️ Chess Game ♟️</h1>\n\n        {isCheck && !isCheckMate && checkedKing && (\n          <div className=\"fixed top-5 right-5 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg font-bold animate-pulse\">\n            🔥 Warning! {currentTurn} King is in Check! 🔥\n          </div>\n        )}\n\n        {gameMessage && (\n          <div className=\"mb-2 bg-yellow-300 text-black px-4 py-2 rounded text-center font-bold shadow-md\">\n            {gameMessage}\n          </div>\n        )}\n\n        <div className=\"flex gap-8\">\n          <div className=\"grid grid-cols-8 border-4 border-black shadow-lg\">\n            {(isBlack ? [...board].reverse() : board).map((row, rowIndex) =>\n              row.map((piece, colIndex) => (\n                <Square\n                  key={`${rowIndex}-${colIndex}`}\n                  piece={piece}\n                  row={isBlack ? 7 - rowIndex : rowIndex}\n                  col={colIndex}\n                  movePiece={movePiece}\n                  isKingSquare={checkedKing?.row === rowIndex && checkedKing?.col === colIndex}\n                  selectedPiece={selectedPiece}\n                  setSelectedPiece={setSelectedPiece}\n                  currentTurn={currentTurn}\n                  board={board}\n                  validMoves={selectedPiece ? getValidMoves(selectedPiece.piece, selectedPiece.row, selectedPiece.col, board) : []}\n                />\n              ))\n            )}\n          </div>\n\n          <div className=\"w-64 bg-white p-4 rounded-lg shadow-md h-fit\">\n            <h2 className=\"text-lg font-semibold mb-2\">📜 Move History</h2>\n            <ul className=\"list-decimal pl-5\">\n              {moveHistory.map((move, index) => <li key={index}>{move}</li>)}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nconst Square = ({ piece, row, col, movePiece }) => {\n  const isDark = (row + col) % 2 === 1;\n  \n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: { row, col, piece },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  return (\n    <div className={`w-16 h-16 flex justify-center items-center ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}`}>\n      {piece && pieceImages[piece] && (\n        <img ref={drag} src={pieceImages[piece]} alt={piece} className={`w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-pointer\"}`} />\n      )}\n    </div>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}