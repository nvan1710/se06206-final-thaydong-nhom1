{"ast":null,"code":"import SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nconst SOCKET_URL = \"http://localhost:8080/ws\"; // ƒê·ªãa ch·ªâ WebSocket backend\nlet stompClient = null;\nexport const connectWebSocket = onGameStateReceived => {\n  if (stompClient && stompClient.connected) {\n    console.log(\"‚ö° WebSocket already connected\");\n    return;\n  }\n  const socket = new SockJS(SOCKET_URL);\n  stompClient = new Client({\n    webSocketFactory: () => socket,\n    reconnectDelay: 5000,\n    // T·ª± ƒë·ªông reconnect sau 5s\n    debug: msg => console.log(\"üîç STOMP Debug:\", msg),\n    onConnect: () => {\n      console.log(\"‚úÖ WebSocket Connected\");\n      stompClient.subscribe(\"/topic/chess-updates\", message => {\n        try {\n          const gameState = JSON.parse(message.body);\n          console.log(\"‚ôüÔ∏è GameState Received:\", gameState);\n\n          // Ki·ªÉm tra d·ªØ li·ªáu t·ª´ backend c√≥ ƒë√∫ng c·∫•u tr√∫c GameState kh√¥ng\n          if (gameState && gameState.board && Array.isArray(gameState.moveHistory) && gameState.currentTurn && gameState.timers) {\n            onGameStateReceived(gameState); // G·ª≠i d·ªØ li·ªáu v·ªÅ React\n          } else {\n            console.warn(\"‚ö†Ô∏è Invalid GameState received:\", gameState);\n          }\n        } catch (error) {\n          console.error(\"‚ùå Error parsing received data:\", error);\n        }\n      });\n    },\n    onDisconnect: () => console.log(\"‚ùå WebSocket Disconnected\"),\n    onStompError: frame => console.error(\"üö® STOMP Error:\", frame)\n  });\n  stompClient.activate();\n};\nexport const sendMove = moveData => {\n  if (!stompClient || !stompClient.connected) {\n    console.warn(\"‚ö†Ô∏è Cannot send move, WebSocket is not connected.\");\n    return;\n  }\n  if (!moveData || moveData.fromRow === undefined || moveData.toRow === undefined || !moveData.gameId) {\n    console.warn(\"‚ö†Ô∏è Invalid move data:\", moveData);\n    return;\n  }\n  stompClient.publish({\n    destination: \"/app/move\",\n    body: JSON.stringify(moveData)\n  });\n  console.log(\"üì§ Sent Move:\", moveData);\n};","map":{"version":3,"names":["SockJS","Client","SOCKET_URL","stompClient","connectWebSocket","onGameStateReceived","connected","console","log","socket","webSocketFactory","reconnectDelay","debug","msg","onConnect","subscribe","message","gameState","JSON","parse","body","board","Array","isArray","moveHistory","currentTurn","timers","warn","error","onDisconnect","onStompError","frame","activate","sendMove","moveData","fromRow","undefined","toRow","gameId","publish","destination","stringify"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/websocket.js"],"sourcesContent":["import SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nconst SOCKET_URL = \"http://localhost:8080/ws\"; // ƒê·ªãa ch·ªâ WebSocket backend\r\nlet stompClient = null;\r\n\r\nexport const connectWebSocket = (onGameStateReceived) => {\r\n  if (stompClient && stompClient.connected) {\r\n    console.log(\"‚ö° WebSocket already connected\");\r\n    return;\r\n  }\r\n\r\n  const socket = new SockJS(SOCKET_URL);\r\n  stompClient = new Client({\r\n    webSocketFactory: () => socket,\r\n    reconnectDelay: 5000, // T·ª± ƒë·ªông reconnect sau 5s\r\n    debug: (msg) => console.log(\"üîç STOMP Debug:\", msg),\r\n    onConnect: () => {\r\n      console.log(\"‚úÖ WebSocket Connected\");\r\n\r\n      stompClient.subscribe(\"/topic/chess-updates\", (message) => {\r\n        try {\r\n          const gameState = JSON.parse(message.body);\r\n          console.log(\"‚ôüÔ∏è GameState Received:\", gameState);\r\n\r\n          // Ki·ªÉm tra d·ªØ li·ªáu t·ª´ backend c√≥ ƒë√∫ng c·∫•u tr√∫c GameState kh√¥ng\r\n          if (\r\n            gameState &&\r\n            gameState.board &&\r\n            Array.isArray(gameState.moveHistory) &&\r\n            gameState.currentTurn &&\r\n            gameState.timers\r\n          ) {\r\n            onGameStateReceived(gameState); // G·ª≠i d·ªØ li·ªáu v·ªÅ React\r\n          } else {\r\n            console.warn(\"‚ö†Ô∏è Invalid GameState received:\", gameState);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"‚ùå Error parsing received data:\", error);\r\n        }\r\n      });\r\n    },\r\n    onDisconnect: () => console.log(\"‚ùå WebSocket Disconnected\"),\r\n    onStompError: (frame) => console.error(\"üö® STOMP Error:\", frame),\r\n  });\r\n\r\n  stompClient.activate();\r\n};\r\n\r\nexport const sendMove = (moveData) => {\r\n  if (!stompClient || !stompClient.connected) {\r\n    console.warn(\"‚ö†Ô∏è Cannot send move, WebSocket is not connected.\");\r\n    return;\r\n  }\r\n\r\n  if (\r\n    !moveData ||\r\n    moveData.fromRow === undefined ||\r\n    moveData.toRow === undefined ||\r\n    !moveData.gameId\r\n  ) {\r\n    console.warn(\"‚ö†Ô∏è Invalid move data:\", moveData);\r\n    return;\r\n  }\r\n\r\n  stompClient.publish({\r\n    destination: \"/app/move\",\r\n    body: JSON.stringify(moveData),\r\n  });\r\n\r\n  console.log(\"üì§ Sent Move:\", moveData);\r\n};\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,UAAU,GAAG,0BAA0B,CAAC,CAAC;AAC/C,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,gBAAgB,GAAIC,mBAAmB,IAAK;EACvD,IAAIF,WAAW,IAAIA,WAAW,CAACG,SAAS,EAAE;IACxCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C;EACF;EAEA,MAAMC,MAAM,GAAG,IAAIT,MAAM,CAACE,UAAU,CAAC;EACrCC,WAAW,GAAG,IAAIF,MAAM,CAAC;IACvBS,gBAAgB,EAAEA,CAAA,KAAMD,MAAM;IAC9BE,cAAc,EAAE,IAAI;IAAE;IACtBC,KAAK,EAAGC,GAAG,IAAKN,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEK,GAAG,CAAC;IACnDC,SAAS,EAAEA,CAAA,KAAM;MACfP,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MAEpCL,WAAW,CAACY,SAAS,CAAC,sBAAsB,EAAGC,OAAO,IAAK;QACzD,IAAI;UACF,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;UAC1Cb,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAES,SAAS,CAAC;;UAEhD;UACA,IACEA,SAAS,IACTA,SAAS,CAACI,KAAK,IACfC,KAAK,CAACC,OAAO,CAACN,SAAS,CAACO,WAAW,CAAC,IACpCP,SAAS,CAACQ,WAAW,IACrBR,SAAS,CAACS,MAAM,EAChB;YACArB,mBAAmB,CAACY,SAAS,CAAC,CAAC,CAAC;UAClC,CAAC,MAAM;YACLV,OAAO,CAACoB,IAAI,CAAC,gCAAgC,EAAEV,SAAS,CAAC;UAC3D;QACF,CAAC,CAAC,OAAOW,KAAK,EAAE;UACdrB,OAAO,CAACqB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACxD;MACF,CAAC,CAAC;IACJ,CAAC;IACDC,YAAY,EAAEA,CAAA,KAAMtB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3DsB,YAAY,EAAGC,KAAK,IAAKxB,OAAO,CAACqB,KAAK,CAAC,iBAAiB,EAAEG,KAAK;EACjE,CAAC,CAAC;EAEF5B,WAAW,CAAC6B,QAAQ,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;EACpC,IAAI,CAAC/B,WAAW,IAAI,CAACA,WAAW,CAACG,SAAS,EAAE;IAC1CC,OAAO,CAACoB,IAAI,CAAC,kDAAkD,CAAC;IAChE;EACF;EAEA,IACE,CAACO,QAAQ,IACTA,QAAQ,CAACC,OAAO,KAAKC,SAAS,IAC9BF,QAAQ,CAACG,KAAK,KAAKD,SAAS,IAC5B,CAACF,QAAQ,CAACI,MAAM,EAChB;IACA/B,OAAO,CAACoB,IAAI,CAAC,uBAAuB,EAAEO,QAAQ,CAAC;IAC/C;EACF;EAEA/B,WAAW,CAACoC,OAAO,CAAC;IAClBC,WAAW,EAAE,WAAW;IACxBpB,IAAI,EAAEF,IAAI,CAACuB,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC;EAEF3B,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE0B,QAAQ,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}