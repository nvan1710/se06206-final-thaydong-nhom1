{"ast":null,"code":"import SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nconst SOCKET_URL = \"http://localhost:8080/ws\";\nlet stompClient = null;\nexport const connectWebSocket = (roomId, onMoveReceived) => {\n  if (stompClient && stompClient.connected) return;\n  const socket = new SockJS(SOCKET_URL);\n  stompClient = new Client({\n    webSocketFactory: () => socket,\n    reconnectDelay: 5000,\n    onConnect: () => {\n      console.log(\"✅ WebSocket Connected to room:\", roomId);\n      stompClient.subscribe(`/topic/chess-updates`, message => {\n        const moveData = JSON.parse(message.body);\n        onMoveReceived(moveData);\n      });\n    }\n  });\n  stompClient.activate();\n};\nexport const sendMove = (roomId, moveData) => {\n  if (!stompClient || !stompClient.connected) return;\n  stompClient.publish({\n    destination: \"/app/move\",\n    body: JSON.stringify({\n      ...moveData,\n      roomId\n    })\n  });\n};","map":{"version":3,"names":["SockJS","Client","SOCKET_URL","stompClient","connectWebSocket","roomId","onMoveReceived","connected","socket","webSocketFactory","reconnectDelay","onConnect","console","log","subscribe","message","moveData","JSON","parse","body","activate","sendMove","publish","destination","stringify"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/websocket.js"],"sourcesContent":["import SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nconst SOCKET_URL = \"http://localhost:8080/ws\";\r\nlet stompClient = null;\r\n\r\nexport const connectWebSocket = (roomId, onMoveReceived) => {\r\n  if (stompClient && stompClient.connected) return;\r\n\r\n  const socket = new SockJS(SOCKET_URL);\r\n  stompClient = new Client({\r\n    webSocketFactory: () => socket,\r\n    reconnectDelay: 5000,\r\n    onConnect: () => {\r\n      console.log(\"✅ WebSocket Connected to room:\", roomId);\r\n\r\n      stompClient.subscribe(`/topic/chess-updates`, (message) => {\r\n        const moveData = JSON.parse(message.body);\r\n        onMoveReceived(moveData);\r\n      });\r\n    },\r\n  });\r\n\r\n  stompClient.activate();\r\n};\r\n\r\nexport const sendMove = (roomId, moveData) => {\r\n  if (!stompClient || !stompClient.connected) return;\r\n  stompClient.publish({\r\n    destination: \"/app/move\",\r\n    body: JSON.stringify({ ...moveData, roomId }),\r\n  });\r\n};\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,UAAU,GAAG,0BAA0B;AAC7C,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,MAAM,EAAEC,cAAc,KAAK;EAC1D,IAAIH,WAAW,IAAIA,WAAW,CAACI,SAAS,EAAE;EAE1C,MAAMC,MAAM,GAAG,IAAIR,MAAM,CAACE,UAAU,CAAC;EACrCC,WAAW,GAAG,IAAIF,MAAM,CAAC;IACvBQ,gBAAgB,EAAEA,CAAA,KAAMD,MAAM;IAC9BE,cAAc,EAAE,IAAI;IACpBC,SAAS,EAAEA,CAAA,KAAM;MACfC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAER,MAAM,CAAC;MAErDF,WAAW,CAACW,SAAS,CAAC,sBAAsB,EAAGC,OAAO,IAAK;QACzD,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;QACzCb,cAAc,CAACU,QAAQ,CAAC;MAC1B,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEFb,WAAW,CAACiB,QAAQ,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAAChB,MAAM,EAAEW,QAAQ,KAAK;EAC5C,IAAI,CAACb,WAAW,IAAI,CAACA,WAAW,CAACI,SAAS,EAAE;EAC5CJ,WAAW,CAACmB,OAAO,CAAC;IAClBC,WAAW,EAAE,WAAW;IACxBJ,IAAI,EAAEF,IAAI,CAACO,SAAS,CAAC;MAAE,GAAGR,QAAQ;MAAEX;IAAO,CAAC;EAC9C,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}