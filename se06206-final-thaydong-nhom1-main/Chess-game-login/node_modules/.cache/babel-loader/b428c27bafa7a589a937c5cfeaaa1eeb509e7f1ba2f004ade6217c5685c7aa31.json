{"ast":null,"code":"import SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nconst SOCKET_URL = \"http://localhost:8080/ws\";\nlet stompClient = null;\nexport const connectWebSocket = (roomId, onMoveReceived) => {\n  if (stompClient && stompClient.connected) {\n    console.log(\"‚ö° WebSocket already connected\");\n    return;\n  }\n  const socket = new SockJS(SOCKET_URL);\n  stompClient = new Client({\n    webSocketFactory: () => socket,\n    reconnectDelay: 5000,\n    debug: msg => console.log(\"üîç STOMP Debug:\", msg),\n    onConnect: () => {\n      console.log(\"‚úÖ WebSocket Connected\");\n\n      // Subscribe v√†o ph√≤ng c·ª• th·ªÉ\n      stompClient.subscribe(`/topic/chess-room/${roomId}`, message => {\n        try {\n          const moveData = JSON.parse(message.body);\n          console.log(\"‚ôüÔ∏è Move Received:\", moveData);\n          onMoveReceived(moveData);\n        } catch (error) {\n          console.error(\"‚ùå Error parsing received move:\", error);\n        }\n      });\n    },\n    onDisconnect: () => console.log(\"‚ùå WebSocket Disconnected\"),\n    onStompError: frame => console.error(\"üö® STOMP Error:\", frame)\n  });\n  stompClient.activate();\n};\nexport const sendMove = (roomId, moveData) => {\n  if (!stompClient || !stompClient.connected) {\n    console.warn(\"‚ö†Ô∏è Cannot send move, WebSocket is not connected.\");\n    return;\n  }\n  stompClient.publish({\n    destination: `/app/move/${roomId}`,\n    body: JSON.stringify(moveData)\n  });\n  console.log(\"üì§ Sent Move:\", moveData);\n};","map":{"version":3,"names":["SockJS","Client","SOCKET_URL","stompClient","connectWebSocket","roomId","onMoveReceived","connected","console","log","socket","webSocketFactory","reconnectDelay","debug","msg","onConnect","subscribe","message","moveData","JSON","parse","body","error","onDisconnect","onStompError","frame","activate","sendMove","warn","publish","destination","stringify"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/websocket.js"],"sourcesContent":["import SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nconst SOCKET_URL = \"http://localhost:8080/ws\";\r\nlet stompClient = null;\r\n\r\nexport const connectWebSocket = (roomId, onMoveReceived) => {\r\n  if (stompClient && stompClient.connected) {\r\n    console.log(\"‚ö° WebSocket already connected\");\r\n    return;\r\n  }\r\n\r\n  const socket = new SockJS(SOCKET_URL);\r\n  stompClient = new Client({\r\n    webSocketFactory: () => socket,\r\n    reconnectDelay: 5000,\r\n    debug: (msg) => console.log(\"üîç STOMP Debug:\", msg),\r\n    onConnect: () => {\r\n      console.log(\"‚úÖ WebSocket Connected\");\r\n\r\n      // Subscribe v√†o ph√≤ng c·ª• th·ªÉ\r\n      stompClient.subscribe(`/topic/chess-room/${roomId}`, (message) => {\r\n        try {\r\n          const moveData = JSON.parse(message.body);\r\n          console.log(\"‚ôüÔ∏è Move Received:\", moveData);\r\n          onMoveReceived(moveData);\r\n        } catch (error) {\r\n          console.error(\"‚ùå Error parsing received move:\", error);\r\n        }\r\n      });\r\n    },\r\n    onDisconnect: () => console.log(\"‚ùå WebSocket Disconnected\"),\r\n    onStompError: (frame) => console.error(\"üö® STOMP Error:\", frame),\r\n  });\r\n\r\n  stompClient.activate();\r\n};\r\n\r\nexport const sendMove = (roomId, moveData) => {\r\n  if (!stompClient || !stompClient.connected) {\r\n    console.warn(\"‚ö†Ô∏è Cannot send move, WebSocket is not connected.\");\r\n    return;\r\n  }\r\n\r\n  stompClient.publish({\r\n    destination: `/app/move/${roomId}`,\r\n    body: JSON.stringify(moveData),\r\n  });\r\n\r\n  console.log(\"üì§ Sent Move:\", moveData);\r\n};\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,UAAU,GAAG,0BAA0B;AAC7C,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,MAAM,EAAEC,cAAc,KAAK;EAC1D,IAAIH,WAAW,IAAIA,WAAW,CAACI,SAAS,EAAE;IACxCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C;EACF;EAEA,MAAMC,MAAM,GAAG,IAAIV,MAAM,CAACE,UAAU,CAAC;EACrCC,WAAW,GAAG,IAAIF,MAAM,CAAC;IACvBU,gBAAgB,EAAEA,CAAA,KAAMD,MAAM;IAC9BE,cAAc,EAAE,IAAI;IACpBC,KAAK,EAAGC,GAAG,IAAKN,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEK,GAAG,CAAC;IACnDC,SAAS,EAAEA,CAAA,KAAM;MACfP,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;;MAEpC;MACAN,WAAW,CAACa,SAAS,CAAC,qBAAqBX,MAAM,EAAE,EAAGY,OAAO,IAAK;QAChE,IAAI;UACF,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;UACzCb,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAES,QAAQ,CAAC;UAC1CZ,cAAc,CAACY,QAAQ,CAAC;QAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;UACdd,OAAO,CAACc,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACxD;MACF,CAAC,CAAC;IACJ,CAAC;IACDC,YAAY,EAAEA,CAAA,KAAMf,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3De,YAAY,EAAGC,KAAK,IAAKjB,OAAO,CAACc,KAAK,CAAC,iBAAiB,EAAEG,KAAK;EACjE,CAAC,CAAC;EAEFtB,WAAW,CAACuB,QAAQ,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACtB,MAAM,EAAEa,QAAQ,KAAK;EAC5C,IAAI,CAACf,WAAW,IAAI,CAACA,WAAW,CAACI,SAAS,EAAE;IAC1CC,OAAO,CAACoB,IAAI,CAAC,kDAAkD,CAAC;IAChE;EACF;EAEAzB,WAAW,CAAC0B,OAAO,CAAC;IAClBC,WAAW,EAAE,aAAazB,MAAM,EAAE;IAClCgB,IAAI,EAAEF,IAAI,CAACY,SAAS,CAACb,QAAQ;EAC/B,CAAC,CAAC;EAEFV,OAAO,CAACC,GAAG,CAAC,eAAe,EAAES,QAAQ,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}