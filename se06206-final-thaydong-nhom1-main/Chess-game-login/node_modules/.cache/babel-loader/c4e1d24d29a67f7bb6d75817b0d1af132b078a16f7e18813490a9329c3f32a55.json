{"ast":null,"code":"import { isValidMove } from \"./moveRules\"; // Import luật di chuyển\n\n// 📍 Tìm vị trí của vua trên bàn cờ\nexport const findKingPosition = (board, isWhite) => {\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      if (board[row][col] === (isWhite ? \"♔\" : \"♚\")) {\n        return {\n          row,\n          col\n        };\n      }\n    }\n  }\n  return null;\n};\n\n// 📍 Kiểm tra xem vua có bị chiếu không\nexport const isKingInCheck = (board, isWhite) => {\n  const kingPos = findKingPosition(board, isWhite);\n  if (!kingPos) return false;\n  const {\n    row: kingRow,\n    col: kingCol\n  } = kingPos;\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      const piece = board[row][col];\n      if (!piece) continue;\n      const isEnemy = \"♙♖♘♗♕♔\".includes(piece) !== isWhite;\n      if (isEnemy && isValidMove(piece, row, col, kingRow, kingCol, board)) {\n        return true; // Vua đang bị chiếu\n      }\n    }\n  }\n  return false;\n};\n\n// 📍 Kiểm tra chiếu hết (Checkmate)\nexport const isCheckmate = (board, isWhite) => {\n  if (!isKingInCheck(board, isWhite)) return false;\n  for (let row = 0; row < 8; row++) {\n    for (let col = 0; col < 8; col++) {\n      const piece = board[row][col];\n      if (!piece) continue;\n      const isFriendly = \"♙♖♘♗♕♔\".includes(piece) === isWhite;\n      if (!isFriendly) continue;\n      for (let newRow = 0; newRow < 8; newRow++) {\n        for (let newCol = 0; newCol < 8; newCol++) {\n          if (isValidMove(piece, row, col, newRow, newCol, board)) {\n            const newBoard = board.map(innerRow => [...innerRow]);\n            newBoard[newRow][newCol] = piece;\n            newBoard[row][col] = \"\";\n            if (!isKingInCheck(newBoard, isWhite)) {\n              return false; // Còn nước đi cứu vua\n            }\n          }\n        }\n      }\n    }\n  }\n  return true; // Không có nước đi hợp lệ => chiếu hết\n};","map":{"version":3,"names":["isValidMove","findKingPosition","board","isWhite","row","col","isKingInCheck","kingPos","kingRow","kingCol","piece","isEnemy","includes","isCheckmate","isFriendly","newRow","newCol","newBoard","map","innerRow"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/utils/checkmate.js"],"sourcesContent":["import { isValidMove } from \"./moveRules\"; // Import luật di chuyển\r\n\r\n// 📍 Tìm vị trí của vua trên bàn cờ\r\nexport const findKingPosition = (board, isWhite) => {\r\n  for (let row = 0; row < 8; row++) {\r\n    for (let col = 0; col < 8; col++) {\r\n      if (board[row][col] === (isWhite ? \"♔\" : \"♚\")) {\r\n        return { row, col };\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n// 📍 Kiểm tra xem vua có bị chiếu không\r\nexport const isKingInCheck = (board, isWhite) => {\r\n  const kingPos = findKingPosition(board, isWhite);\r\n  if (!kingPos) return false;\r\n\r\n  const { row: kingRow, col: kingCol } = kingPos;\r\n\r\n  for (let row = 0; row < 8; row++) {\r\n    for (let col = 0; col < 8; col++) {\r\n      const piece = board[row][col];\r\n      if (!piece) continue;\r\n\r\n      const isEnemy = \"♙♖♘♗♕♔\".includes(piece) !== isWhite;\r\n      if (isEnemy && isValidMove(piece, row, col, kingRow, kingCol, board)) {\r\n        return true; // Vua đang bị chiếu\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n// 📍 Kiểm tra chiếu hết (Checkmate)\r\nexport const isCheckmate = (board, isWhite) => {\r\n  if (!isKingInCheck(board, isWhite)) return false;\r\n\r\n  for (let row = 0; row < 8; row++) {\r\n    for (let col = 0; col < 8; col++) {\r\n      const piece = board[row][col];\r\n      if (!piece) continue;\r\n\r\n      const isFriendly = \"♙♖♘♗♕♔\".includes(piece) === isWhite;\r\n      if (!isFriendly) continue;\r\n\r\n      for (let newRow = 0; newRow < 8; newRow++) {\r\n        for (let newCol = 0; newCol < 8; newCol++) {\r\n          if (isValidMove(piece, row, col, newRow, newCol, board)) {\r\n            const newBoard = board.map(innerRow => [...innerRow]);\r\n            newBoard[newRow][newCol] = piece;\r\n            newBoard[row][col] = \"\";\r\n\r\n            if (!isKingInCheck(newBoard, isWhite)) {\r\n              return false; // Còn nước đi cứu vua\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return true; // Không có nước đi hợp lệ => chiếu hết\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}