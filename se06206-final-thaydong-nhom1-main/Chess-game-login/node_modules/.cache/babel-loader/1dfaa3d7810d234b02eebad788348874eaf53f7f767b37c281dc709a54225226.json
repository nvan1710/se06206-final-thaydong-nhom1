{"ast":null,"code":"var _jsxFileName = \"D:\\\\se06206-final-thaydong-nhom1-main\\\\se06206-final-thaydong-nhom1-main\\\\Chess-game-login\\\\src\\\\components\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { getValidMoves } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\";\nimport pieceImages from \"../assets/pieceImages\";\nimport { connectWebSocket, sendMove } from \"../websocket\"; // Import WebSocket\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  PIECE: \"piece\"\n};\nconst ChessGame = () => {\n  _s();\n  const [roomId, setRoomId] = useState(\"\");\n  const [connected, setConnected] = useState(false);\n  const [playerColor, setPlayerColor] = useState(null);\n  const [ws, setWs] = useState(null);\n  const joinRoom = () => {\n    const newWs = new WebSocket(`ws://localhost:8080/chess/${roomId}`);\n    newWs.onopen = () => {\n      console.log(\"Connected to room:\", roomId);\n      setConnected(true);\n      setWs(newWs);\n    };\n    newWs.onmessage = message => {\n      if (message.data.startsWith(\"color:\")) {\n        setPlayerColor(message.data.split(\":\")[1]);\n      } else if (message.data === \"room_full\") {\n        alert(\"Phòng đã đầy, vui lòng nhập phòng khác!\");\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center min-h-screen justify-center bg-gray-200\",\n    children: !connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"\\uD83D\\uDD11 Enter Room ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: roomId,\n        onChange: e => setRoomId(e.target.value),\n        className: \"border p-2 rounded w-full mb-4\",\n        placeholder: \"Enter Room ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 w-full\",\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Chessboard, {\n      roomId: roomId,\n      playerColor: playerColor,\n      ws: ws\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessGame, \"dxUv5m9zj8bJ2bDvcXaNfxHjM8A=\");\n_c = ChessGame;\nconst Square = ({\n  piece,\n  row,\n  col,\n  movePiece,\n  isKingSquare,\n  selectedPiece,\n  setSelectedPiece,\n  currentTurn,\n  board,\n  validMoves\n}) => {\n  _s2();\n  const isDark = (row + col) % 2 === 1;\n  const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n  const isValidMoveSquare = validMoves.some(move => move.row === row && move.col === col);\n  const isCaptureMove = isValidMoveSquare && board[row][col];\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: {\n      row,\n      col,\n      piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: item => movePiece(item.row, item.col, row, col)\n  }));\n  const handleClick = () => {\n    if (selectedPiece) {\n      if (isValidMoveSquare) {\n        movePiece(selectedPiece.row, selectedPiece.col, row, col);\n      }\n      setSelectedPiece(null);\n    } else if (piece) {\n      const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n      if (isWhite === currentTurn) {\n        setSelectedPiece({\n          row,\n          col,\n          piece\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: `w-16 h-16 flex justify-center items-center \n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}\n        ${isKingSquare ? \"bg-red-500 animate-pulse\" : \"\"}\n        ${isSelected ? \"border-4 border-yellow-500\" : \"\"}\n        ${isValidMoveSquare ? \"border-4 border-green-500\" : \"\"}\n        ${isCaptureMove ? \"border-4 border-red-500\" : \"\"}\n      `,\n    onClick: handleClick,\n    children: piece && pieceImages[piece] && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: drag,\n      src: pieceImages[piece],\n      alt: piece,\n      className: `w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-pointer\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s2(Square, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c2 = Square;\nconst Chessboard = ({\n  isBlack\n}) => {\n  _s3();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]); // 🆕 Lưu lịch sử nước đi\n  const [currentTurn, setCurrentTurn] = useState(true);\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n  const [gameMessage, setGameMessage] = useState(\"🎭 New Game Started! White's Turn\");\n  const [ws, setWs] = useState(null);\n  const navigate = useNavigate(); // Sử dụng navigate để điều hướng\n  const [showModal, setShowModal] = useState(false); // State để hiển thị modal\n  const resetGame = () => {\n    setBoard(initialBoardSetup);\n    setMoveHistory([]); // 🆕 Reset lịch sử nước đi\n    setCurrentTurn(true);\n    setIsCheck(false);\n    setIsCheckMate(false);\n    setCheckedKing(null);\n    setSelectedPiece(null);\n    setValidMoves([]);\n    setGameMessage(\"🎭 New Game Started! White's Turn\");\n  };\n  const handleLogout = () => {\n    if (ws) {\n      ws.close(); // Đóng kết nối WebSocket nếu tồn tại\n      setWs(null); // Reset WebSocket state\n    }\n    // Điều hướng về Dashboard\n    navigate(\"/Dashboard\");\n  };\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n\n      // Lấy danh sách nước đi hợp lệ\n      const validMoves = getValidMoves(piece, fromRow, fromCol, prevBoard);\n      if (!validMoves.some(move => move.row === toRow && move.col === toCol)) {\n        return prevBoard; // Không cho phép đi nước không hợp lệ\n      }\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n\n      // 🆕 Kiểm tra trạng thái vua\n      const nextTurn = !currentTurn;\n      const kingPos = findKingPosition(newBoard, nextTurn);\n      const kingCheck = isKingInCheck(newBoard, nextTurn);\n      const checkmate = isCheckmate(newBoard, nextTurn);\n      console.log(\"King Position:\", kingPos);\n      console.log(\"Is Check:\", kingCheck);\n      setCurrentTurn(nextTurn);\n      setIsCheck(kingCheck);\n      setCheckedKing(kingCheck ? kingPos : null); // Nếu vua bị chiếu thì cập nhật vị trí\n      setIsCheckMate(checkmate);\n      setSelectedPiece(null);\n      setValidMoves([]);\n      if (checkmate) {\n        setGameMessage(`🏆 Checkmate! ${currentTurn ? \"Black Wins!\" : \"White Wins!\"}`);\n      } else if (kingCheck) {\n        setGameMessage(`🔥 ${nextTurn ? \"White\" : \"Black\"} King is in check! 🔥`);\n      } else {\n        setGameMessage(`🎭 Current Turn: ${nextTurn ? \"White\" : \"Black\"}`);\n      }\n\n      // 🆕 Gửi nước đi qua WebSocket\n      sendMove({\n        fromRow,\n        fromCol,\n        toRow,\n        toCol,\n        piece\n      });\n      return newBoard;\n    });\n  };\n  useEffect(() => {\n    connectWebSocket(moveData => {\n      setBoard(prevBoard => {\n        if (!prevBoard || !Array.isArray(prevBoard)) return prevBoard;\n        const newBoard = prevBoard.map(row => row ? [...row] : []);\n        if (!newBoard[moveData.toRow]) newBoard[moveData.toRow] = [];\n        newBoard[moveData.toRow][moveData.toCol] = moveData.piece;\n        newBoard[moveData.fromRow][moveData.fromCol] = \"\";\n        return newBoard;\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col justify-center items-center bg-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"\\u265F\\uFE0F Chess Game \\u265F\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowModal(true),\n        className: \"bg-red-500 text-white p-2 rounded\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-lg text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-red-600\",\n            children: \"Exit Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 mt-2\",\n            children: \" the room you will lose!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center gap-4 mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleLogout,\n              className: \"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\",\n              children: \"Log out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowModal(false),\n              className: \"bg-gray-300 text-black px-4 py-2 rounded hover:bg-gray-400\",\n              children: \"\\u1EDE l\\u1EA1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), isCheck && !isCheckMate && checkedKing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed top-5 right-5 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg font-bold animate-pulse\",\n        children: [\"\\uD83D\\uDD25 Warning! \", currentTurn ? \"Black\" : \"White\", \" King is in Check! \\uD83D\\uDD25\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), gameMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2 bg-yellow-300 text-black px-4 py-2 rounded text-center font-bold shadow-md\",\n        children: gameMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-8 border-4 border-black shadow-lg\",\n          children: (isBlack ? [...board].reverse() : board).map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n            piece: piece,\n            row: isBlack ? 7 - rowIndex : rowIndex,\n            col: colIndex,\n            movePiece: movePiece,\n            isKingSquare: (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.row) === rowIndex && (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.col) === colIndex,\n            selectedPiece: selectedPiece,\n            setSelectedPiece: setSelectedPiece,\n            currentTurn: currentTurn,\n            board: board,\n            validMoves: selectedPiece ? getValidMoves(selectedPiece.piece, selectedPiece.row, selectedPiece.col, board) : []\n          }, `${rowIndex}-${colIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 19\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-64 bg-white p-4 rounded-lg shadow-md h-fit\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold mb-2\",\n            children: \"\\uD83D\\uDCDC Move History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-decimal pl-5\",\n            children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: move\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 49\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s3(Chessboard, \"5+Fa5CcrAE1hX7As28vpgNeLW30=\", false, function () {\n  return [useNavigate];\n});\n_c3 = Chessboard;\nexport default Chessboard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ChessGame\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Chessboard\");","map":{"version":3,"names":["React","useState","useEffect","useDrag","useDrop","DndProvider","HTML5Backend","getValidMoves","initialBoardSetup","isKingInCheck","isCheckmate","findKingPosition","pieceImages","connectWebSocket","sendMove","useNavigate","jsxDEV","_jsxDEV","ItemTypes","PIECE","ChessGame","_s","roomId","setRoomId","connected","setConnected","playerColor","setPlayerColor","ws","setWs","joinRoom","newWs","WebSocket","onopen","console","log","onmessage","message","data","startsWith","split","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","Chessboard","_c","Square","piece","row","col","movePiece","isKingSquare","selectedPiece","setSelectedPiece","currentTurn","board","validMoves","_s2","isDark","isSelected","isValidMoveSquare","some","move","isCaptureMove","isDragging","drag","item","collect","monitor","drop","accept","handleClick","isWhite","includes","ref","src","alt","_c2","isBlack","_s3","setBoard","moveHistory","setMoveHistory","setCurrentTurn","isCheck","setIsCheck","isCheckMate","setIsCheckMate","checkedKing","setCheckedKing","setValidMoves","gameMessage","setGameMessage","navigate","showModal","setShowModal","resetGame","handleLogout","close","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","nextTurn","kingPos","kingCheck","checkmate","moveData","Array","isArray","backend","reverse","rowIndex","colIndex","index","_c3","$RefreshReg$"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { getValidMoves } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\";\nimport pieceImages from \"../assets/pieceImages\";\nimport { connectWebSocket, sendMove } from \"../websocket\"; // Import WebSocket\nimport { useNavigate } from \"react-router-dom\";\nconst ItemTypes = { PIECE: \"piece\" };\nconst ChessGame = () => {\n  const [roomId, setRoomId] = useState(\"\");\n  const [connected, setConnected] = useState(false);\n  const [playerColor, setPlayerColor] = useState(null);\n  const [ws, setWs] = useState(null);\n  \n  const joinRoom = () => {\n    const newWs = new WebSocket(`ws://localhost:8080/chess/${roomId}`);\n\n    newWs.onopen = () => {\n      console.log(\"Connected to room:\", roomId);\n      setConnected(true);\n      setWs(newWs);\n    };\n\n    newWs.onmessage = (message) => {\n      if (message.data.startsWith(\"color:\")) {\n        setPlayerColor(message.data.split(\":\")[1]);\n      } else if (message.data === \"room_full\") {\n        alert(\"Phòng đã đầy, vui lòng nhập phòng khác!\");\n      }\n    };\n  };\n    \n\n  return (\n    <div className=\"flex flex-col items-center min-h-screen justify-center bg-gray-200\">\n      {!connected ? (\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n          <h2 className=\"text-xl font-bold mb-4\">🔑 Enter Room ID</h2>\n          <input\n            type=\"text\"\n            value={roomId}\n            onChange={(e) => setRoomId(e.target.value)}\n            className=\"border p-2 rounded w-full mb-4\"\n            placeholder=\"Enter Room ID\"\n          />\n          <button\n            onClick={joinRoom}\n            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 w-full\"\n          >\n            Join Room\n          </button>\n        </div>\n      ) : (\n        <Chessboard roomId={roomId} playerColor={playerColor} ws={ws} />\n      )}\n    </div>\n  );\n};\n\n\nconst Square = ({ piece, row, col, movePiece, isKingSquare, selectedPiece, setSelectedPiece, currentTurn, board, validMoves }) => {\n  const isDark = (row + col) % 2 === 1;\n  const isSelected = selectedPiece && selectedPiece.row === row && selectedPiece.col === col;\n  const isValidMoveSquare = validMoves.some((move) => move.row === row && move.col === col);\n  const isCaptureMove = isValidMoveSquare && board[row][col];\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: { row, col, piece },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: (item) => movePiece(item.row, item.col, row, col),\n  }));\n\n  const handleClick = () => {\n    if (selectedPiece) {\n      if (isValidMoveSquare) {\n        movePiece(selectedPiece.row, selectedPiece.col, row, col);\n      }\n      setSelectedPiece(null);\n    } else if (piece) {\n      const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n      if (isWhite === currentTurn) {\n        setSelectedPiece({ row, col, piece });\n      }\n    }\n  };\n\n  return (\n    <div\n      ref={drop}\n      className={`w-16 h-16 flex justify-center items-center \n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}\n        ${isKingSquare ? \"bg-red-500 animate-pulse\" : \"\"}\n        ${isSelected ? \"border-4 border-yellow-500\" : \"\"}\n        ${isValidMoveSquare ? \"border-4 border-green-500\" : \"\"}\n        ${isCaptureMove ? \"border-4 border-red-500\" : \"\"}\n      `}\n      onClick={handleClick}\n    >\n      {piece && pieceImages[piece] && (\n        <img\n          ref={drag}\n          src={pieceImages[piece]}\n          alt={piece}\n          className={`w-12 h-12 object-contain ${isDragging ? \"opacity-50\" : \"cursor-pointer\"}`}\n        />\n      )}\n    </div>\n  );\n};\n\nconst Chessboard = ({ isBlack }) => {\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]); // 🆕 Lưu lịch sử nước đi\n  const [currentTurn, setCurrentTurn] = useState(true);\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n  const [gameMessage, setGameMessage] = useState(\"🎭 New Game Started! White's Turn\");\n  const [ws, setWs] = useState(null);\n  const navigate = useNavigate(); // Sử dụng navigate để điều hướng\n  const [showModal, setShowModal] = useState(false); // State để hiển thị modal\n  const resetGame = () => {\n    setBoard(initialBoardSetup);\n    setMoveHistory([]); // 🆕 Reset lịch sử nước đi\n    setCurrentTurn(true);\n    setIsCheck(false);\n    setIsCheckMate(false);\n    setCheckedKing(null);\n    setSelectedPiece(null);\n    setValidMoves([]);\n    setGameMessage(\"🎭 New Game Started! White's Turn\");\n  };\n  const handleLogout = () => {\n    if (ws) {\n      ws.close(); // Đóng kết nối WebSocket nếu tồn tại\n      setWs(null); // Reset WebSocket state\n    }\n    // Điều hướng về Dashboard\n     navigate(\"/Dashboard\");\n  };\n  \n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard((prevBoard) => {\n      const newBoard = prevBoard.map((row) => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n  \n      // Lấy danh sách nước đi hợp lệ\n      const validMoves = getValidMoves(piece, fromRow, fromCol, prevBoard);\n      if (!validMoves.some((move) => move.row === toRow && move.col === toCol)) {\n        return prevBoard; // Không cho phép đi nước không hợp lệ\n      }\n  \n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n  \n      // 🆕 Kiểm tra trạng thái vua\n      const nextTurn = !currentTurn;\n      const kingPos = findKingPosition(newBoard, nextTurn);\n      const kingCheck = isKingInCheck(newBoard, nextTurn);\n      const checkmate = isCheckmate(newBoard, nextTurn);\n  \n      console.log(\"King Position:\", kingPos);\n      console.log(\"Is Check:\", kingCheck);\n  \n      setCurrentTurn(nextTurn);\n      setIsCheck(kingCheck);\n      setCheckedKing(kingCheck ? kingPos : null); // Nếu vua bị chiếu thì cập nhật vị trí\n      setIsCheckMate(checkmate);\n      setSelectedPiece(null);\n      setValidMoves([]);\n  \n      if (checkmate) {\n        setGameMessage(`🏆 Checkmate! ${currentTurn ? \"Black Wins!\" : \"White Wins!\"}`);\n      } else if (kingCheck) {\n        setGameMessage(`🔥 ${nextTurn ? \"White\" : \"Black\"} King is in check! 🔥`);\n      } else {\n        setGameMessage(`🎭 Current Turn: ${nextTurn ? \"White\" : \"Black\"}`);\n      }\n  \n      // 🆕 Gửi nước đi qua WebSocket\n      sendMove({ fromRow, fromCol, toRow, toCol, piece });\n  \n      return newBoard;\n    });\n  };\n  \n\n  useEffect(() => {\n    connectWebSocket((moveData) => {\n      setBoard((prevBoard) => {\n        if (!prevBoard || !Array.isArray(prevBoard)) return prevBoard;\n        \n        const newBoard = prevBoard.map(row => row ? [...row] : []);\n        if (!newBoard[moveData.toRow]) newBoard[moveData.toRow] = [];\n        \n        newBoard[moveData.toRow][moveData.toCol] = moveData.piece;\n        newBoard[moveData.fromRow][moveData.fromCol] = \"\";\n        return newBoard;\n      });\n    });\n  }, []);\n  \n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-gray-200\">\n        <h1 className=\"text-2xl font-bold mb-4\">♟️ Chess Game ♟️</h1>\n        \n        <button\n            onClick={() => setShowModal(true)}\n            className=\"bg-red-500 text-white p-2 rounded\"\n          >\n            Logout\n        </button>\n       {/* Modal xác nhận thoát */}\n      {showModal && (\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg text-center\">\n            <h2 className=\"text-xl font-bold text-red-600\">Exit Room</h2>\n            <p className=\"text-gray-700 mt-2\"> the room you will lose!</p>\n\n            <div className=\"flex justify-center gap-4 mt-4\">\n              <button\n                onClick={handleLogout}\n                className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\n              >\n                Log out\n              </button>\n              <button\n                onClick={() => setShowModal(false)}\n                className=\"bg-gray-300 text-black px-4 py-2 rounded hover:bg-gray-400\"\n              >\n                Ở lại\n              </button>\n            </div>\n          </div>\n        </div>\n         )}\n\n        {isCheck && !isCheckMate && checkedKing && (\n          <div className=\"fixed top-5 right-5 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg font-bold animate-pulse\">\n            🔥 Warning! {currentTurn ? \"Black\" : \"White\"} King is in Check! 🔥\n          </div>\n        )}\n\n\n\n        {gameMessage && (\n          <div className=\"mb-2 bg-yellow-300 text-black px-4 py-2 rounded text-center font-bold shadow-md\">\n            {gameMessage}\n          </div>\n        )}\n\n        <div className=\"flex gap-8\">\n          <div className=\"grid grid-cols-8 border-4 border-black shadow-lg\">\n              {(isBlack ? [...board].reverse() : board).map((row, rowIndex) =>\n                row.map((piece, colIndex) => (\n                  <Square\n                    key={`${rowIndex}-${colIndex}`}\n                    piece={piece}\n                    row={isBlack ? 7 - rowIndex : rowIndex}\n                    col={colIndex}\n                    movePiece={movePiece}\n                    isKingSquare={checkedKing?.row === rowIndex && checkedKing?.col === colIndex}\n                    selectedPiece={selectedPiece}\n                    setSelectedPiece={setSelectedPiece}\n                    currentTurn={currentTurn}\n                    board={board}\n                    validMoves={selectedPiece ? getValidMoves(selectedPiece.piece, selectedPiece.row, selectedPiece.col, board) : []}\n                  />\n                ))\n              )}\n            </div>\n\n          {/* 🆕 Lịch sử nước đi */}\n          <div className=\"w-64 bg-white p-4 rounded-lg shadow-md h-fit\">\n            <h2 className=\"text-lg font-semibold mb-2\">📜 Move History</h2>\n            <ul className=\"list-decimal pl-5\">\n              {moveHistory.map((move, index) => <li key={index}>{move}</li>)}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}