{"ast":null,"code":"'use strict';\n\nvar EventEmitter = require('events').EventEmitter,\n  inherits = require('inherits'),\n  urlUtils = require('./utils/url'),\n  XDR = require('./transport/sender/xdr'),\n  XHRCors = require('./transport/sender/xhr-cors'),\n  XHRLocal = require('./transport/sender/xhr-local'),\n  XHRFake = require('./transport/sender/xhr-fake'),\n  InfoIframe = require('./info-iframe'),\n  InfoAjax = require('./info-ajax');\nvar debug = function () {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:info-receiver');\n}\nfunction InfoReceiver(baseUrl, urlInfo) {\n  debug(baseUrl);\n  var self = this;\n  EventEmitter.call(this);\n  setTimeout(function () {\n    self.doXhr(baseUrl, urlInfo);\n  }, 0);\n}\ninherits(InfoReceiver, EventEmitter);\n\n// TODO this is currently ignoring the list of available transports and the whitelist\n\nInfoReceiver._getReceiver = function (baseUrl, url, urlInfo) {\n  // determine method of CORS support (if needed)\n  if (urlInfo.sameOrigin) {\n    return new InfoAjax(url, XHRLocal);\n  }\n  if (XHRCors.enabled) {\n    return new InfoAjax(url, XHRCors);\n  }\n  if (XDR.enabled && urlInfo.sameScheme) {\n    return new InfoAjax(url, XDR);\n  }\n  if (InfoIframe.enabled()) {\n    return new InfoIframe(baseUrl, url);\n  }\n  return new InfoAjax(url, XHRFake);\n};\nInfoReceiver.prototype.doXhr = function (baseUrl, urlInfo) {\n  var self = this,\n    url = urlUtils.addPath(baseUrl, '/info');\n  debug('doXhr', url);\n  this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);\n  this.timeoutRef = setTimeout(function () {\n    debug('timeout');\n    self._cleanup(false);\n    self.emit('finish');\n  }, InfoReceiver.timeout);\n  this.xo.once('finish', function (info, rtt) {\n    debug('finish', info, rtt);\n    self._cleanup(true);\n    self.emit('finish', info, rtt);\n  });\n};\nInfoReceiver.prototype._cleanup = function (wasClean) {\n  debug('_cleanup');\n  clearTimeout(this.timeoutRef);\n  this.timeoutRef = null;\n  if (!wasClean && this.xo) {\n    this.xo.close();\n  }\n  this.xo = null;\n};\nInfoReceiver.prototype.close = function () {\n  debug('close');\n  this.removeAllListeners();\n  this._cleanup(false);\n};\nInfoReceiver.timeout = 8000;\nmodule.exports = InfoReceiver;","map":{"version":3,"names":["EventEmitter","require","inherits","urlUtils","XDR","XHRCors","XHRLocal","XHRFake","InfoIframe","InfoAjax","debug","process","env","NODE_ENV","InfoReceiver","baseUrl","urlInfo","self","call","setTimeout","doXhr","_getReceiver","url","sameOrigin","enabled","sameScheme","prototype","addPath","xo","timeoutRef","_cleanup","emit","timeout","once","info","rtt","wasClean","clearTimeout","close","removeAllListeners","module","exports"],"sources":["C:/Users/admin/se06206-final-thaydong-nhom1/se06206-final-thaydong-nhom1-main/Chess-game-login/node_modules/sockjs-client/lib/info-receiver.js"],"sourcesContent":["'use strict';\r\n\r\nvar EventEmitter = require('events').EventEmitter\r\n  , inherits = require('inherits')\r\n  , urlUtils = require('./utils/url')\r\n  , XDR = require('./transport/sender/xdr')\r\n  , XHRCors = require('./transport/sender/xhr-cors')\r\n  , XHRLocal = require('./transport/sender/xhr-local')\r\n  , XHRFake = require('./transport/sender/xhr-fake')\r\n  , InfoIframe = require('./info-iframe')\r\n  , InfoAjax = require('./info-ajax')\r\n  ;\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:info-receiver');\r\n}\r\n\r\nfunction InfoReceiver(baseUrl, urlInfo) {\r\n  debug(baseUrl);\r\n  var self = this;\r\n  EventEmitter.call(this);\r\n\r\n  setTimeout(function() {\r\n    self.doXhr(baseUrl, urlInfo);\r\n  }, 0);\r\n}\r\n\r\ninherits(InfoReceiver, EventEmitter);\r\n\r\n// TODO this is currently ignoring the list of available transports and the whitelist\r\n\r\nInfoReceiver._getReceiver = function(baseUrl, url, urlInfo) {\r\n  // determine method of CORS support (if needed)\r\n  if (urlInfo.sameOrigin) {\r\n    return new InfoAjax(url, XHRLocal);\r\n  }\r\n  if (XHRCors.enabled) {\r\n    return new InfoAjax(url, XHRCors);\r\n  }\r\n  if (XDR.enabled && urlInfo.sameScheme) {\r\n    return new InfoAjax(url, XDR);\r\n  }\r\n  if (InfoIframe.enabled()) {\r\n    return new InfoIframe(baseUrl, url);\r\n  }\r\n  return new InfoAjax(url, XHRFake);\r\n};\r\n\r\nInfoReceiver.prototype.doXhr = function(baseUrl, urlInfo) {\r\n  var self = this\r\n    , url = urlUtils.addPath(baseUrl, '/info')\r\n    ;\r\n  debug('doXhr', url);\r\n\r\n  this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);\r\n\r\n  this.timeoutRef = setTimeout(function() {\r\n    debug('timeout');\r\n    self._cleanup(false);\r\n    self.emit('finish');\r\n  }, InfoReceiver.timeout);\r\n\r\n  this.xo.once('finish', function(info, rtt) {\r\n    debug('finish', info, rtt);\r\n    self._cleanup(true);\r\n    self.emit('finish', info, rtt);\r\n  });\r\n};\r\n\r\nInfoReceiver.prototype._cleanup = function(wasClean) {\r\n  debug('_cleanup');\r\n  clearTimeout(this.timeoutRef);\r\n  this.timeoutRef = null;\r\n  if (!wasClean && this.xo) {\r\n    this.xo.close();\r\n  }\r\n  this.xo = null;\r\n};\r\n\r\nInfoReceiver.prototype.close = function() {\r\n  debug('close');\r\n  this.removeAllListeners();\r\n  this._cleanup(false);\r\n};\r\n\r\nInfoReceiver.timeout = 8000;\r\n\r\nmodule.exports = InfoReceiver;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}