{"ast":null,"code":"import SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nconst SOCKET_URL = \"http://localhost:8080/ws\";\nconst stompClient = new Client({\n  webSocketFactory: () => new SockJS(SOCKET_URL),\n  reconnectDelay: 5000,\n  debug: msg => console.log(\"[STOMP] \" + msg)\n});\nstompClient.onConnect = () => {\n  console.log(\"WebSocket connected\");\n\n  // Subscribe để nhận nước đi mới\n  stompClient.subscribe(\"/topic/chess-updates\", message => {\n    console.log(\"Received update: \", JSON.parse(message.body));\n  });\n};\n\n// Kích hoạt kết nối WebSocket\nexport const connectWebSocket = () => {\n  stompClient.activate();\n};\n\n// Gửi nước đi đến backend\nexport const sendMove = move => {\n  if (stompClient.connected) {\n    stompClient.publish({\n      destination: \"/app/move\",\n      body: JSON.stringify(move)\n    });\n  } else {\n    console.error(\"WebSocket is not connected.\");\n  }\n};","map":{"version":3,"names":["SockJS","Client","SOCKET_URL","stompClient","webSocketFactory","reconnectDelay","debug","msg","console","log","onConnect","subscribe","message","JSON","parse","body","connectWebSocket","activate","sendMove","move","connected","publish","destination","stringify","error"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/websocket.js"],"sourcesContent":["import SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nconst SOCKET_URL = \"http://localhost:8080/ws\";\r\n\r\nconst stompClient = new Client({\r\n  webSocketFactory: () => new SockJS(SOCKET_URL),\r\n  reconnectDelay: 5000,\r\n  debug: (msg) => console.log(\"[STOMP] \" + msg),\r\n});\r\n\r\nstompClient.onConnect = () => {\r\n  console.log(\"WebSocket connected\");\r\n\r\n  // Subscribe để nhận nước đi mới\r\n  stompClient.subscribe(\"/topic/chess-updates\", (message) => {\r\n    console.log(\"Received update: \", JSON.parse(message.body));\r\n  });\r\n};\r\n\r\n// Kích hoạt kết nối WebSocket\r\nexport const connectWebSocket = () => {\r\n  stompClient.activate();\r\n};\r\n\r\n// Gửi nước đi đến backend\r\nexport const sendMove = (move) => {\r\n  if (stompClient.connected) {\r\n    stompClient.publish({\r\n      destination: \"/app/move\",\r\n      body: JSON.stringify(move),\r\n    });\r\n  } else {\r\n    console.error(\"WebSocket is not connected.\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,UAAU,GAAG,0BAA0B;AAE7C,MAAMC,WAAW,GAAG,IAAIF,MAAM,CAAC;EAC7BG,gBAAgB,EAAEA,CAAA,KAAM,IAAIJ,MAAM,CAACE,UAAU,CAAC;EAC9CG,cAAc,EAAE,IAAI;EACpBC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGF,GAAG;AAC9C,CAAC,CAAC;AAEFJ,WAAW,CAACO,SAAS,GAAG,MAAM;EAC5BF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;;EAElC;EACAN,WAAW,CAACQ,SAAS,CAAC,sBAAsB,EAAGC,OAAO,IAAK;IACzDJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEI,IAAI,CAACC,KAAK,CAACF,OAAO,CAACG,IAAI,CAAC,CAAC;EAC5D,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EACpCb,WAAW,CAACc,QAAQ,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EAChC,IAAIhB,WAAW,CAACiB,SAAS,EAAE;IACzBjB,WAAW,CAACkB,OAAO,CAAC;MAClBC,WAAW,EAAE,WAAW;MACxBP,IAAI,EAAEF,IAAI,CAACU,SAAS,CAACJ,IAAI;IAC3B,CAAC,CAAC;EACJ,CAAC,MAAM;IACLX,OAAO,CAACgB,KAAK,CAAC,6BAA6B,CAAC;EAC9C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}