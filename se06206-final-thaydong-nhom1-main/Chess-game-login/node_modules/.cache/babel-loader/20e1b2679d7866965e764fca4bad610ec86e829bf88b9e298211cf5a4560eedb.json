{"ast":null,"code":"import SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nconst SOCKET_URL = \"http://localhost:8080/ws\"; // URL backend WebSocket\nlet stompClient = null;\nexport const connectWebSocket = onMoveReceived => {\n  if (stompClient && stompClient.connected) {\n    console.log(\"⚡ WebSocket already connected\");\n    return;\n  }\n  const socket = new SockJS(SOCKET_URL);\n  stompClient = new Client({\n    webSocketFactory: () => socket,\n    reconnectDelay: 5000,\n    debug: msg => console.log(\"🔍 STOMP Debug:\", msg),\n    onConnect: () => {\n      console.log(\"✅ WebSocket Connected\");\n      const subscription = stompClient.subscribe(\"/topic/chess-updates\", message => {\n        try {\n          const moveData = JSON.parse(message.body);\n          console.log(\"♟️ Move Received:\", moveData);\n          if (moveData && moveData.move && moveData.move.fromRow !== undefined) {\n            onMoveReceived(moveData);\n          } else {\n            console.warn(\"⚠️ Invalid move data received:\", moveData);\n          }\n        } catch (error) {\n          console.error(\"❌ Error parsing received move:\", error);\n        }\n      });\n      console.log(\"📌 Subscription ID:\", subscription.id);\n    },\n    onDisconnect: () => console.log(\"❌ WebSocket Disconnected\"),\n    onStompError: frame => console.error(\"🚨 STOMP Error:\", frame)\n  });\n  stompClient.activate();\n};","map":{"version":3,"names":["SockJS","Client","SOCKET_URL","stompClient","connectWebSocket","onMoveReceived","connected","console","log","socket","webSocketFactory","reconnectDelay","debug","msg","onConnect","subscription","subscribe","message","moveData","JSON","parse","body","move","fromRow","undefined","warn","error","id","onDisconnect","onStompError","frame","activate"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/websocket.js"],"sourcesContent":["import SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nconst SOCKET_URL = \"http://localhost:8080/ws\"; // URL backend WebSocket\r\nlet stompClient = null;\r\n\r\nexport const connectWebSocket = (onMoveReceived) => {\r\n  if (stompClient && stompClient.connected) {\r\n    console.log(\"⚡ WebSocket already connected\");\r\n    return;\r\n  }\r\n\r\n  const socket = new SockJS(SOCKET_URL);\r\n  stompClient = new Client({\r\n    webSocketFactory: () => socket,\r\n    reconnectDelay: 5000, \r\n    debug: (msg) => console.log(\"🔍 STOMP Debug:\", msg),\r\n    onConnect: () => {\r\n      console.log(\"✅ WebSocket Connected\");\r\n\r\n      const subscription = stompClient.subscribe(\"/topic/chess-updates\", (message) => {\r\n        try {\r\n          const moveData = JSON.parse(message.body);\r\n          console.log(\"♟️ Move Received:\", moveData);\r\n\r\n          if (moveData && moveData.move && moveData.move.fromRow !== undefined) {\r\n            onMoveReceived(moveData);\r\n          } else {\r\n            console.warn(\"⚠️ Invalid move data received:\", moveData);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"❌ Error parsing received move:\", error);\r\n        }\r\n      });\r\n\r\n      console.log(\"📌 Subscription ID:\", subscription.id);\r\n    },\r\n    onDisconnect: () => console.log(\"❌ WebSocket Disconnected\"),\r\n    onStompError: (frame) => console.error(\"🚨 STOMP Error:\", frame),\r\n  });\r\n\r\n  stompClient.activate();\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,UAAU,GAAG,0BAA0B,CAAC,CAAC;AAC/C,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,gBAAgB,GAAIC,cAAc,IAAK;EAClD,IAAIF,WAAW,IAAIA,WAAW,CAACG,SAAS,EAAE;IACxCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C;EACF;EAEA,MAAMC,MAAM,GAAG,IAAIT,MAAM,CAACE,UAAU,CAAC;EACrCC,WAAW,GAAG,IAAIF,MAAM,CAAC;IACvBS,gBAAgB,EAAEA,CAAA,KAAMD,MAAM;IAC9BE,cAAc,EAAE,IAAI;IACpBC,KAAK,EAAGC,GAAG,IAAKN,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEK,GAAG,CAAC;IACnDC,SAAS,EAAEA,CAAA,KAAM;MACfP,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MAEpC,MAAMO,YAAY,GAAGZ,WAAW,CAACa,SAAS,CAAC,sBAAsB,EAAGC,OAAO,IAAK;QAC9E,IAAI;UACF,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;UACzCd,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEU,QAAQ,CAAC;UAE1C,IAAIA,QAAQ,IAAIA,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACC,OAAO,KAAKC,SAAS,EAAE;YACpEnB,cAAc,CAACa,QAAQ,CAAC;UAC1B,CAAC,MAAM;YACLX,OAAO,CAACkB,IAAI,CAAC,gCAAgC,EAAEP,QAAQ,CAAC;UAC1D;QACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;UACdnB,OAAO,CAACmB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACxD;MACF,CAAC,CAAC;MAEFnB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEO,YAAY,CAACY,EAAE,CAAC;IACrD,CAAC;IACDC,YAAY,EAAEA,CAAA,KAAMrB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IAC3DqB,YAAY,EAAGC,KAAK,IAAKvB,OAAO,CAACmB,KAAK,CAAC,iBAAiB,EAAEI,KAAK;EACjE,CAAC,CAAC;EAEF3B,WAAW,CAAC4B,QAAQ,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}