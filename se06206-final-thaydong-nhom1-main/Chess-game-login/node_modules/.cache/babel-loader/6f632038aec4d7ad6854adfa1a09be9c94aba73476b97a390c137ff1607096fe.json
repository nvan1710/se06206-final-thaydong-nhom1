{"ast":null,"code":"let currentTurn = true; // true là Trắng, false là Đen\n\nexport const isValidMove = (piece, fromRow, fromCol, toRow, toCol, board) => {\n  if (fromRow === toRow && fromCol === toCol) return false;\n  const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n  if (isWhite !== currentTurn) return false; // 🔥 Fix lỗi kiểm tra lượt\n\n  const targetPiece = board[toRow][toCol];\n\n  // Không thể đi vào ô chứa quân đồng minh\n  if (targetPiece && \"♙♖♘♗♕♔\".includes(targetPiece) === isWhite) return false;\n  let validMove = false;\n  switch (piece) {\n    case \"♙\":\n      validMove = isValidPawnMove(fromRow, fromCol, toRow, toCol, board, true);\n      break;\n    case \"♟\":\n      validMove = isValidPawnMove(fromRow, fromCol, toRow, toCol, board, false);\n      break;\n    case \"♖\":\n    case \"♜\":\n      validMove = isValidRookMove(fromRow, fromCol, toRow, toCol, board);\n      break;\n    case \"♘\":\n    case \"♞\":\n      validMove = isValidKnightMove(toCol - fromCol, toRow - fromRow);\n      break;\n    case \"♗\":\n    case \"♝\":\n      validMove = isValidBishopMove(fromRow, fromCol, toRow, toCol, board);\n      break;\n    case \"♕\":\n    case \"♛\":\n      validMove = isValidQueenMove(fromRow, fromCol, toRow, toCol, board);\n      break;\n    case \"♔\":\n    case \"♚\":\n      validMove = isValidKingMove(toCol - fromCol, toRow - fromRow);\n      break;\n    default:\n      return false;\n  }\n  if (validMove) {\n    // Giả lập bàn cờ sau nước đi\n    const newBoard = board.map(row => [...row]);\n    newBoard[toRow][toCol] = piece;\n    newBoard[fromRow][fromCol] = \"\";\n\n    // Kiểm tra nước đi có làm vua bị chiếu không\n    if (isKingInCheck(newBoard, isWhite)) return false;\n    return true;\n  }\n  return false;\n};\n\n// ✅ Tách logic đổi lượt vào `movePiece()`\nexport const movePiece = (fromRow, fromCol, toRow, toCol, board) => {\n  if (isValidMove(board[fromRow][fromCol], fromRow, fromCol, toRow, toCol, board)) {\n    board[toRow][toCol] = board[fromRow][fromCol];\n    board[fromRow][fromCol] = \"\";\n    currentTurn = !currentTurn; // 🔥 Chỉ đổi lượt sau khi di chuyển thành công\n\n    renderBoard();\n  }\n};","map":{"version":3,"names":["currentTurn","isValidMove","piece","fromRow","fromCol","toRow","toCol","board","isWhite","includes","targetPiece","validMove","isValidPawnMove","isValidRookMove","isValidKnightMove","isValidBishopMove","isValidQueenMove","isValidKingMove","newBoard","map","row","isKingInCheck","movePiece","renderBoard"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/utils/moveRules.js"],"sourcesContent":["let currentTurn = true; // true là Trắng, false là Đen\n\nexport const isValidMove = (piece, fromRow, fromCol, toRow, toCol, board) => {\n  if (fromRow === toRow && fromCol === toCol) return false;\n\n  const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n  if (isWhite !== currentTurn) return false; // 🔥 Fix lỗi kiểm tra lượt\n\n  const targetPiece = board[toRow][toCol];\n\n  // Không thể đi vào ô chứa quân đồng minh\n  if (targetPiece && \"♙♖♘♗♕♔\".includes(targetPiece) === isWhite) return false;\n\n  let validMove = false;\n  switch (piece) {\n    case \"♙\": validMove = isValidPawnMove(fromRow, fromCol, toRow, toCol, board, true); break;\n    case \"♟\": validMove = isValidPawnMove(fromRow, fromCol, toRow, toCol, board, false); break;\n    case \"♖\": case \"♜\": validMove = isValidRookMove(fromRow, fromCol, toRow, toCol, board); break;\n    case \"♘\": case \"♞\": validMove = isValidKnightMove(toCol - fromCol, toRow - fromRow); break;\n    case \"♗\": case \"♝\": validMove = isValidBishopMove(fromRow, fromCol, toRow, toCol, board); break;\n    case \"♕\": case \"♛\": validMove = isValidQueenMove(fromRow, fromCol, toRow, toCol, board); break;\n    case \"♔\": case \"♚\": validMove = isValidKingMove(toCol - fromCol, toRow - fromRow); break;\n    default: return false;\n  }\n\n  if (validMove) {\n    // Giả lập bàn cờ sau nước đi\n    const newBoard = board.map((row) => [...row]);\n    newBoard[toRow][toCol] = piece;\n    newBoard[fromRow][fromCol] = \"\";\n\n    // Kiểm tra nước đi có làm vua bị chiếu không\n    if (isKingInCheck(newBoard, isWhite)) return false;\n    return true;\n  }\n\n  return false;\n};\n\n// ✅ Tách logic đổi lượt vào `movePiece()`\nexport const movePiece = (fromRow, fromCol, toRow, toCol, board) => {\n  if (isValidMove(board[fromRow][fromCol], fromRow, fromCol, toRow, toCol, board)) {\n    board[toRow][toCol] = board[fromRow][fromCol];\n    board[fromRow][fromCol] = \"\";\n    \n    currentTurn = !currentTurn; // 🔥 Chỉ đổi lượt sau khi di chuyển thành công\n\n    renderBoard();\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}