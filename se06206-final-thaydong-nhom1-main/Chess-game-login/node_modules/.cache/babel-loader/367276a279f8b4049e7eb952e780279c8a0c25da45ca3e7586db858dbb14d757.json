{"ast":null,"code":"var _jsxFileName = \"D:\\\\se06206-final-thaydong-nhom1-main\\\\se06206-final-thaydong-nhom1-main\\\\Chess-game-login\\\\src\\\\components\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { isValidMove } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\";\nimport pieceImages from \"../assets/pieceImages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  PIECE: \"piece\"\n};\nconst Square = ({\n  piece,\n  row,\n  col,\n  movePiece,\n  isKingInCheck,\n  isValidTarget,\n  onClick,\n  selected\n}) => {\n  _s();\n  const isDark = (row + col) % 2 === 1;\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: {\n      row,\n      col,\n      piece\n    },\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: item => movePiece(item.row, item.col, row, col)\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    onClick: () => onClick(row, col),\n    className: `w-16 h-16 flex justify-center items-center cursor-pointer relative\n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"} \n        ${isKingInCheck ? \"border-4 border-red-500\" : \"\"} \n        ${isValidTarget ? \"bg-green-300\" : \"\"} \n        ${selected ? \"border-4 border-blue-500\" : \"\"} \n      `,\n    children: piece && pieceImages[piece] && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: drag,\n      src: pieceImages[piece],\n      alt: piece,\n      className: `w-12 h-12 object-contain transition-transform duration-200 \n            ${isDragging ? \"opacity-50\" : \"cursor-grab\"} \n            ${selected ? \"scale-110\" : \"\"}\n          `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Square, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = Square;\nconst Chessboard = () => {\n  _s2();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [currentTurn, setCurrentTurn] = useState(true); // true: Trắng, false: Đen\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n  const selectPiece = (row, col) => {\n    const piece = board[row][col];\n    if (!piece) return;\n    const isWhiteTurn = \"♙♖♘♗♕♔\".includes(piece);\n    if (isWhiteTurn !== currentTurn) return;\n    let possibleMoves = [];\n    for (let r = 0; r < 8; r++) {\n      for (let c = 0; c < 8; c++) {\n        if (isValidMove(piece, row, col, r, c, board)) {\n          possibleMoves.push({\n            row: r,\n            col: c\n          });\n        }\n      }\n    }\n    setSelectedPiece({\n      row,\n      col\n    });\n    setValidMoves(possibleMoves);\n  };\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n      if (isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard)) {\n        newBoard[toRow][toCol] = piece;\n        newBoard[fromRow][fromCol] = \"\";\n        const isWhiteTurn = \"♙♖♘♗♕♔\".includes(piece);\n        setCurrentTurn(!currentTurn);\n        const isNowCheck = isKingInCheck(newBoard, !isWhiteTurn);\n        setIsCheck(isNowCheck);\n        if (isNowCheck) {\n          setCheckedKing(findKingPosition(newBoard, !isWhiteTurn));\n        } else {\n          setCheckedKing(null);\n        }\n        setIsCheckMate(isCheckmate(newBoard, !isWhiteTurn));\n        setSelectedPiece(null);\n        setValidMoves([]);\n        return newBoard;\n      }\n      return prevBoard;\n    });\n  };\n  const handleSquareClick = (row, col) => {\n    if (selectedPiece) {\n      if (validMoves.some(move => move.row === row && move.col === col)) {\n        movePiece(selectedPiece.row, selectedPiece.col, row, col);\n        return;\n      }\n    }\n    selectPiece(row, col);\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex flex-col justify-center items-center bg-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"\\u265F\\uFE0F Chess Game \\u265F\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: isCheckMate ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-800 text-lg font-bold\",\n          children: \"\\uD83C\\uDFC6 Chi\\u1EBFu h\\u1EBFt! Tr\\xF2 ch\\u01A1i k\\u1EBFt th\\xFAc \\uD83C\\uDFC6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this) : isCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-600 text-lg font-bold\",\n          children: \"\\uD83D\\uDD25 Vua \\u0111ang b\\u1ECB chi\\u1EBFu! \\uD83D\\uDD25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-bold\",\n          children: [\"\\uD83C\\uDFAD L\\u01B0\\u1EE3t \\u0111i: \", currentTurn ? \"Trắng\" : \"Đen\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-8 border-4 border-black shadow-lg\",\n        children: board.map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n          piece: piece,\n          row: rowIndex,\n          col: colIndex,\n          movePiece: movePiece,\n          onClick: handleSquareClick,\n          isKingInCheck: (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.row) === rowIndex && (checkedKing === null || checkedKing === void 0 ? void 0 : checkedKing.col) === colIndex,\n          isValidTarget: validMoves.some(m => m.row === rowIndex && m.col === colIndex)\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chessboard, \"OVkUD2WeJStOZnYOlMHgShoGgHU=\");\n_c2 = Chessboard;\nexport default Chessboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Chessboard\");","map":{"version":3,"names":["React","useState","useDrag","useDrop","DndProvider","HTML5Backend","isValidMove","initialBoardSetup","isKingInCheck","isCheckmate","findKingPosition","pieceImages","jsxDEV","_jsxDEV","ItemTypes","PIECE","Square","piece","row","col","movePiece","isValidTarget","onClick","selected","_s","isDark","isDragging","drag","type","item","collect","monitor","drop","accept","ref","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chessboard","_s2","board","setBoard","currentTurn","setCurrentTurn","isCheck","setIsCheck","isCheckMate","setIsCheckMate","checkedKing","setCheckedKing","selectedPiece","setSelectedPiece","validMoves","setValidMoves","selectPiece","isWhiteTurn","includes","possibleMoves","r","c","push","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","isNowCheck","handleSquareClick","some","move","backend","rowIndex","colIndex","m","_c2","$RefreshReg$"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { isValidMove } from \"../utils/moveRules\";\nimport { initialBoardSetup } from \"../config/boardSetup\";\nimport { isKingInCheck, isCheckmate, findKingPosition } from \"../utils/checkmate\";\nimport pieceImages from \"../assets/pieceImages\";\n\nconst ItemTypes = { PIECE: \"piece\" };\n\nconst Square = ({ piece, row, col, movePiece, isKingInCheck, isValidTarget, onClick, selected }) => {\n  const isDark = (row + col) % 2 === 1;\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: { row, col, piece },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: (item) => movePiece(item.row, item.col, row, col),\n  }));\n\n  return (\n    <div\n      ref={drop}\n      onClick={() => onClick(row, col)}\n      className={`w-16 h-16 flex justify-center items-center cursor-pointer relative\n        ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"} \n        ${isKingInCheck ? \"border-4 border-red-500\" : \"\"} \n        ${isValidTarget ? \"bg-green-300\" : \"\"} \n        ${selected ? \"border-4 border-blue-500\" : \"\"} \n      `}\n    >\n      {piece && pieceImages[piece] && (\n        <img\n          ref={drag}\n          src={pieceImages[piece]}\n          alt={piece}\n          className={`w-12 h-12 object-contain transition-transform duration-200 \n            ${isDragging ? \"opacity-50\" : \"cursor-grab\"} \n            ${selected ? \"scale-110\" : \"\"}\n          `}\n        />\n      )}\n    </div>\n  );\n};\n\n\nconst Chessboard = () => {\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [currentTurn, setCurrentTurn] = useState(true); // true: Trắng, false: Đen\n  const [isCheck, setIsCheck] = useState(false);\n  const [isCheckMate, setIsCheckMate] = useState(false);\n  const [checkedKing, setCheckedKing] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [validMoves, setValidMoves] = useState([]);\n\n  const selectPiece = (row, col) => {\n    const piece = board[row][col];\n    if (!piece) return;\n\n    const isWhiteTurn = \"♙♖♘♗♕♔\".includes(piece);\n    if (isWhiteTurn !== currentTurn) return;\n\n    let possibleMoves = [];\n    for (let r = 0; r < 8; r++) {\n      for (let c = 0; c < 8; c++) {\n        if (isValidMove(piece, row, col, r, c, board)) {\n          possibleMoves.push({ row: r, col: c });\n        }\n      }\n    }\n\n    setSelectedPiece({ row, col });\n    setValidMoves(possibleMoves);\n  };\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard((prevBoard) => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n\n      if (isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard)) {\n        newBoard[toRow][toCol] = piece;\n        newBoard[fromRow][fromCol] = \"\";\n\n        const isWhiteTurn = \"♙♖♘♗♕♔\".includes(piece);\n        setCurrentTurn(!currentTurn);\n\n        const isNowCheck = isKingInCheck(newBoard, !isWhiteTurn);\n        setIsCheck(isNowCheck);\n\n        if (isNowCheck) {\n          setCheckedKing(findKingPosition(newBoard, !isWhiteTurn));\n        } else {\n          setCheckedKing(null);\n        }\n\n        setIsCheckMate(isCheckmate(newBoard, !isWhiteTurn));\n\n        setSelectedPiece(null);\n        setValidMoves([]);\n\n        return newBoard;\n      }\n\n      return prevBoard;\n    });\n  };\n\n  const handleSquareClick = (row, col) => {\n    if (selectedPiece) {\n      if (validMoves.some(move => move.row === row && move.col === col)) {\n        movePiece(selectedPiece.row, selectedPiece.col, row, col);\n        return;\n      }\n    }\n    selectPiece(row, col);\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-gray-200\">\n        <h1 className=\"text-2xl font-bold mb-4\">♟️ Chess Game ♟️</h1>\n\n        <div className=\"mb-2\">\n          {isCheckMate ? (\n            <div className=\"text-red-800 text-lg font-bold\">🏆 Chiếu hết! Trò chơi kết thúc 🏆</div>\n          ) : isCheck ? (\n            <div className=\"text-red-600 text-lg font-bold\">🔥 Vua đang bị chiếu! 🔥</div>\n          ) : (\n            <div className=\"text-lg font-bold\">🎭 Lượt đi: {currentTurn ? \"Trắng\" : \"Đen\"}</div>\n          )}\n        </div>\n\n        <div className=\"grid grid-cols-8 border-4 border-black shadow-lg\">\n          {board.map((row, rowIndex) =>\n            row.map((piece, colIndex) => (\n              <Square\n                key={`${rowIndex}-${colIndex}`}\n                piece={piece}\n                row={rowIndex}\n                col={colIndex}\n                movePiece={movePiece}\n                onClick={handleSquareClick}\n                isKingInCheck={checkedKing?.row === rowIndex && checkedKing?.col === colIndex}\n                isValidTarget={validMoves.some(m => m.row === rowIndex && m.col === colIndex)}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}