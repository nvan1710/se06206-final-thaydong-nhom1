{"ast":null,"code":"var _jsxFileName = \"/root/se06206-final-thaydong-nhom1/Chess-game-login/src/components/ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { initialBoardSetup } from \"../data/chessPieces\";\nimport { isValidMove, isKingInCheck, getAllPossibleMoves } from \"../utils/moveRules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  PIECE: \"piece\"\n};\nconst Square = ({\n  piece,\n  row,\n  col,\n  movePiece,\n  turn\n}) => {\n  _s();\n  const isDark = (row + col) % 2 === 1;\n  const isWhitePiece = \"♙♖♘♗♕♔\".includes(piece);\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: {\n      row,\n      col,\n      piece\n    },\n    canDrag: isWhitePiece && turn === \"white\" || !isWhitePiece && turn === \"black\",\n    // Allow only current turn player to move\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: item => movePiece(item.row, item.col, row, col)\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: `w-16 h-16 flex justify-center items-center text-2xl font-bold ${isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"}`,\n    children: piece && /*#__PURE__*/_jsxDEV(\"span\", {\n      ref: drag,\n      className: `cursor-grab ${isDragging ? \"opacity-50\" : \"\"}`,\n      children: piece\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Square, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = Square;\nconst Chessboard = () => {\n  _s2();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [turn, setTurn] = useState(\"white\");\n  const [checkStatus, setCheckStatus] = useState(null);\n  useEffect(() => {\n    // Check if the current player's king is in check\n    const kingInCheck = isKingInCheck(turn, board);\n    setCheckStatus(kingInCheck ? `${turn} is in CHECK!` : null);\n  }, [board, turn]);\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n      if (!isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard, turn)) return prevBoard;\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n      setMoveHistory(prevHistory => [...prevHistory, `${piece} ${convertToChessNotation(fromRow, fromCol)} → ${convertToChessNotation(toRow, toCol)}`]);\n      setTurn(turn === \"white\" ? \"black\" : \"white\");\n      return newBoard;\n    });\n  };\n  const convertToChessNotation = (row, col) => {\n    const files = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n    return `${files[col]}${8 - row}`;\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2\",\n        children: [turn.toUpperCase(), \"'s Turn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), checkStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 font-bold\",\n        children: checkStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-8 w-128 h-128 border-4 border-black\",\n          children: board.map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n            piece: piece,\n            row: rowIndex,\n            col: colIndex,\n            movePiece: movePiece,\n            turn: turn\n          }, `${rowIndex}-${colIndex}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-bold mb-2\",\n            children: \"Move History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-sm bg-gray-200 p-2 rounded w-40 h-64 overflow-y-auto\",\n            children: moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"mb-1\",\n              children: `${index + 1}. ${move}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s2(Chessboard, \"OSLnqz9Yae36anOV4HMmg5pcySc=\");\n_c2 = Chessboard;\nexport default Chessboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Chessboard\");","map":{"version":3,"names":["React","useState","useEffect","useDrag","useDrop","DndProvider","HTML5Backend","initialBoardSetup","isValidMove","isKingInCheck","getAllPossibleMoves","jsxDEV","_jsxDEV","ItemTypes","PIECE","Square","piece","row","col","movePiece","turn","_s","isDark","isWhitePiece","includes","isDragging","drag","type","item","canDrag","collect","monitor","drop","accept","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chessboard","_s2","board","setBoard","moveHistory","setMoveHistory","setTurn","checkStatus","setCheckStatus","kingInCheck","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","prevHistory","convertToChessNotation","files","backend","toUpperCase","rowIndex","colIndex","move","index","_c2","$RefreshReg$"],"sources":["/root/se06206-final-thaydong-nhom1/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDrag, useDrop, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { initialBoardSetup } from \"../data/chessPieces\";\nimport { isValidMove, isKingInCheck, getAllPossibleMoves } from \"../utils/moveRules\";\n\nconst ItemTypes = { PIECE: \"piece\" };\n\nconst Square = ({ piece, row, col, movePiece, turn }) => {\n  const isDark = (row + col) % 2 === 1;\n  const isWhitePiece = \"♙♖♘♗♕♔\".includes(piece);\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: ItemTypes.PIECE,\n    item: { row, col, piece },\n    canDrag: (isWhitePiece && turn === \"white\") || (!isWhitePiece && turn === \"black\"), // Allow only current turn player to move\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.PIECE,\n    drop: (item) => movePiece(item.row, item.col, row, col),\n  }));\n\n  return (\n    <div\n      ref={drop}\n      className={`w-16 h-16 flex justify-center items-center text-2xl font-bold ${\n        isDark ? \"bg-[#9A6553]\" : \"bg-[#D5B793]\"\n      }`}\n    >\n      {piece && (\n        <span\n          ref={drag}\n          className={`cursor-grab ${isDragging ? \"opacity-50\" : \"\"}`}\n        >\n          {piece}\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst Chessboard = () => {\n  const [board, setBoard] = useState(initialBoardSetup);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [turn, setTurn] = useState(\"white\");\n  const [checkStatus, setCheckStatus] = useState(null);\n\n  useEffect(() => {\n    // Check if the current player's king is in check\n    const kingInCheck = isKingInCheck(turn, board);\n    setCheckStatus(kingInCheck ? `${turn} is in CHECK!` : null);\n  }, [board, turn]);\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard((prevBoard) => {\n      const newBoard = prevBoard.map((row) => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n  \n      if (!isValidMove(piece, fromRow, fromCol, toRow, toCol, newBoard, turn)) return prevBoard;\n  \n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n  \n      setMoveHistory((prevHistory) => [\n        ...prevHistory,\n        `${piece} ${convertToChessNotation(fromRow, fromCol)} → ${convertToChessNotation(toRow, toCol)}`,\n      ]);\n  \n      setTurn(turn === \"white\" ? \"black\" : \"white\");\n  \n      return newBoard;\n    });\n  };\n  \n  \n  const convertToChessNotation = (row, col) => {\n    const files = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n    return `${files[col]}${8 - row}`;\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"flex flex-col items-center\">\n        <h2 className=\"text-xl font-bold mb-2\">{turn.toUpperCase()}'s Turn</h2>\n        {checkStatus && <div className=\"text-red-500 font-bold\">{checkStatus}</div>}\n        \n        <div className=\"flex\">\n          {/* Chessboard */}\n          <div className=\"grid grid-cols-8 w-128 h-128 border-4 border-black\">\n            {board.map((row, rowIndex) =>\n              row.map((piece, colIndex) => (\n                <Square\n                  key={`${rowIndex}-${colIndex}`}\n                  piece={piece}\n                  row={rowIndex}\n                  col={colIndex}\n                  movePiece={movePiece}\n                  turn={turn}\n                />\n              ))\n            )}\n          </div>\n\n          {/* Move History */}\n          <div className=\"ml-4\">\n            <h2 className=\"text-lg font-bold mb-2\">Move History</h2>\n            <ul className=\"text-sm bg-gray-200 p-2 rounded w-40 h-64 overflow-y-auto\">\n              {moveHistory.map((move, index) => (\n                <li key={index} className=\"mb-1\">{`${index + 1}. ${move}`}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}