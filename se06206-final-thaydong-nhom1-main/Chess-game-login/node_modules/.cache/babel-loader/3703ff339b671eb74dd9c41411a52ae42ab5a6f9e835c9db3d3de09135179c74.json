{"ast":null,"code":"import SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nconst SOCKET_URL = \"http://localhost:8080/ws\"; // URL backend WebSocket\nlet stompClient = null;\nexport const connectWebSocket = onMoveReceived => {\n  const socket = new SockJS(\"http://localhost:8080/ws\");\n  stompClient = Stomp.over(socket);\n  stompClient.connect({}, () => {\n    console.log(\"✅ WebSocket Connected\");\n    stompClient.subscribe(\"/topic/game\", message => {\n      if (!message.body) {\n        console.error(\"❌ WebSocket received empty data!\");\n        return;\n      }\n      const move = JSON.parse(message.body);\n      if (!move || !move.piece) {\n        console.error(\"❌ Invalid move received:\", move);\n        return;\n      }\n      console.log(\"📥 Move Received:\", move);\n      onMoveReceived(move); // Cập nhật UI\n    });\n  }, error => {\n    console.error(\"❌ WebSocket Error:\", error);\n  });\n};\nexport const sendMove = move => {\n  if (!stompClient || !stompClient.connected) {\n    console.error(\"❌ WebSocket is not connected!\");\n    return;\n  }\n  if (!move.piece) {\n    console.error(\"❌ Move is missing piece data!\");\n    return;\n  }\n  console.log(\"📤 Sending Move:\", move);\n  stompClient.send(\"/app/move\", {}, JSON.stringify(move));\n};\nexport const disconnectWebSocket = () => {\n  if (stompClient) {\n    stompClient.disconnect(() => {\n      console.log(\"🔌 WebSocket Disconnected\");\n    });\n  }\n};","map":{"version":3,"names":["SockJS","Client","SOCKET_URL","stompClient","connectWebSocket","onMoveReceived","socket","Stomp","over","connect","console","log","subscribe","message","body","error","move","JSON","parse","piece","sendMove","connected","send","stringify","disconnectWebSocket","disconnect"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/websocket.js"],"sourcesContent":["import SockJS from \"sockjs-client\";\r\nimport { Client } from \"@stomp/stompjs\";\r\n\r\nconst SOCKET_URL = \"http://localhost:8080/ws\"; // URL backend WebSocket\r\nlet stompClient = null;\r\n\r\nexport const connectWebSocket = (onMoveReceived) => {\r\n  const socket = new SockJS(\"http://localhost:8080/ws\");\r\n  stompClient = Stomp.over(socket);\r\n  \r\n  stompClient.connect({}, () => {\r\n      console.log(\"✅ WebSocket Connected\");\r\n      \r\n      stompClient.subscribe(\"/topic/game\", (message) => {\r\n          if (!message.body) {\r\n              console.error(\"❌ WebSocket received empty data!\");\r\n              return;\r\n          }\r\n          const move = JSON.parse(message.body);\r\n          if (!move || !move.piece) {\r\n              console.error(\"❌ Invalid move received:\", move);\r\n              return;\r\n          }\r\n          console.log(\"📥 Move Received:\", move);\r\n          onMoveReceived(move); // Cập nhật UI\r\n      });\r\n  }, (error) => {\r\n      console.error(\"❌ WebSocket Error:\", error);\r\n  });\r\n};\r\n\r\nexport const sendMove = (move) => {\r\n  if (!stompClient || !stompClient.connected) {\r\n      console.error(\"❌ WebSocket is not connected!\");\r\n      return;\r\n  }\r\n  if (!move.piece) {\r\n      console.error(\"❌ Move is missing piece data!\");\r\n      return;\r\n  }\r\n  console.log(\"📤 Sending Move:\", move);\r\n  stompClient.send(\"/app/move\", {}, JSON.stringify(move));\r\n};\r\n\r\nexport const disconnectWebSocket = () => {\r\n  if (stompClient) {\r\n      stompClient.disconnect(() => {\r\n          console.log(\"🔌 WebSocket Disconnected\");\r\n      });\r\n  }\r\n};\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,eAAe;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,UAAU,GAAG,0BAA0B,CAAC,CAAC;AAC/C,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,gBAAgB,GAAIC,cAAc,IAAK;EAClD,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAAC,0BAA0B,CAAC;EACrDG,WAAW,GAAGI,KAAK,CAACC,IAAI,CAACF,MAAM,CAAC;EAEhCH,WAAW,CAACM,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM;IAC1BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IAEpCR,WAAW,CAACS,SAAS,CAAC,aAAa,EAAGC,OAAO,IAAK;MAC9C,IAAI,CAACA,OAAO,CAACC,IAAI,EAAE;QACfJ,OAAO,CAACK,KAAK,CAAC,kCAAkC,CAAC;QACjD;MACJ;MACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAACC,IAAI,CAAC;MACrC,IAAI,CAACE,IAAI,IAAI,CAACA,IAAI,CAACG,KAAK,EAAE;QACtBT,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEC,IAAI,CAAC;QAC/C;MACJ;MACAN,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEK,IAAI,CAAC;MACtCX,cAAc,CAACW,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC,EAAGD,KAAK,IAAK;IACVL,OAAO,CAACK,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;EAC9C,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAIJ,IAAI,IAAK;EAChC,IAAI,CAACb,WAAW,IAAI,CAACA,WAAW,CAACkB,SAAS,EAAE;IACxCX,OAAO,CAACK,KAAK,CAAC,+BAA+B,CAAC;IAC9C;EACJ;EACA,IAAI,CAACC,IAAI,CAACG,KAAK,EAAE;IACbT,OAAO,CAACK,KAAK,CAAC,+BAA+B,CAAC;IAC9C;EACJ;EACAL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEK,IAAI,CAAC;EACrCb,WAAW,CAACmB,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,EAAEL,IAAI,CAACM,SAAS,CAACP,IAAI,CAAC,CAAC;AACzD,CAAC;AAED,OAAO,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;EACvC,IAAIrB,WAAW,EAAE;IACbA,WAAW,CAACsB,UAAU,CAAC,MAAM;MACzBf,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC5C,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}