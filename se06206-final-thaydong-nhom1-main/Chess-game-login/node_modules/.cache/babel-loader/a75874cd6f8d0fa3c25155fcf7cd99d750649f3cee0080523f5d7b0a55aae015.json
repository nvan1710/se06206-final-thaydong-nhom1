{"ast":null,"code":"import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nconst SOCKET_URL = 'http://localhost:8080/ws'; // Endpoint WebSocket của Spring Boot\n\nexport const stompClient = new Client({\n  brokerURL: SOCKET_URL,\n  // Kết nối trực tiếp nếu WebSocket server hỗ trợ\n  connectHeaders: {},\n  debug: str => console.log(str),\n  // Log để debug\n  reconnectDelay: 5000,\n  // Tự động kết nối lại sau 5s nếu mất kết nối\n  heartbeatIncoming: 4000,\n  heartbeatOutgoing: 4000,\n  webSocketFactory: () => new SockJS(SOCKET_URL) // Dùng SockJS nếu cần fallback\n});\nexport const connectWebSocket = onMessageReceived => {\n  stompClient.onConnect = () => {\n    console.log('WebSocket connected');\n    stompClient.subscribe('/topic/chess-updates', message => {\n      const data = JSON.parse(message.body);\n      onMessageReceived(data);\n    });\n  };\n  stompClient.onStompError = error => {\n    console.error('WebSocket error', error);\n  };\n  stompClient.activate();\n};\nexport const sendMessage = (destination, body) => {\n  if (stompClient.connected) {\n    stompClient.publish({\n      destination,\n      body: JSON.stringify(body)\n    });\n  } else {\n    console.error('WebSocket is not connected');\n  }\n};\nexport const disconnectWebSocket = () => {\n  if (stompClient.connected) {\n    stompClient.deactivate();\n    console.log('WebSocket disconnected');\n  }\n};","map":{"version":3,"names":["Client","SockJS","SOCKET_URL","stompClient","brokerURL","connectHeaders","debug","str","console","log","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","webSocketFactory","connectWebSocket","onMessageReceived","onConnect","subscribe","message","data","JSON","parse","body","onStompError","error","activate","sendMessage","destination","connected","publish","stringify","disconnectWebSocket","deactivate"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/websocket/websocket.js"],"sourcesContent":["import { Client } from '@stomp/stompjs';\r\nimport SockJS from 'sockjs-client';\r\n\r\nconst SOCKET_URL = 'http://localhost:8080/ws'; // Endpoint WebSocket của Spring Boot\r\n\r\nexport const stompClient = new Client({\r\n  brokerURL: SOCKET_URL, // Kết nối trực tiếp nếu WebSocket server hỗ trợ\r\n  connectHeaders: {},\r\n  debug: (str) => console.log(str), // Log để debug\r\n  reconnectDelay: 5000, // Tự động kết nối lại sau 5s nếu mất kết nối\r\n  heartbeatIncoming: 4000,\r\n  heartbeatOutgoing: 4000,\r\n  webSocketFactory: () => new SockJS(SOCKET_URL), // Dùng SockJS nếu cần fallback\r\n});\r\n\r\nexport const connectWebSocket = (onMessageReceived) => {\r\n  stompClient.onConnect = () => {\r\n    console.log('WebSocket connected');\r\n    stompClient.subscribe('/topic/chess-updates', (message) => {\r\n      const data = JSON.parse(message.body);\r\n      onMessageReceived(data);\r\n    });\r\n  };\r\n\r\n  stompClient.onStompError = (error) => {\r\n    console.error('WebSocket error', error);\r\n  };\r\n\r\n  stompClient.activate();\r\n};\r\n\r\nexport const sendMessage = (destination, body) => {\r\n  if (stompClient.connected) {\r\n    stompClient.publish({ destination, body: JSON.stringify(body) });\r\n  } else {\r\n    console.error('WebSocket is not connected');\r\n  }\r\n};\r\n\r\nexport const disconnectWebSocket = () => {\r\n  if (stompClient.connected) {\r\n    stompClient.deactivate();\r\n    console.log('WebSocket disconnected');\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,MAAM,MAAM,eAAe;AAElC,MAAMC,UAAU,GAAG,0BAA0B,CAAC,CAAC;;AAE/C,OAAO,MAAMC,WAAW,GAAG,IAAIH,MAAM,CAAC;EACpCI,SAAS,EAAEF,UAAU;EAAE;EACvBG,cAAc,EAAE,CAAC,CAAC;EAClBC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAAE;EAClCG,cAAc,EAAE,IAAI;EAAE;EACtBC,iBAAiB,EAAE,IAAI;EACvBC,iBAAiB,EAAE,IAAI;EACvBC,gBAAgB,EAAEA,CAAA,KAAM,IAAIZ,MAAM,CAACC,UAAU,CAAC,CAAE;AAClD,CAAC,CAAC;AAEF,OAAO,MAAMY,gBAAgB,GAAIC,iBAAiB,IAAK;EACrDZ,WAAW,CAACa,SAAS,GAAG,MAAM;IAC5BR,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCN,WAAW,CAACc,SAAS,CAAC,sBAAsB,EAAGC,OAAO,IAAK;MACzD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;MACrCP,iBAAiB,CAACI,IAAI,CAAC;IACzB,CAAC,CAAC;EACJ,CAAC;EAEDhB,WAAW,CAACoB,YAAY,GAAIC,KAAK,IAAK;IACpChB,OAAO,CAACgB,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EACzC,CAAC;EAEDrB,WAAW,CAACsB,QAAQ,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,WAAW,EAAEL,IAAI,KAAK;EAChD,IAAInB,WAAW,CAACyB,SAAS,EAAE;IACzBzB,WAAW,CAAC0B,OAAO,CAAC;MAAEF,WAAW;MAAEL,IAAI,EAAEF,IAAI,CAACU,SAAS,CAACR,IAAI;IAAE,CAAC,CAAC;EAClE,CAAC,MAAM;IACLd,OAAO,CAACgB,KAAK,CAAC,4BAA4B,CAAC;EAC7C;AACF,CAAC;AAED,OAAO,MAAMO,mBAAmB,GAAGA,CAAA,KAAM;EACvC,IAAI5B,WAAW,CAACyB,SAAS,EAAE;IACzBzB,WAAW,CAAC6B,UAAU,CAAC,CAAC;IACxBxB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}