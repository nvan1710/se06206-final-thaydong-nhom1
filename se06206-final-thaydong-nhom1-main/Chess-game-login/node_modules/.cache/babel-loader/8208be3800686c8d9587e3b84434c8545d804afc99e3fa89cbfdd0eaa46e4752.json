{"ast":null,"code":"export const getValidMoves = (piece, row, col, board) => {\n  let validMoves = [];\n  const isWhite = \"♙♖♘♗♕♔\".includes(piece); // Xác định màu quân cờ\n\n  switch (piece) {\n    case \"♙\":\n    case \"♟\":\n      // Tốt\n      validMoves = getPawnMoves(row, col, board, isWhite);\n      break;\n    case \"♖\":\n    case \"♜\":\n      // Xe\n      validMoves = getRookMoves(row, col, board, isWhite);\n      break;\n    case \"♘\":\n    case \"♞\":\n      // Mã\n      validMoves = getKnightMoves(row, col, board, isWhite);\n      break;\n    case \"♗\":\n    case \"♝\":\n      // Tượng\n      validMoves = getBishopMoves(row, col, board, isWhite);\n      break;\n    case \"♕\":\n    case \"♛\":\n      // Hậu\n      validMoves = [...getRookMoves(row, col, board, isWhite), ...getBishopMoves(row, col, board, isWhite)];\n      break;\n    case \"♔\":\n    case \"♚\":\n      // Vua\n      validMoves = getKingMoves(row, col, board, isWhite);\n      break;\n  }\n  return validMoves;\n};\n\n// ✅ Kiểm tra quân địch\nconst isOpponent = (piece, targetPiece) => {\n  return targetPiece && \"♙♖♘♗♕♔\".includes(piece) !== \"♙♖♘♗♕♔\".includes(targetPiece);\n};\n\n// ✅ Xử lý nước đi của Tốt\nconst getPawnMoves = (row, col, board, isWhite) => {\n  let moves = [];\n  const direction = isWhite ? -1 : 1;\n  const startRow = isWhite ? 6 : 1;\n  const endRow = isWhite ? 0 : 7;\n\n  // Đi thẳng\n  if (!board[row + direction][col]) {\n    moves.push({\n      row: row + direction,\n      col,\n      promote: row + direction === endRow\n    });\n\n    // Nếu là nước đi đầu tiên, có thể đi 2 ô\n    if (row === startRow && !board[row + 2 * direction][col]) {\n      moves.push({\n        row: row + 2 * direction,\n        col\n      });\n    }\n  }\n\n  // Ăn chéo\n  if (col > 0 && isOpponent(board[row][col], board[row + direction][col - 1])) {\n    moves.push({\n      row: row + direction,\n      col: col - 1,\n      promote: row + direction === endRow\n    });\n  }\n  if (col < 7 && isOpponent(board[row][col], board[row + direction][col + 1])) {\n    moves.push({\n      row: row + direction,\n      col: col + 1,\n      promote: row + direction === endRow\n    });\n  }\n  return moves;\n};\n\n// ✅ Xử lý di chuyển Xe\nconst getRookMoves = (row, col, board, isWhite) => {\n  return getLinearMoves(row, col, board, [[-1, 0], [1, 0], [0, -1], [0, 1]]);\n};\n\n// ✅ Xử lý di chuyển Tượng\nconst getBishopMoves = (row, col, board, isWhite) => {\n  return getLinearMoves(row, col, board, [[-1, -1], [-1, 1], [1, -1], [1, 1]]);\n};\n\n// ✅ Xử lý di chuyển Hậu\nconst getQueenMoves = (row, col, board, isWhite) => {\n  return [...getRookMoves(row, col, board, isWhite), ...getBishopMoves(row, col, board, isWhite)];\n};\n\n// ✅ Xử lý di chuyển Mã\nconst getKnightMoves = (row, col, board) => {\n  const moves = [];\n  const knightMoves = [[-2, -1], [-2, 1], [2, -1], [2, 1], [-1, -2], [-1, 2], [1, -2], [1, 2]];\n  knightMoves.forEach(([dr, dc]) => {\n    const r = row + dr,\n      c = col + dc;\n    if (r >= 0 && r < 8 && c >= 0 && c < 8 && (!board[r][c] || isOpponent(board[row][col], board[r][c]))) {\n      moves.push({\n        row: r,\n        col: c\n      });\n    }\n  });\n  return moves;\n};\n\n// ✅ Xử lý di chuyển Vua (bao gồm kiểm tra nước đi)\nconst getKingMoves = (row, col, board, isWhite) => {\n  const moves = [];\n  const kingMoves = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n  kingMoves.forEach(([dr, dc]) => {\n    const r = row + dr,\n      c = col + dc;\n    if (r >= 0 && r < 8 && c >= 0 && c < 8 && (!board[r][c] || isOpponent(board[row][col], board[r][c]))) {\n      moves.push({\n        row: r,\n        col: c\n      });\n    }\n  });\n  return moves;\n};\n\n// ✅ Xử lý nước đi theo đường thẳng (Xe, Tượng, Hậu)\nconst getLinearMoves = (row, col, board, directions) => {\n  const moves = [];\n  directions.forEach(([dr, dc]) => {\n    let r = row + dr,\n      c = col + dc;\n    while (r >= 0 && r < 8 && c >= 0 && c < 8) {\n      if (!board[r][c]) {\n        moves.push({\n          row: r,\n          col: c\n        });\n      } else {\n        if (isOpponent(board[row][col], board[r][c])) {\n          moves.push({\n            row: r,\n            col: c\n          });\n        }\n        break;\n      }\n      r += dr;\n      c += dc;\n    }\n  });\n  return moves;\n};\n\n// ✅ Kiểm tra nước đi hợp lệ\nexport const isValidMove = (piece, fromRow, fromCol, toRow, toCol, board) => {\n  const validMoves = getValidMoves(piece, fromRow, fromCol, board);\n  return validMoves.some(move => move.row === toRow && move.col === toCol);\n};\n\n// ✅ Xử lý phong cấp tốt\nexport const promotePawn = async (row, col, board, isWhite) => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const promotedPiece = window.prompt(\"Chọn quân để phong cấp: (Q) Hậu, (R) Xe, (B) Tượng, (N) Mã\", \"Q\");\n      let newPiece;\n      switch (promotedPiece === null || promotedPiece === void 0 ? void 0 : promotedPiece.toUpperCase()) {\n        case \"R\":\n          newPiece = isWhite ? \"♖\" : \"♜\";\n          break;\n        case \"B\":\n          newPiece = isWhite ? \"♗\" : \"♝\";\n          break;\n        case \"N\":\n          newPiece = isWhite ? \"♘\" : \"♞\";\n          break;\n        default:\n          newPiece = isWhite ? \"♕\" : \"♛\";\n        // Mặc định là Hậu\n      }\n      board[row][col] = newPiece;\n      resolve();\n    }, 100);\n  });\n};\n\n// ✅ Xuất các hàm cần thiết\nexport { getPawnMoves, getRookMoves, getBishopMoves, getKnightMoves, getKingMoves, getLinearMoves };","map":{"version":3,"names":["getValidMoves","piece","row","col","board","validMoves","isWhite","includes","getPawnMoves","getRookMoves","getKnightMoves","getBishopMoves","getKingMoves","isOpponent","targetPiece","moves","direction","startRow","endRow","push","promote","getLinearMoves","getQueenMoves","knightMoves","forEach","dr","dc","r","c","kingMoves","directions","isValidMove","fromRow","fromCol","toRow","toCol","some","move","promotePawn","Promise","resolve","setTimeout","promotedPiece","window","prompt","newPiece","toUpperCase"],"sources":["/root/se06206-final-thaydong-nhom1/se06206-final-thaydong-nhom1-main/Chess-game-login/src/utils/moveRules.js"],"sourcesContent":["export const getValidMoves = (piece, row, col, board) => {\n  let validMoves = [];\n  const isWhite = \"♙♖♘♗♕♔\".includes(piece); // Xác định màu quân cờ\n\n  switch (piece) {\n    case \"♙\": case \"♟\": // Tốt\n      validMoves = getPawnMoves(row, col, board, isWhite);\n      break;\n    case \"♖\": case \"♜\": // Xe\n      validMoves = getRookMoves(row, col, board, isWhite);\n      break;\n    case \"♘\": case \"♞\": // Mã\n      validMoves = getKnightMoves(row, col, board, isWhite);\n      break;\n    case \"♗\": case \"♝\": // Tượng\n      validMoves = getBishopMoves(row, col, board, isWhite);\n      break;\n    case \"♕\": case \"♛\": // Hậu\n      validMoves = [...getRookMoves(row, col, board, isWhite), ...getBishopMoves(row, col, board, isWhite)];\n      break;\n    case \"♔\": case \"♚\": // Vua\n      validMoves = getKingMoves(row, col, board, isWhite);\n      break;\n  }\n\n  return validMoves;\n};\n\n// ✅ Kiểm tra quân địch\nconst isOpponent = (piece, targetPiece) => {\n  return targetPiece && (\"♙♖♘♗♕♔\".includes(piece) !== \"♙♖♘♗♕♔\".includes(targetPiece));\n};\n\n// ✅ Xử lý nước đi của Tốt\nconst getPawnMoves = (row, col, board, isWhite) => {\n  let moves = [];\n  const direction = isWhite ? -1 : 1;\n  const startRow = isWhite ? 6 : 1;\n  const endRow = isWhite ? 0 : 7;\n\n  // Đi thẳng\n  if (!board[row + direction][col]) {\n    moves.push({ row: row + direction, col, promote: row + direction === endRow });\n\n    // Nếu là nước đi đầu tiên, có thể đi 2 ô\n    if (row === startRow && !board[row + 2 * direction][col]) {\n      moves.push({ row: row + 2 * direction, col });\n    }\n  }\n\n  // Ăn chéo\n  if (col > 0 && isOpponent(board[row][col], board[row + direction][col - 1])) {\n    moves.push({ row: row + direction, col: col - 1, promote: row + direction === endRow });\n  }\n  if (col < 7 && isOpponent(board[row][col], board[row + direction][col + 1])) {\n    moves.push({ row: row + direction, col: col + 1, promote: row + direction === endRow });\n  }\n\n  return moves;\n};\n\n// ✅ Xử lý di chuyển Xe\nconst getRookMoves = (row, col, board, isWhite) => {\n  return getLinearMoves(row, col, board, [[-1, 0], [1, 0], [0, -1], [0, 1]]);\n};\n\n// ✅ Xử lý di chuyển Tượng\nconst getBishopMoves = (row, col, board, isWhite) => {\n  return getLinearMoves(row, col, board, [[-1, -1], [-1, 1], [1, -1], [1, 1]]);\n};\n\n// ✅ Xử lý di chuyển Hậu\nconst getQueenMoves = (row, col, board, isWhite) => {\n  return [...getRookMoves(row, col, board, isWhite), ...getBishopMoves(row, col, board, isWhite)];\n};\n\n// ✅ Xử lý di chuyển Mã\nconst getKnightMoves = (row, col, board) => {\n  const moves = [];\n  const knightMoves = [[-2, -1], [-2, 1], [2, -1], [2, 1], [-1, -2], [-1, 2], [1, -2], [1, 2]];\n  knightMoves.forEach(([dr, dc]) => {\n    const r = row + dr, c = col + dc;\n    if (r >= 0 && r < 8 && c >= 0 && c < 8 && (!board[r][c] || isOpponent(board[row][col], board[r][c]))) {\n      moves.push({ row: r, col: c });\n    }\n  });\n  return moves;\n};\n\n// ✅ Xử lý di chuyển Vua (bao gồm kiểm tra nước đi)\nconst getKingMoves = (row, col, board, isWhite) => {\n  const moves = [];\n  const kingMoves = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n  kingMoves.forEach(([dr, dc]) => {\n    const r = row + dr, c = col + dc;\n    if (r >= 0 && r < 8 && c >= 0 && c < 8 && (!board[r][c] || isOpponent(board[row][col], board[r][c]))) {\n      moves.push({ row: r, col: c });\n    }\n  });\n  return moves;\n};\n\n// ✅ Xử lý nước đi theo đường thẳng (Xe, Tượng, Hậu)\nconst getLinearMoves = (row, col, board, directions) => {\n  const moves = [];\n  directions.forEach(([dr, dc]) => {\n    let r = row + dr, c = col + dc;\n    while (r >= 0 && r < 8 && c >= 0 && c < 8) {\n      if (!board[r][c]) {\n        moves.push({ row: r, col: c });\n      } else {\n        if (isOpponent(board[row][col], board[r][c])) {\n          moves.push({ row: r, col: c });\n        }\n        break;\n      }\n      r += dr;\n      c += dc;\n    }\n  });\n  return moves;\n};\n\n// ✅ Kiểm tra nước đi hợp lệ\nexport const isValidMove = (piece, fromRow, fromCol, toRow, toCol, board) => {\n  const validMoves = getValidMoves(piece, fromRow, fromCol, board);\n  return validMoves.some(move => move.row === toRow && move.col === toCol);\n};\n\n// ✅ Xử lý phong cấp tốt\nexport const promotePawn = async (row, col, board, isWhite) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const promotedPiece = window.prompt(\"Chọn quân để phong cấp: (Q) Hậu, (R) Xe, (B) Tượng, (N) Mã\", \"Q\");\n      let newPiece;\n      switch (promotedPiece?.toUpperCase()) {\n        case \"R\": newPiece = isWhite ? \"♖\" : \"♜\"; break;\n        case \"B\": newPiece = isWhite ? \"♗\" : \"♝\"; break;\n        case \"N\": newPiece = isWhite ? \"♘\" : \"♞\"; break;\n        default: newPiece = isWhite ? \"♕\" : \"♛\"; // Mặc định là Hậu\n      }\n      board[row][col] = newPiece;\n      resolve();\n    }, 100);\n  });\n};\n\n// ✅ Xuất các hàm cần thiết\nexport { getPawnMoves, getRookMoves, getBishopMoves, getKnightMoves, getKingMoves, getLinearMoves };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}