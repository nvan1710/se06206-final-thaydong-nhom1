{"ast":null,"code":"var _jsxFileName = \"/root/se06206-final-thaydong-nhom1/Chess-game-login/src/components/ChessBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Square from \"./Square\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialBoardSetup = [[\"♜\", \"♞\", \"♝\", \"♛\", \"♚\", \"♝\", \"♞\", \"♜\"], [\"♟\", \"♟\", \"♟\", \"♟\", \"♟\", \"♟\", \"♟\", \"♟\"], [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"♙\", \"♙\", \"♙\", \"♙\", \"♙\", \"♙\", \"♙\", \"♙\"], [\"♖\", \"♘\", \"♗\", \"♕\", \"♔\", \"♗\", \"♘\", \"♖\"]];\nconst Chessboard = () => {\n  _s();\n  const [board, setBoard] = useState(initialBoardSetup);\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard(prevBoard => {\n      const newBoard = prevBoard.map(row => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n      const targetPiece = newBoard[toRow][toCol];\n      if (piece === \"\") return prevBoard;\n      const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n      const isTargetWhite = \"♟♜♞♝♛♚\".includes(targetPiece);\n      if (targetPiece !== \"\" && isWhite === isTargetWhite) return prevBoard;\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n      return newBoard;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen w-screen flex flex-col items-center justify-center bg-cover bg-center\",\n      style: {\n        backgroundImage: \"url('https://source.unsplash.com/1920x1080/?chess,board')\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-6 text-white bg-black bg-opacity-50 p-3 rounded-lg shadow-lg\",\n        children: \"Chess Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-8 border-8 border-gray-800 shadow-2xl rounded-xl bg-gray-900 bg-opacity-70 p-1\",\n        children: board.map((row, rowIndex) => row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n          piece: piece,\n          row: rowIndex,\n          col: colIndex,\n          movePiece: movePiece\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Chessboard, \"RTs/DivBFnP55aETIiYBIy5So5g=\");\n_c = Chessboard;\nexport default Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["React","useState","DndProvider","HTML5Backend","Square","jsxDEV","_jsxDEV","initialBoardSetup","Chessboard","_s","board","setBoard","movePiece","fromRow","fromCol","toRow","toCol","prevBoard","newBoard","map","row","piece","targetPiece","isWhite","includes","isTargetWhite","backend","children","className","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","rowIndex","colIndex","col","_c","$RefreshReg$"],"sources":["/root/se06206-final-thaydong-nhom1/Chess-game-login/src/components/ChessBoard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Square from \"./Square\";\n\nconst initialBoardSetup = [\n  [\"♜\", \"♞\", \"♝\", \"♛\", \"♚\", \"♝\", \"♞\", \"♜\"],\n  [\"♟\", \"♟\", \"♟\", \"♟\", \"♟\", \"♟\", \"♟\", \"♟\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  [\"♙\", \"♙\", \"♙\", \"♙\", \"♙\", \"♙\", \"♙\", \"♙\"],\n  [\"♖\", \"♘\", \"♗\", \"♕\", \"♔\", \"♗\", \"♘\", \"♖\"],\n];\n\nconst Chessboard = () => {\n  const [board, setBoard] = useState(initialBoardSetup);\n\n  const movePiece = (fromRow, fromCol, toRow, toCol) => {\n    setBoard((prevBoard) => {\n      const newBoard = prevBoard.map((row) => [...row]);\n      const piece = newBoard[fromRow][fromCol];\n      const targetPiece = newBoard[toRow][toCol];\n\n      if (piece === \"\") return prevBoard;\n\n      const isWhite = \"♙♖♘♗♕♔\".includes(piece);\n      const isTargetWhite = \"♟♜♞♝♛♚\".includes(targetPiece);\n\n      if (targetPiece !== \"\" && isWhite === isTargetWhite) return prevBoard;\n\n      newBoard[toRow][toCol] = piece;\n      newBoard[fromRow][fromCol] = \"\";\n\n      return newBoard;\n    });\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div\n        className=\"h-screen w-screen flex flex-col items-center justify-center bg-cover bg-center\"\n        style={{ backgroundImage: \"url('https://source.unsplash.com/1920x1080/?chess,board')\" }}\n      >\n        <h1 className=\"text-4xl font-bold mb-6 text-white bg-black bg-opacity-50 p-3 rounded-lg shadow-lg\">\n          Chess Game\n        </h1>\n        <div className=\"grid grid-cols-8 border-8 border-gray-800 shadow-2xl rounded-xl bg-gray-900 bg-opacity-70 p-1\">\n          {board.map((row, rowIndex) =>\n            row.map((piece, colIndex) => (\n              <Square\n                key={`${rowIndex}-${colIndex}`}\n                piece={piece}\n                row={rowIndex}\n                col={colIndex}\n                movePiece={movePiece}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default Chessboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}