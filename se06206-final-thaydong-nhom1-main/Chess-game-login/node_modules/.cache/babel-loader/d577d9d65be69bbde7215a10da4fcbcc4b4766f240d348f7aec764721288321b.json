{"ast":null,"code":"import { Client } from \"@stomp/stompjs\";\nconst client = new Client({\n  brokerURL: \"ws://localhost:8080/ws\",\n  reconnectDelay: 5000,\n  // T·ª± ƒë·ªông reconnect n·∫øu m·∫•t k·∫øt n·ªëi\n  debug: str => console.log(str) // Ghi log l·ªói k·∫øt n·ªëi WebSocket\n});\nclient.onConnect = () => {\n  console.log(\"‚úÖ WebSocket connected\");\n  client.subscribe(\"/topic/chess-updates\", message => {\n    try {\n      const move = JSON.parse(message.body);\n      console.log(`üì© Move received: ${move.from} -> ${move.to}`);\n      updateBoard(move);\n    } catch (error) {\n      console.error(\"üö® JSON parse error:\", error);\n    }\n  });\n};\nclient.onWebSocketClose = () => {\n  console.warn(\"üî¥ WebSocket disconnected\");\n};\nclient.onStompError = frame => {\n  console.error(\"‚ùå STOMP error:\", frame);\n};\nclient.activate();\n\n// G·ª≠i n∆∞·ªõc ƒëi l√™n server\nexport function sendMove(from, to) {\n  if (client.connected) {\n    client.publish({\n      destination: \"/app/move\",\n      body: JSON.stringify({\n        from,\n        to\n      })\n    });\n  } else {\n    console.error(\"‚ùå Cannot send move, WebSocket is not connected\");\n  }\n}\n\n// H√†m c·∫≠p nh·∫≠t b√†n c·ªù (c·∫ßn c√≥ logic c·∫≠p nh·∫≠t UI)\nfunction updateBoard(move) {\n  console.log(`‚è≥ Updating board: ${move.from} -> ${move.to}`);\n  // TODO: Th√™m code c·∫≠p nh·∫≠t UI c·ªßa b√†n c·ªù ·ªü ƒë√¢y\n}","map":{"version":3,"names":["Client","client","brokerURL","reconnectDelay","debug","str","console","log","onConnect","subscribe","message","move","JSON","parse","body","from","to","updateBoard","error","onWebSocketClose","warn","onStompError","frame","activate","sendMove","connected","publish","destination","stringify"],"sources":["D:/se06206-final-thaydong-nhom1-main/se06206-final-thaydong-nhom1-main/Chess-game-login/src/websocket/websocket.js"],"sourcesContent":["import { Client } from \"@stomp/stompjs\";\r\n\r\nconst client = new Client({\r\n    brokerURL: \"ws://localhost:8080/ws\", \r\n    reconnectDelay: 5000, // T·ª± ƒë·ªông reconnect n·∫øu m·∫•t k·∫øt n·ªëi\r\n    debug: (str) => console.log(str), // Ghi log l·ªói k·∫øt n·ªëi WebSocket\r\n});\r\n\r\nclient.onConnect = () => {\r\n    console.log(\"‚úÖ WebSocket connected\");\r\n\r\n    client.subscribe(\"/topic/chess-updates\", (message) => {\r\n        try {\r\n            const move = JSON.parse(message.body);\r\n            console.log(`üì© Move received: ${move.from} -> ${move.to}`);\r\n            updateBoard(move);\r\n        } catch (error) {\r\n            console.error(\"üö® JSON parse error:\", error);\r\n        }\r\n    });\r\n};\r\n\r\nclient.onWebSocketClose = () => {\r\n    console.warn(\"üî¥ WebSocket disconnected\");\r\n};\r\n\r\nclient.onStompError = (frame) => {\r\n    console.error(\"‚ùå STOMP error:\", frame);\r\n};\r\n\r\nclient.activate();\r\n\r\n// G·ª≠i n∆∞·ªõc ƒëi l√™n server\r\nexport function sendMove(from, to) {\r\n    if (client.connected) {\r\n        client.publish({\r\n            destination: \"/app/move\",\r\n            body: JSON.stringify({ from, to }),\r\n        });\r\n    } else {\r\n        console.error(\"‚ùå Cannot send move, WebSocket is not connected\");\r\n    }\r\n}\r\n\r\n// H√†m c·∫≠p nh·∫≠t b√†n c·ªù (c·∫ßn c√≥ logic c·∫≠p nh·∫≠t UI)\r\nfunction updateBoard(move) {\r\n    console.log(`‚è≥ Updating board: ${move.from} -> ${move.to}`);\r\n    // TODO: Th√™m code c·∫≠p nh·∫≠t UI c·ªßa b√†n c·ªù ·ªü ƒë√¢y\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,MAAM,GAAG,IAAID,MAAM,CAAC;EACtBE,SAAS,EAAE,wBAAwB;EACnCC,cAAc,EAAE,IAAI;EAAE;EACtBC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAE;AACtC,CAAC,CAAC;AAEFJ,MAAM,CAACO,SAAS,GAAG,MAAM;EACrBF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EAEpCN,MAAM,CAACQ,SAAS,CAAC,sBAAsB,EAAGC,OAAO,IAAK;IAClD,IAAI;MACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;MACrCR,OAAO,CAACC,GAAG,CAAC,qBAAqBI,IAAI,CAACI,IAAI,OAAOJ,IAAI,CAACK,EAAE,EAAE,CAAC;MAC3DC,WAAW,CAACN,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZZ,OAAO,CAACY,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC,CAAC;AACN,CAAC;AAEDjB,MAAM,CAACkB,gBAAgB,GAAG,MAAM;EAC5Bb,OAAO,CAACc,IAAI,CAAC,2BAA2B,CAAC;AAC7C,CAAC;AAEDnB,MAAM,CAACoB,YAAY,GAAIC,KAAK,IAAK;EAC7BhB,OAAO,CAACY,KAAK,CAAC,gBAAgB,EAAEI,KAAK,CAAC;AAC1C,CAAC;AAEDrB,MAAM,CAACsB,QAAQ,CAAC,CAAC;;AAEjB;AACA,OAAO,SAASC,QAAQA,CAACT,IAAI,EAAEC,EAAE,EAAE;EAC/B,IAAIf,MAAM,CAACwB,SAAS,EAAE;IAClBxB,MAAM,CAACyB,OAAO,CAAC;MACXC,WAAW,EAAE,WAAW;MACxBb,IAAI,EAAEF,IAAI,CAACgB,SAAS,CAAC;QAAEb,IAAI;QAAEC;MAAG,CAAC;IACrC,CAAC,CAAC;EACN,CAAC,MAAM;IACHV,OAAO,CAACY,KAAK,CAAC,gDAAgD,CAAC;EACnE;AACJ;;AAEA;AACA,SAASD,WAAWA,CAACN,IAAI,EAAE;EACvBL,OAAO,CAACC,GAAG,CAAC,qBAAqBI,IAAI,CAACI,IAAI,OAAOJ,IAAI,CAACK,EAAE,EAAE,CAAC;EAC3D;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}